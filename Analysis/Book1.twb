<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1211.0901                               -->
<workbook original-version='18.1' source-build='2024.3.2 (20243.24.1211.0901)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Covid 19' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2021.'>
        <calculation class='tableau' formula='2021.' />
      </column>
    </datasource>
    <datasource caption='date+ (Eco Capture)' inline='true' name='federated.0iqv7mb1pjmus0188hxnz0zonm2b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1submfq0el74t61dtn7vn1plkymo'>
            <connection class='mysql' dbname='ecocapture' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='traveller' table='[traveller]' type='table' />
          <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='countrydate' table='[countrydate]' type='table' />
          <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='activity' table='[activity]' type='table' />
          <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='country_count' table='[country_count]' type='table' />
          <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='countrybyyear' table='[countrybyyear]' type='table' />
          <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='loca_rating' table='[loca_rating]' type='table' />
          <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='location' table='[location]' type='table' />
          <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='photographycheck' table='[photographycheck]' type='table' />
          <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='wildlife_photo_rating' table='[wildlife_photo_rating]' type='table' />
        </relation>
        <cols>
          <map key='[City (location)]' value='[location].[City]' />
          <map key='[City (wildlife_photo_rating)]' value='[wildlife_photo_rating].[City]' />
          <map key='[City]' value='[loca_rating].[City]' />
          <map key='[Count_Country]' value='[country_count].[Count_Country]' />
          <map key='[Country]' value='[countrybyyear].[Country]' />
          <map key='[InputID (location)]' value='[location].[InputID]' />
          <map key='[InputID (photographycheck)]' value='[photographycheck].[InputID]' />
          <map key='[InputID (traveller)]' value='[traveller].[InputID]' />
          <map key='[InputID (wildlife_photo_rating)]' value='[wildlife_photo_rating].[InputID]' />
          <map key='[InputID]' value='[activity].[InputID]' />
          <map key='[Location]' value='[location].[Location]' />
          <map key='[Location_Type]' value='[location].[Location_Type]' />
          <map key='[Province (location)]' value='[location].[Province]' />
          <map key='[Province]' value='[loca_rating].[Province]' />
          <map key='[Travel_Date]' value='[countrydate].[Travel_Date]' />
          <map key='[Travel_Month]' value='[countrydate].[Travel_Month]' />
          <map key='[Travel_Year (loca_rating)]' value='[loca_rating].[Travel_Year]' />
          <map key='[Travel_Year (wildlife_photo_rating)]' value='[wildlife_photo_rating].[Travel_Year]' />
          <map key='[Travel_Year]' value='[countrydate].[Travel_Year]' />
          <map key='[Travel_month]' value='[wildlife_photo_rating].[Travel_month]' />
          <map key='[Traveller_Country (country_count)]' value='[country_count].[Traveller_Country]' />
          <map key='[Traveller_Country (photographycheck)]' value='[photographycheck].[Traveller_Country]' />
          <map key='[Traveller_Country (wildlife_photo_rating)]' value='[wildlife_photo_rating].[Traveller_Country]' />
          <map key='[Traveller_Country]' value='[countrydate].[Traveller_Country]' />
          <map key='[Traveller_ID (activity)]' value='[activity].[Traveller_ID]' />
          <map key='[Traveller_ID (loca_rating)]' value='[loca_rating].[Traveller_ID]' />
          <map key='[Traveller_ID (location)]' value='[location].[Traveller_ID]' />
          <map key='[Traveller_ID (photographycheck)]' value='[photographycheck].[Traveller_ID]' />
          <map key='[Traveller_ID (traveller)]' value='[traveller].[Traveller_ID]' />
          <map key='[Traveller_ID (wildlife_photo_rating)]' value='[wildlife_photo_rating].[Traveller_ID]' />
          <map key='[Traveller_ID]' value='[countrydate].[Traveller_ID]' />
          <map key='[Traveller_Location]' value='[traveller].[Traveller_Location]' />
          <map key='[Year]' value='[countrybyyear].[Year]' />
          <map key='[activity (photographycheck)]' value='[photographycheck].[activity]' />
          <map key='[activity (wildlife_photo_rating)]' value='[wildlife_photo_rating].[activity]' />
          <map key='[activity]' value='[activity].[activity]' />
          <map key='[countC]' value='[countrybyyear].[countC]' />
          <map key='[inputID (loca_rating)]' value='[loca_rating].[inputID]' />
          <map key='[inputID]' value='[countrydate].[inputID]' />
          <map key='[location_Type]' value='[wildlife_photo_rating].[location_Type]' />
          <map key='[month (loca_rating)]' value='[loca_rating].[month]' />
          <map key='[month (wildlife_photo_rating)]' value='[wildlife_photo_rating].[month]' />
          <map key='[month]' value='[countrydate].[month]' />
          <map key='[rating (wildlife_photo_rating)]' value='[wildlife_photo_rating].[rating]' />
          <map key='[rating]' value='[loca_rating].[rating]' />
          <map key='[sentiment_comments]' value='[wildlife_photo_rating].[sentiment_comments]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID (traveller)]</local-name>
            <parent-name>[traveller]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[traveller_7E5C21ACD5BA4BB79355B9C5C09C7897]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (traveller)]</local-name>
            <parent-name>[traveller]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[traveller_7E5C21ACD5BA4BB79355B9C5C09C7897]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Location]</local-name>
            <parent-name>[traveller]</parent-name>
            <remote-alias>Traveller_Location</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[traveller_7E5C21ACD5BA4BB79355B9C5C09C7897]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[inputID]</local-name>
            <parent-name>[countrydate]</parent-name>
            <remote-alias>inputID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID]</local-name>
            <parent-name>[countrydate]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country]</local-name>
            <parent-name>[countrydate]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Travel_Date]</local-name>
            <parent-name>[countrydate]</parent-name>
            <remote-alias>Travel_Date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year]</local-name>
            <parent-name>[countrydate]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Month]</local-name>
            <parent-name>[countrydate]</parent-name>
            <remote-alias>Travel_Month</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[countrydate]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID]</local-name>
            <parent-name>[activity]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[activity_26DAD5B274D0491D8E778F174D5928B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (activity)]</local-name>
            <parent-name>[activity]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[activity_26DAD5B274D0491D8E778F174D5928B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[activity]</local-name>
            <parent-name>[activity]</parent-name>
            <remote-alias>activity</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>20</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[activity_26DAD5B274D0491D8E778F174D5928B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (country_count)]</local-name>
            <parent-name>[country_count]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[country_count_2E8727E42A1841C39D4D564AE8CEA4DB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count_Country</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count_Country]</local-name>
            <parent-name>[country_count]</parent-name>
            <remote-alias>Count_Country</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[country_count_2E8727E42A1841C39D4D564AE8CEA4DB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[countrybyyear]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[countrybyyear]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countC</remote-name>
            <remote-type>20</remote-type>
            <local-name>[countC]</local-name>
            <parent-name>[countrybyyear]</parent-name>
            <remote-alias>countC</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[inputID (loca_rating)]</local-name>
            <parent-name>[loca_rating]</parent-name>
            <remote-alias>inputID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (loca_rating)]</local-name>
            <parent-name>[loca_rating]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (loca_rating)]</local-name>
            <parent-name>[loca_rating]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (loca_rating)]</local-name>
            <parent-name>[loca_rating]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[loca_rating]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[loca_rating]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Province]</local-name>
            <parent-name>[loca_rating]</parent-name>
            <remote-alias>Province</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID (location)]</local-name>
            <parent-name>[location]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[location_6C9BA107ED71463685AF57D29A380730]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (location)]</local-name>
            <parent-name>[location]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[location_6C9BA107ED71463685AF57D29A380730]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[location]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[location_6C9BA107ED71463685AF57D29A380730]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City (location)]</local-name>
            <parent-name>[location]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[location_6C9BA107ED71463685AF57D29A380730]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Province (location)]</local-name>
            <parent-name>[location]</parent-name>
            <remote-alias>Province</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[location_6C9BA107ED71463685AF57D29A380730]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location_Type]</local-name>
            <parent-name>[location]</parent-name>
            <remote-alias>Location_Type</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[location_6C9BA107ED71463685AF57D29A380730]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID (photographycheck)]</local-name>
            <parent-name>[photographycheck]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (photographycheck)]</local-name>
            <parent-name>[photographycheck]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[activity (photographycheck)]</local-name>
            <parent-name>[photographycheck]</parent-name>
            <remote-alias>activity</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>20</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (photographycheck)]</local-name>
            <parent-name>[photographycheck]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID (wildlife_photo_rating)]</local-name>
            <parent-name>[wildlife_photo_rating]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (wildlife_photo_rating)]</local-name>
            <parent-name>[wildlife_photo_rating]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[activity (wildlife_photo_rating)]</local-name>
            <parent-name>[wildlife_photo_rating]</parent-name>
            <remote-alias>activity</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>20</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (wildlife_photo_rating)]</local-name>
            <parent-name>[wildlife_photo_rating]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City (wildlife_photo_rating)]</local-name>
            <parent-name>[wildlife_photo_rating]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location_Type]</local-name>
            <parent-name>[wildlife_photo_rating]</parent-name>
            <remote-alias>location_Type</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating (wildlife_photo_rating)]</local-name>
            <parent-name>[wildlife_photo_rating]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_comments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sentiment_comments]</local-name>
            <parent-name>[wildlife_photo_rating]</parent-name>
            <remote-alias>sentiment_comments</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (wildlife_photo_rating)]</local-name>
            <parent-name>[wildlife_photo_rating]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month]</local-name>
            <parent-name>[wildlife_photo_rating]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (wildlife_photo_rating)]</local-name>
            <parent-name>[wildlife_photo_rating]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City (location)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='City (wildlife photo rating)' datatype='string' name='[City (wildlife_photo_rating)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Ahangama&quot;' value='&quot;Southern&quot;' />
        </semantic-values>
      </column>
      <column caption='Count Country' datatype='integer' name='[Count_Country]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[InputID (location)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[InputID (photographycheck)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[InputID (traveller)]' role='dimension' type='ordinal' />
      <column caption='InputID (wildlife photo rating)' datatype='integer' name='[InputID (wildlife_photo_rating)]' role='dimension' type='ordinal' />
      <column caption='Input ID1' datatype='integer' name='[InputID]' role='dimension' type='ordinal' />
      <column caption='Location Type' datatype='string' name='[Location_Type]' role='dimension' type='nominal' />
      <column datatype='string' name='[Province (location)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot; Anuradhapura, North Central Province&quot;' value='&quot;North Central&quot;' />
          <semantic-value key='&quot; Eastern Province&quot;' value='&quot;Eastern&quot;' />
          <semantic-value key='&quot; Galle District, Southern Province&quot;' value='&quot;Southern&quot;' />
          <semantic-value key='&quot; Kandy District, Central Province&quot;' value='&quot;Central&quot;' />
          <semantic-value key='&quot; Sabaragamuwa Province&quot;' value='&quot;Sabaragamuwa&quot;' />
          <semantic-value key='&quot; Tangalle, Southern Province&quot;' value='&quot;Southern&quot;' />
          <semantic-value key='&quot; Uva Province&quot;' value='&quot;Uva&quot;' />
        </semantic-values>
      </column>
      <column caption='Travel Date' datatype='string' name='[Travel_Date]' role='dimension' type='nominal' />
      <column caption='Travel Month' datatype='integer' name='[Travel_Month]' role='dimension' type='quantitative' />
      <column caption='Travel Year (loca rating)' datatype='integer' name='[Travel_Year (loca_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel Year' datatype='integer' name='[Travel_Year]' role='dimension' type='quantitative' />
      <column caption='Traveller Country (country count)' datatype='string' name='[Traveller_Country (country_count)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller Country (photographycheck)' datatype='string' name='[Traveller_Country (photographycheck)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller Country (wildlife photo rating)' datatype='string' name='[Traveller_Country (wildlife_photo_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller Country' datatype='string' name='[Traveller_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller ID (activity)' datatype='integer' name='[Traveller_ID (activity)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID (loca rating)' datatype='integer' name='[Traveller_ID (loca_rating)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID (location)' datatype='integer' name='[Traveller_ID (location)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID (photographycheck)' datatype='integer' name='[Traveller_ID (photographycheck)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID (traveller)' datatype='integer' name='[Traveller_ID (traveller)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID (wildlife photo rating)' datatype='integer' name='[Traveller_ID (wildlife_photo_rating)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID' datatype='integer' name='[Traveller_ID]' role='dimension' type='ordinal' />
      <column caption='Traveller Location' datatype='string' name='[Traveller_Location]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='activity' datatype='table' name='[__tableau_internal_object_id__].[activity_26DAD5B274D0491D8E778F174D5928B5]' role='measure' type='quantitative' />
      <column caption='country_count' datatype='table' name='[__tableau_internal_object_id__].[country_count_2E8727E42A1841C39D4D564AE8CEA4DB]' role='measure' type='quantitative' />
      <column caption='countrybyyear' datatype='table' name='[__tableau_internal_object_id__].[countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95]' role='measure' type='quantitative' />
      <column caption='countrydate' datatype='table' name='[__tableau_internal_object_id__].[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]' role='measure' type='quantitative' />
      <column caption='loca_rating' datatype='table' name='[__tableau_internal_object_id__].[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]' role='measure' type='quantitative' />
      <column caption='location' datatype='table' name='[__tableau_internal_object_id__].[location_6C9BA107ED71463685AF57D29A380730]' role='measure' type='quantitative' />
      <column caption='photographycheck1' datatype='table' name='[__tableau_internal_object_id__].[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]' role='measure' type='quantitative' />
      <column caption='traveller' datatype='table' name='[__tableau_internal_object_id__].[traveller_7E5C21ACD5BA4BB79355B9C5C09C7897]' role='measure' type='quantitative' />
      <column caption='wildlife_photo_rating' datatype='table' name='[__tableau_internal_object_id__].[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]' role='measure' type='quantitative' />
      <column caption='Activity (Photographycheck)' datatype='string' name='[activity (photographycheck)]' role='dimension' type='nominal' />
      <column caption='Activity (Wildlife Photo Rating)' datatype='string' name='[activity (wildlife_photo_rating)]' role='dimension' type='nominal' />
      <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Beach_Water_Sports&quot;' value='Beach,Water and Sports' />
          <alias key='&quot;Biking_cycling&quot;' value='Biking and Cycling' />
          <alias key='&quot;Hiking_climbing&quot;' value='Hiking and Climbing' />
          <alias key='&quot;Historical_Sites&quot;' value='Historical Sites' />
          <alias key='&quot;photography&quot;' value='Photography' />
          <alias key='&quot;Rafting_Kayaking&quot;' value='Rafting Kayaking' />
          <alias key='&quot;Romantic_holiday&quot;' value='Romantic holiday' />
          <alias key='&quot;wildlife_nature&quot;' value='Wildlife and nature' />
          <alias key='&quot;Wildlife_photography&quot;' value='Wildlife photography' />
        </aliases>
      </column>
      <column caption='Count C' datatype='integer' name='[countC]' role='measure' type='quantitative' />
      <column caption='inputID (loca rating)' datatype='integer' name='[inputID (loca_rating)]' role='dimension' type='ordinal' />
      <column caption='Input ID' datatype='integer' name='[inputID]' role='dimension' type='ordinal' />
      <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
      <column caption='Month (Loca Rating)' datatype='string' name='[month (loca_rating)]' role='dimension' type='nominal' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Rating (Wildlife Photo Rating)' datatype='integer' name='[rating (wildlife_photo_rating)]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]' derivation='Count' name='[__tableau_internal_object_id__].[cum:cnt:wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[rating (wildlife_photo_rating)]' derivation='Count' name='[cnt:rating (wildlife_photo_rating):qk]' pivot='key' type='quantitative' />
      <column-instance column='[rating (wildlife_photo_rating)]' derivation='Sum' name='[diff:sum:rating (wildlife_photo_rating):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country (photographycheck)]' derivation='None' name='[none:Traveller_Country (photographycheck):nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country (wildlife_photo_rating)]' derivation='None' name='[none:Traveller_Country (wildlife_photo_rating):nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country]' derivation='None' name='[none:Traveller_Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[activity (wildlife_photo_rating)]' derivation='None' name='[none:activity (wildlife_photo_rating):nk]' pivot='key' type='nominal' />
      <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
      <column-instance column='[rating (wildlife_photo_rating)]' derivation='None' name='[none:rating (wildlife_photo_rating):qk]' pivot='key' type='quantitative' />
      <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
      <column-instance column='[rating (wildlife_photo_rating)]' derivation='Sum' name='[sum:rating (wildlife_photo_rating):qk]' pivot='key' type='quantitative' />
      <group caption='Action (Travel Year (fromcountrydate),Traveller Country (fromcountrydate))' hidden='true' name='[Action (Travel Year (fromcountrydate),Traveller Country (fromcountrydate))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Travel_Year (fromcountrydate):ok]' />
          <groupfilter function='level-members' level='[Traveller_Country (fromcountrydate)]' />
        </groupfilter>
      </group>
      <group caption='Action (Travel_Year (visit_date))' hidden='true' name='[Action (Travel_Year (visit_date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Travel_Year (visit_date):ok]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='false' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='G:/BrainStation/Poject/Tableau book/date+ (project).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='01/18/2025 11:22:35 PM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='traveller_7E5C21ACD5BA4BB79355B9C5C09C7897' table='[Extract].[traveller_7E5C21ACD5BA4BB79355B9C5C09C7897]' type='table' />
            <relation name='countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A' table='[Extract].[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]' type='table' />
            <relation name='activity_26DAD5B274D0491D8E778F174D5928B5' table='[Extract].[activity_26DAD5B274D0491D8E778F174D5928B5]' type='table' />
            <relation name='country_count_2E8727E42A1841C39D4D564AE8CEA4DB' table='[Extract].[country_count_2E8727E42A1841C39D4D564AE8CEA4DB]' type='table' />
            <relation name='countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95' table='[Extract].[countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95]' type='table' />
            <relation name='loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8' table='[Extract].[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]' type='table' />
            <relation name='location_6C9BA107ED71463685AF57D29A380730' table='[Extract].[location_6C9BA107ED71463685AF57D29A380730]' type='table' />
            <relation name='photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC' table='[Extract].[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]' type='table' />
            <relation name='wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C' table='[Extract].[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]' type='table' />
          </relation>
          <cols>
            <map key='[City (location)]' value='[location_6C9BA107ED71463685AF57D29A380730].[City]' />
            <map key='[City (wildlife_photo_rating)]' value='[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C].[City]' />
            <map key='[City]' value='[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8].[City]' />
            <map key='[Count_Country]' value='[country_count_2E8727E42A1841C39D4D564AE8CEA4DB].[Count_Country]' />
            <map key='[Country]' value='[countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95].[Country]' />
            <map key='[InputID (location)]' value='[location_6C9BA107ED71463685AF57D29A380730].[InputID]' />
            <map key='[InputID (photographycheck)]' value='[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC].[InputID]' />
            <map key='[InputID (traveller)]' value='[traveller_7E5C21ACD5BA4BB79355B9C5C09C7897].[InputID]' />
            <map key='[InputID (wildlife_photo_rating)]' value='[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C].[InputID]' />
            <map key='[InputID]' value='[activity_26DAD5B274D0491D8E778F174D5928B5].[InputID]' />
            <map key='[Location]' value='[location_6C9BA107ED71463685AF57D29A380730].[Location]' />
            <map key='[Location_Type]' value='[location_6C9BA107ED71463685AF57D29A380730].[Location_Type]' />
            <map key='[Province (location)]' value='[location_6C9BA107ED71463685AF57D29A380730].[Province]' />
            <map key='[Province]' value='[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8].[Province]' />
            <map key='[Travel_Date]' value='[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A].[Travel_Date]' />
            <map key='[Travel_Month]' value='[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A].[Travel_Month]' />
            <map key='[Travel_Year (loca_rating)]' value='[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8].[Travel_Year]' />
            <map key='[Travel_Year (wildlife_photo_rating)]' value='[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C].[Travel_Year]' />
            <map key='[Travel_Year]' value='[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A].[Travel_Year]' />
            <map key='[Travel_month]' value='[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C].[Travel_month]' />
            <map key='[Traveller_Country (country_count)]' value='[country_count_2E8727E42A1841C39D4D564AE8CEA4DB].[Traveller_Country]' />
            <map key='[Traveller_Country (photographycheck)]' value='[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC].[Traveller_Country]' />
            <map key='[Traveller_Country (wildlife_photo_rating)]' value='[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C].[Traveller_Country]' />
            <map key='[Traveller_Country]' value='[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A].[Traveller_Country]' />
            <map key='[Traveller_ID (activity)]' value='[activity_26DAD5B274D0491D8E778F174D5928B5].[Traveller_ID]' />
            <map key='[Traveller_ID (loca_rating)]' value='[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8].[Traveller_ID]' />
            <map key='[Traveller_ID (location)]' value='[location_6C9BA107ED71463685AF57D29A380730].[Traveller_ID]' />
            <map key='[Traveller_ID (photographycheck)]' value='[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC].[Traveller_ID]' />
            <map key='[Traveller_ID (traveller)]' value='[traveller_7E5C21ACD5BA4BB79355B9C5C09C7897].[Traveller_ID]' />
            <map key='[Traveller_ID (wildlife_photo_rating)]' value='[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C].[Traveller_ID]' />
            <map key='[Traveller_ID]' value='[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A].[Traveller_ID]' />
            <map key='[Traveller_Location]' value='[traveller_7E5C21ACD5BA4BB79355B9C5C09C7897].[Traveller_Location]' />
            <map key='[Year]' value='[countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95].[Year]' />
            <map key='[activity (photographycheck)]' value='[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC].[activity]' />
            <map key='[activity (wildlife_photo_rating)]' value='[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C].[activity]' />
            <map key='[activity]' value='[activity_26DAD5B274D0491D8E778F174D5928B5].[activity]' />
            <map key='[countC]' value='[countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95].[countC]' />
            <map key='[inputID (loca_rating)]' value='[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8].[inputID]' />
            <map key='[inputID]' value='[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A].[inputID]' />
            <map key='[location_Type]' value='[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C].[location_Type]' />
            <map key='[month (loca_rating)]' value='[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8].[month]' />
            <map key='[month (wildlife_photo_rating)]' value='[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C].[month]' />
            <map key='[month]' value='[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A].[month]' />
            <map key='[rating (wildlife_photo_rating)]' value='[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C].[rating]' />
            <map key='[rating]' value='[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8].[rating]' />
            <map key='[sentiment_comments]' value='[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C].[sentiment_comments]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='date+ (Eco Capture)' increment-value='%null%' refresh-type='create' rows-inserted='91000' timestamp-start='2025-01-18 23:22:32.792' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>InputID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[InputID (traveller)]</local-name>
              <parent-name>[traveller_7E5C21ACD5BA4BB79355B9C5C09C7897]</parent-name>
              <remote-alias>InputID</remote-alias>
              <ordinal>0</ordinal>
              <family>traveller</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16156</approx-count>
              <contains-null>true</contains-null>
              <object-id>[traveller_7E5C21ACD5BA4BB79355B9C5C09C7897]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Traveller_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Traveller_ID (traveller)]</local-name>
              <parent-name>[traveller_7E5C21ACD5BA4BB79355B9C5C09C7897]</parent-name>
              <remote-alias>Traveller_ID</remote-alias>
              <ordinal>1</ordinal>
              <family>traveller</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5714</approx-count>
              <contains-null>true</contains-null>
              <object-id>[traveller_7E5C21ACD5BA4BB79355B9C5C09C7897]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Traveller_Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Traveller_Location]</local-name>
              <parent-name>[traveller_7E5C21ACD5BA4BB79355B9C5C09C7897]</parent-name>
              <remote-alias>Traveller_Location</remote-alias>
              <ordinal>2</ordinal>
              <family>traveller</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1872</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[traveller_7E5C21ACD5BA4BB79355B9C5C09C7897]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>inputID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[inputID]</local-name>
              <parent-name>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</parent-name>
              <remote-alias>inputID</remote-alias>
              <ordinal>3</ordinal>
              <family>countrydate</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16156</approx-count>
              <contains-null>true</contains-null>
              <object-id>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Traveller_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Traveller_ID]</local-name>
              <parent-name>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</parent-name>
              <remote-alias>Traveller_ID</remote-alias>
              <ordinal>4</ordinal>
              <family>countrydate</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5351</approx-count>
              <contains-null>true</contains-null>
              <object-id>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Traveller_Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Traveller_Country]</local-name>
              <parent-name>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</parent-name>
              <remote-alias>Traveller_Country</remote-alias>
              <ordinal>5</ordinal>
              <family>countrydate</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>138</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Travel_Date</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Travel_Date]</local-name>
              <parent-name>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</parent-name>
              <remote-alias>Travel_Date</remote-alias>
              <ordinal>6</ordinal>
              <family>countrydate</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>174</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Travel_Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Travel_Year]</local-name>
              <parent-name>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</parent-name>
              <remote-alias>Travel_Year</remote-alias>
              <ordinal>7</ordinal>
              <family>countrydate</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <object-id>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Travel_Month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Travel_Month]</local-name>
              <parent-name>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</parent-name>
              <remote-alias>Travel_Month</remote-alias>
              <ordinal>8</ordinal>
              <family>countrydate</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <object-id>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>9</ordinal>
              <family>countrydate</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>InputID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[InputID]</local-name>
              <parent-name>[activity_26DAD5B274D0491D8E778F174D5928B5]</parent-name>
              <remote-alias>InputID</remote-alias>
              <ordinal>10</ordinal>
              <family>activity</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7566</approx-count>
              <contains-null>true</contains-null>
              <object-id>[activity_26DAD5B274D0491D8E778F174D5928B5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Traveller_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Traveller_ID (activity)]</local-name>
              <parent-name>[activity_26DAD5B274D0491D8E778F174D5928B5]</parent-name>
              <remote-alias>Traveller_ID</remote-alias>
              <ordinal>11</ordinal>
              <family>activity</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5088</approx-count>
              <contains-null>true</contains-null>
              <object-id>[activity_26DAD5B274D0491D8E778F174D5928B5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>activity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[activity]</local-name>
              <parent-name>[activity_26DAD5B274D0491D8E778F174D5928B5]</parent-name>
              <remote-alias>activity</remote-alias>
              <ordinal>12</ordinal>
              <family>activity</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <object-id>[activity_26DAD5B274D0491D8E778F174D5928B5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Traveller_Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Traveller_Country (country_count)]</local-name>
              <parent-name>[country_count_2E8727E42A1841C39D4D564AE8CEA4DB]</parent-name>
              <remote-alias>Traveller_Country</remote-alias>
              <ordinal>13</ordinal>
              <family>country_count</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[country_count_2E8727E42A1841C39D4D564AE8CEA4DB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Count_Country</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Count_Country]</local-name>
              <parent-name>[country_count_2E8727E42A1841C39D4D564AE8CEA4DB]</parent-name>
              <remote-alias>Count_Country</remote-alias>
              <ordinal>14</ordinal>
              <family>country_count</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <object-id>[country_count_2E8727E42A1841C39D4D564AE8CEA4DB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>15</ordinal>
              <family>countrybyyear</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <object-id>[countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>16</ordinal>
              <family>countrybyyear</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>151</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>countC</remote-name>
              <remote-type>20</remote-type>
              <local-name>[countC]</local-name>
              <parent-name>[countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95]</parent-name>
              <remote-alias>countC</remote-alias>
              <ordinal>17</ordinal>
              <family>countrybyyear</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <object-id>[countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>inputID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[inputID (loca_rating)]</local-name>
              <parent-name>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</parent-name>
              <remote-alias>inputID</remote-alias>
              <ordinal>18</ordinal>
              <family>loca_rating</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16156</approx-count>
              <contains-null>true</contains-null>
              <object-id>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Traveller_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Traveller_ID (loca_rating)]</local-name>
              <parent-name>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</parent-name>
              <remote-alias>Traveller_ID</remote-alias>
              <ordinal>19</ordinal>
              <family>loca_rating</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5705</approx-count>
              <contains-null>true</contains-null>
              <object-id>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Travel_Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Travel_Year (loca_rating)]</local-name>
              <parent-name>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</parent-name>
              <remote-alias>Travel_Year</remote-alias>
              <ordinal>20</ordinal>
              <family>loca_rating</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <object-id>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[month (loca_rating)]</local-name>
              <parent-name>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>21</ordinal>
              <family>loca_rating</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rating</remote-name>
              <remote-type>20</remote-type>
              <local-name>[rating]</local-name>
              <parent-name>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</parent-name>
              <remote-alias>rating</remote-alias>
              <ordinal>22</ordinal>
              <family>loca_rating</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>23</ordinal>
              <family>loca_rating</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Province</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Province]</local-name>
              <parent-name>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</parent-name>
              <remote-alias>Province</remote-alias>
              <ordinal>24</ordinal>
              <family>loca_rating</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>InputID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[InputID (location)]</local-name>
              <parent-name>[location_6C9BA107ED71463685AF57D29A380730]</parent-name>
              <remote-alias>InputID</remote-alias>
              <ordinal>25</ordinal>
              <family>location</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16156</approx-count>
              <contains-null>true</contains-null>
              <object-id>[location_6C9BA107ED71463685AF57D29A380730]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Traveller_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Traveller_ID (location)]</local-name>
              <parent-name>[location_6C9BA107ED71463685AF57D29A380730]</parent-name>
              <remote-alias>Traveller_ID</remote-alias>
              <ordinal>26</ordinal>
              <family>location</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5884</approx-count>
              <contains-null>true</contains-null>
              <object-id>[location_6C9BA107ED71463685AF57D29A380730]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[location_6C9BA107ED71463685AF57D29A380730]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>27</ordinal>
              <family>location</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>78</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[location_6C9BA107ED71463685AF57D29A380730]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City (location)]</local-name>
              <parent-name>[location_6C9BA107ED71463685AF57D29A380730]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>28</ordinal>
              <family>location</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[location_6C9BA107ED71463685AF57D29A380730]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Province</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Province (location)]</local-name>
              <parent-name>[location_6C9BA107ED71463685AF57D29A380730]</parent-name>
              <remote-alias>Province</remote-alias>
              <ordinal>29</ordinal>
              <family>location</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[location_6C9BA107ED71463685AF57D29A380730]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Location_Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location_Type]</local-name>
              <parent-name>[location_6C9BA107ED71463685AF57D29A380730]</parent-name>
              <remote-alias>Location_Type</remote-alias>
              <ordinal>30</ordinal>
              <family>location</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[location_6C9BA107ED71463685AF57D29A380730]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>InputID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[InputID (photographycheck)]</local-name>
              <parent-name>[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]</parent-name>
              <remote-alias>InputID</remote-alias>
              <ordinal>31</ordinal>
              <family>photographycheck</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4005</approx-count>
              <contains-null>true</contains-null>
              <object-id>[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Traveller_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Traveller_ID (photographycheck)]</local-name>
              <parent-name>[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]</parent-name>
              <remote-alias>Traveller_ID</remote-alias>
              <ordinal>32</ordinal>
              <family>photographycheck</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3165</approx-count>
              <contains-null>true</contains-null>
              <object-id>[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>activity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[activity (photographycheck)]</local-name>
              <parent-name>[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]</parent-name>
              <remote-alias>activity</remote-alias>
              <ordinal>33</ordinal>
              <family>photographycheck</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <object-id>[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Traveller_Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Traveller_Country (photographycheck)]</local-name>
              <parent-name>[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]</parent-name>
              <remote-alias>Traveller_Country</remote-alias>
              <ordinal>34</ordinal>
              <family>photographycheck</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>129</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>InputID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[InputID (wildlife_photo_rating)]</local-name>
              <parent-name>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</parent-name>
              <remote-alias>InputID</remote-alias>
              <ordinal>35</ordinal>
              <family>wildlife_photo_rating</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>404</approx-count>
              <contains-null>true</contains-null>
              <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Traveller_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Traveller_ID (wildlife_photo_rating)]</local-name>
              <parent-name>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</parent-name>
              <remote-alias>Traveller_ID</remote-alias>
              <ordinal>36</ordinal>
              <family>wildlife_photo_rating</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>392</approx-count>
              <contains-null>true</contains-null>
              <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>activity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[activity (wildlife_photo_rating)]</local-name>
              <parent-name>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</parent-name>
              <remote-alias>activity</remote-alias>
              <ordinal>37</ordinal>
              <family>wildlife_photo_rating</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Traveller_Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Traveller_Country (wildlife_photo_rating)]</local-name>
              <parent-name>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</parent-name>
              <remote-alias>Traveller_Country</remote-alias>
              <ordinal>38</ordinal>
              <family>wildlife_photo_rating</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City (wildlife_photo_rating)]</local-name>
              <parent-name>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>39</ordinal>
              <family>wildlife_photo_rating</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location_Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location_Type]</local-name>
              <parent-name>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</parent-name>
              <remote-alias>location_Type</remote-alias>
              <ordinal>40</ordinal>
              <family>wildlife_photo_rating</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rating</remote-name>
              <remote-type>20</remote-type>
              <local-name>[rating (wildlife_photo_rating)]</local-name>
              <parent-name>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</parent-name>
              <remote-alias>rating</remote-alias>
              <ordinal>41</ordinal>
              <family>wildlife_photo_rating</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sentiment_comments</remote-name>
              <remote-type>129</remote-type>
              <local-name>[sentiment_comments]</local-name>
              <parent-name>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</parent-name>
              <remote-alias>sentiment_comments</remote-alias>
              <ordinal>42</ordinal>
              <family>wildlife_photo_rating</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Travel_Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Travel_Year (wildlife_photo_rating)]</local-name>
              <parent-name>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</parent-name>
              <remote-alias>Travel_Year</remote-alias>
              <ordinal>43</ordinal>
              <family>wildlife_photo_rating</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Travel_month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Travel_month]</local-name>
              <parent-name>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</parent-name>
              <remote-alias>Travel_month</remote-alias>
              <ordinal>44</ordinal>
              <family>wildlife_photo_rating</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[month (wildlife_photo_rating)]</local-name>
              <parent-name>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>45</ordinal>
              <family>wildlife_photo_rating</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <object-id>[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout common-percentage='0.969415' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0305851' rowDisplayCount='100' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Isle of Skye&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldvies&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mariana Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niederlande&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Schweiz&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Near Prague&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Reunion Island&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stewart Island&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eswatini (Swaziland)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pays-Bas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pays-Bas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Schweiz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Skye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldvies&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mariana Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niederlande&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Near Prague&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reunion Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stewart Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini (Swaziland)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country (photographycheck):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldvies&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Schweiz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Near Prague&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country (wildlife_photo_rating):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maldvies&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Near Prague&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eswatini (Swaziland)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niederlande&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isle of Skye&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Schweiz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:rating (wildlife_photo_rating):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cum:cnt:wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[pcto:cnt:wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[diff:sum:rating (wildlife_photo_rating):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating (wildlife_photo_rating):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:rating (wildlife_photo_rating):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:sentiment_comments:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;neutral&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;positive&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;negative&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:activity:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;photography&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;wildlife_nature&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romantic_holiday&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sightseeing&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Wildlife_photography&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beach_Water_Sports&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Relaxing&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Historical_Sites&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Religious&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Biking_cycling&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hiking_climbing&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:activity (wildlife_photo_rating):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Sightseeing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beach_Water_Sports&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;photography&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;wildlife_nature&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Relaxing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Biking_cycling&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Religious&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wildlife_photography&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romantic_holiday&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hiking_climbing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Historical_Sites&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;Sri Lanka&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='activity' id='activity_26DAD5B274D0491D8E778F174D5928B5'>
            <properties context=''>
              <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='activity' table='[activity]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='activity_26DAD5B274D0491D8E778F174D5928B5' table='[Extract].[activity_26DAD5B274D0491D8E778F174D5928B5]' type='table' />
            </properties>
          </object>
          <object caption='country_count' id='country_count_2E8727E42A1841C39D4D564AE8CEA4DB'>
            <properties context=''>
              <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='country_count' table='[country_count]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='country_count_2E8727E42A1841C39D4D564AE8CEA4DB' table='[Extract].[country_count_2E8727E42A1841C39D4D564AE8CEA4DB]' type='table' />
            </properties>
          </object>
          <object caption='countrybyyear' id='countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95'>
            <properties context=''>
              <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='countrybyyear' table='[countrybyyear]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95' table='[Extract].[countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95]' type='table' />
            </properties>
          </object>
          <object caption='countrydate' id='countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A'>
            <properties context=''>
              <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='countrydate' table='[countrydate]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A' table='[Extract].[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]' type='table' />
            </properties>
          </object>
          <object caption='loca_rating' id='loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8'>
            <properties context=''>
              <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='loca_rating' table='[loca_rating]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8' table='[Extract].[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]' type='table' />
            </properties>
          </object>
          <object caption='location' id='location_6C9BA107ED71463685AF57D29A380730'>
            <properties context=''>
              <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='location' table='[location]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='location_6C9BA107ED71463685AF57D29A380730' table='[Extract].[location_6C9BA107ED71463685AF57D29A380730]' type='table' />
            </properties>
          </object>
          <object caption='photographycheck1' id='photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC'>
            <properties context=''>
              <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='photographycheck' table='[photographycheck]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC' table='[Extract].[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]' type='table' />
            </properties>
          </object>
          <object caption='traveller' id='traveller_7E5C21ACD5BA4BB79355B9C5C09C7897'>
            <properties context=''>
              <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='traveller' table='[traveller]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='traveller_7E5C21ACD5BA4BB79355B9C5C09C7897' table='[Extract].[traveller_7E5C21ACD5BA4BB79355B9C5C09C7897]' type='table' />
            </properties>
          </object>
          <object caption='wildlife_photo_rating' id='wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C'>
            <properties context=''>
              <relation connection='mysql.1submfq0el74t61dtn7vn1plkymo' name='wildlife_photo_rating' table='[wildlife_photo_rating]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C' table='[Extract].[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID]' />
            </expression>
            <first-end-point object-id='countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A' />
            <second-end-point object-id='activity_26DAD5B274D0491D8E778F174D5928B5' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Traveller_Country]' />
              <expression op='[Traveller_Country (country_count)]' />
            </expression>
            <first-end-point object-id='countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A' />
            <second-end-point object-id='country_count_2E8727E42A1841C39D4D564AE8CEA4DB' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Travel_Year]' />
              <expression op='[Year]' />
            </expression>
            <first-end-point object-id='countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A' />
            <second-end-point object-id='countrybyyear_C3AC4D0FA75A4BA7AF7F6DC2D37B8C95' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[InputID (traveller)]' />
              <expression op='[inputID]' />
            </expression>
            <first-end-point object-id='traveller_7E5C21ACD5BA4BB79355B9C5C09C7897' unique-key='true' />
            <second-end-point object-id='countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[inputID (loca_rating)]' />
            </expression>
            <first-end-point object-id='countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A' unique-key='true' />
            <second-end-point object-id='loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID (location)]' />
            </expression>
            <first-end-point object-id='countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A' unique-key='true' />
            <second-end-point object-id='location_6C9BA107ED71463685AF57D29A380730' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID (photographycheck)]' />
            </expression>
            <first-end-point object-id='countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A' />
            <second-end-point object-id='photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID (wildlife_photo_rating)]' />
            </expression>
            <first-end-point object-id='countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A' />
            <second-end-point object-id='wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Act Traveller Rating'>
      <table>
        <view>
          <datasources>
            <datasource caption='date+ (Eco Capture)' name='federated.0iqv7mb1pjmus0188hxnz0zonm2b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iqv7mb1pjmus0188hxnz0zonm2b'>
            <column caption='Traveller ID (loca rating)' datatype='integer' name='[Traveller_ID (loca_rating)]' role='dimension' type='ordinal' />
            <column caption='Traveller ID (location)' datatype='integer' name='[Traveller_ID (location)]' role='dimension' type='ordinal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Traveller_ID (loca_rating)]' derivation='Sum' name='[pcto:sum:Traveller_ID (loca_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column-instance column='[Traveller_ID (loca_rating)]' derivation='Sum' name='[sum:Traveller_ID (loca_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_ID (location)]' derivation='Sum' name='[sum:Traveller_ID (location):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating:ok]' />
              <wedge-size column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:Traveller_ID (loca_rating):qk]' />
              <size column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:Traveller_ID (loca_rating):qk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:Traveller_ID (location):qk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[pcto:sum:Traveller_ID (loca_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D953227D-8820-4B98-83F3-3DE17CC62A95}' />
    </worksheet>
    <worksheet name='Activity'>
      <table>
        <view>
          <datasources>
            <datasource caption='date+ (Eco Capture)' name='federated.0iqv7mb1pjmus0188hxnz0zonm2b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iqv7mb1pjmus0188hxnz0zonm2b'>
            <column caption='activity' datatype='table' name='[__tableau_internal_object_id__].[activity_26DAD5B274D0491D8E778F174D5928B5]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[activity_26DAD5B274D0491D8E778F174D5928B5]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:activity_26DAD5B274D0491D8E778F174D5928B5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[activity_26DAD5B274D0491D8E778F174D5928B5]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:activity_26DAD5B274D0491D8E778F174D5928B5:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Beach_Water_Sports&quot;' value='Beach,Water and Sports' />
                <alias key='&quot;Biking_cycling&quot;' value='Biking and Cycling' />
                <alias key='&quot;Hiking_climbing&quot;' value='Hiking and Climbing' />
                <alias key='&quot;Historical_Sites&quot;' value='Historical Sites' />
                <alias key='&quot;photography&quot;' value='Photography' />
                <alias key='&quot;Rafting_Kayaking&quot;' value='Rafting Kayaking' />
                <alias key='&quot;Romantic_holiday&quot;' value='Romantic holiday' />
                <alias key='&quot;wildlife_nature&quot;' value='Wildlife and nature' />
                <alias key='&quot;Wildlife_photography&quot;' value='Wildlife photography' />
              </aliases>
            </column>
            <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:activity_26DAD5B274D0491D8E778F174D5928B5:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity:nk]' value='94' />
            <format attr='font-size' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity:nk]' value='8' />
            <format attr='font-style' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity:nk]' value='italic' />
            <format attr='width' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:activity:qk]' value='94' />
            <format attr='font-size' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:activity:qk]' value='8' />
            <format attr='font-style' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:activity:qk]' value='italic' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:activity:qk]' value='-90' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#0000008b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:activity_26DAD5B274D0491D8E778F174D5928B5:qk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:activity:qk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[pcto:cnt:activity_26DAD5B274D0491D8E778F174D5928B5:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:activity_26DAD5B274D0491D8E778F174D5928B5:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:activity_26DAD5B274D0491D8E778F174D5928B5:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:activity_26DAD5B274D0491D8E778F174D5928B5:qk]</rows>
        <cols>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity:nk]</cols>
      </table>
      <simple-id uuid='{C480E933-9479-4E05-819B-A1AF968BA253}' />
    </worksheet>
    <worksheet name='Activity rating'>
      <table>
        <view>
          <datasources>
            <datasource caption='date+ (Eco Capture)' name='federated.0iqv7mb1pjmus0188hxnz0zonm2b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iqv7mb1pjmus0188hxnz0zonm2b'>
            <column caption='loca_rating' datatype='table' name='[__tableau_internal_object_id__].[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Beach_Water_Sports&quot;' value='Beach,Water and Sports' />
                <alias key='&quot;Biking_cycling&quot;' value='Biking and Cycling' />
                <alias key='&quot;Hiking_climbing&quot;' value='Hiking and Climbing' />
                <alias key='&quot;Historical_Sites&quot;' value='Historical Sites' />
                <alias key='&quot;photography&quot;' value='Photography' />
                <alias key='&quot;Rafting_Kayaking&quot;' value='Rafting Kayaking' />
                <alias key='&quot;Romantic_holiday&quot;' value='Romantic holiday' />
                <alias key='&quot;wildlife_nature&quot;' value='Wildlife and nature' />
                <alias key='&quot;Wildlife_photography&quot;' value='Wildlife photography' />
              </aliases>
            </column>
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column-instance column='[rating]' derivation='Sum' name='[sum:rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity:nk]' />
              <wedge-size column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:rating:qk]' />
              <size column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:rating:qk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity:nk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:rating:qk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[pcto:cnt:loca_rating_B4AD60BC5F824591AA0E5CECFBF4E6E8:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9735B435-E92D-4AB9-A964-8E737F8860FD}' />
    </worksheet>
    <worksheet name='Advertising Months'>
      <table>
        <view>
          <datasources>
            <datasource caption='date+ (Eco Capture)' name='federated.0iqv7mb1pjmus0188hxnz0zonm2b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iqv7mb1pjmus0188hxnz0zonm2b'>
            <column caption='Traveller Country (wildlife photo rating)' datatype='string' name='[Traveller_Country (wildlife_photo_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Traveller ID (wildlife photo rating)' datatype='integer' name='[Traveller_ID (wildlife_photo_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity (Wildlife Photo Rating)' datatype='string' name='[activity (wildlife_photo_rating)]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (wildlife_photo_rating)]' derivation='Count' name='[cnt:Traveller_ID (wildlife_photo_rating):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[month (wildlife_photo_rating)]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_Country (wildlife_photo_rating)]' derivation='None' name='[none:Traveller_Country (wildlife_photo_rating):nk]' pivot='key' type='nominal' />
            <column-instance column='[activity (wildlife_photo_rating)]' derivation='None' name='[none:activity (wildlife_photo_rating):nk]' pivot='key' type='nominal' />
            <column-instance column='[month (wildlife_photo_rating)]' derivation='None' name='[none:month (wildlife_photo_rating):nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (wildlife_photo_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (wildlife_photo_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Brunei Darussalam&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Cape Verde&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Curaçao&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;England&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Eswatini (Swaziland)&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Isle of Skye&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Maldvies&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Near Prague&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Niederlande&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Palestinian Territories&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Papua New Guinea&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Republic of Ireland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Schweiz&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;South America&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Turkiye&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]'>
            <groupfilter function='member' level='[none:activity (wildlife_photo_rating):nk]' member='&quot;Wildlife_photography&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]</column>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_ID (wildlife_photo_rating):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cae1ca</color>
                <color>#a7d1a7</color>
                <color>#87c287</color>
                <color>#6bb26b</color>
                <color>#51a351</color>
                <color>#3a933a</color>
                <color>#278327</color>
                <color>#177417</color>
                <color>#0a640a</color>
                <color>#005500</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[pcto:cnt:Traveller_ID (wildlife_photo_rating):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cae1ca</color>
                <color>#a7d1a7</color>
                <color>#87c287</color>
                <color>#6bb26b</color>
                <color>#51a351</color>
                <color>#3a933a</color>
                <color>#278327</color>
                <color>#177417</color>
                <color>#0a640a</color>
                <color>#005500</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_ID (wildlife_photo_rating):qk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_ID (wildlife_photo_rating):qk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[pcto:cnt:Traveller_ID (wildlife_photo_rating):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_ID (wildlife_photo_rating):qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_ID (wildlife_photo_rating):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_ID (wildlife_photo_rating):qk]</rows>
        <cols>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:month (wildlife_photo_rating):nk]</cols>
      </table>
      <simple-id uuid='{E3476033-E90D-4AC6-B669-ACC609F60237}' />
    </worksheet>
    <worksheet name='Country Bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='date+ (Eco Capture)' name='federated.0iqv7mb1pjmus0188hxnz0zonm2b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iqv7mb1pjmus0188hxnz0zonm2b'>
            <column caption='Traveller Country' datatype='string' name='[Traveller_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Traveller_Country]' derivation='Count' name='[cnt:Traveller_Country:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_Country]' derivation='None' name='[none:Traveller_Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Traveller_Country])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Traveller_Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_Country:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='text-orientation' data-class='total' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_Country:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_Country:qk]</rows>
        <cols>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]</cols>
      </table>
      <simple-id uuid='{8457B83D-DCB9-4B2C-A035-5BB7D9C0FF25}' />
    </worksheet>
    <worksheet name='Rating'>
      <table>
        <view>
          <datasources>
            <datasource caption='date+ (Eco Capture)' name='federated.0iqv7mb1pjmus0188hxnz0zonm2b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iqv7mb1pjmus0188hxnz0zonm2b'>
            <column caption='Traveller Country (wildlife photo rating)' datatype='string' name='[Traveller_Country (wildlife_photo_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[__tableau_internal_object_id__].[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='wildlife_photo_rating' datatype='table' name='[__tableau_internal_object_id__].[wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C]' role='measure' type='quantitative' />
            <column caption='Activity (Wildlife Photo Rating)' datatype='string' name='[activity (wildlife_photo_rating)]' role='dimension' type='nominal' />
            <column-instance column='[rating (wildlife_photo_rating)]' derivation='Count' name='[cnt:rating (wildlife_photo_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_Country (wildlife_photo_rating)]' derivation='None' name='[none:Traveller_Country (wildlife_photo_rating):nk]' pivot='key' type='nominal' />
            <column-instance column='[activity (wildlife_photo_rating)]' derivation='None' name='[none:activity (wildlife_photo_rating):nk]' pivot='key' type='nominal' />
            <column-instance column='[rating (wildlife_photo_rating)]' derivation='None' name='[none:rating (wildlife_photo_rating):ok]' pivot='key' type='ordinal' />
            <column caption='Rating (Wildlife Photo Rating)' datatype='integer' name='[rating (wildlife_photo_rating)]' role='measure' type='quantitative' />
            <column-instance column='[rating (wildlife_photo_rating)]' derivation='Sum' name='[sum:rating (wildlife_photo_rating):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([rating (wildlife_photo_rating)])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Vietnam&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]'>
            <groupfilter function='member' level='[none:activity (wildlife_photo_rating):nk]' member='&quot;Wildlife_photography&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:rating (wildlife_photo_rating):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]</column>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:rating (wildlife_photo_rating):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:rating (wildlife_photo_rating):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating (wildlife_photo_rating):ok]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:rating (wildlife_photo_rating):qk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[pcto:cnt:wildlife_photo_rating_571F02892B2A4A03A2A30961C81D131C:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:rating (wildlife_photo_rating):qk]</rows>
        <cols>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]</cols>
      </table>
      <simple-id uuid='{24D3320B-18C7-4EE8-B116-176B4B1F0784}' />
    </worksheet>
    <worksheet name='SAI Pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='date+ (Eco Capture)' name='federated.0iqv7mb1pjmus0188hxnz0zonm2b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0iqv7mb1pjmus0188hxnz0zonm2b'>
            <column caption='Traveller Country (wildlife photo rating)' datatype='string' name='[Traveller_Country (wildlife_photo_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Activity (Wildlife Photo Rating)' datatype='string' name='[activity (wildlife_photo_rating)]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_Country (wildlife_photo_rating)]' derivation='Count' name='[cnt:Traveller_Country (wildlife_photo_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity (wildlife_photo_rating)]' derivation='None' name='[none:activity (wildlife_photo_rating):nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_Country (wildlife_photo_rating)]' derivation='Count' name='[pcto:cnt:Traveller_Country (wildlife_photo_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[sentiment_comments]' derivation='Count' name='[pcto:cnt:sentiment_comments:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]'>
            <groupfilter function='member' level='[none:activity (wildlife_photo_rating):nk]' member='&quot;Wildlife_photography&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' data-class='subtotal' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='cols' value='14' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:sentiment_comments:nk]' />
              <wedge-size column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[pcto:cnt:Traveller_Country (wildlife_photo_rating):qk]' />
              <size column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_Country (wildlife_photo_rating):qk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[pcto:cnt:sentiment_comments:qk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:sentiment_comments:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{77A1F8C2-8067-434F-BF83-96F33BE34BC9}' />
    </worksheet>
    <worksheet name='Sheet 15'>
      <table>
        <view>
          <datasources>
            <datasource caption='date+ (Eco Capture)' name='federated.0iqv7mb1pjmus0188hxnz0zonm2b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iqv7mb1pjmus0188hxnz0zonm2b'>
            <column caption='Activity (Wildlife Photo Rating)' datatype='string' name='[activity (wildlife_photo_rating)]' role='dimension' type='nominal' />
            <column-instance column='[activity (wildlife_photo_rating)]' derivation='None' name='[none:activity (wildlife_photo_rating):nk]' pivot='key' type='nominal' />
            <column caption='Rating (Wildlife Photo Rating)' datatype='integer' name='[rating (wildlife_photo_rating)]' role='measure' type='quantitative' />
            <column-instance column='[rating (wildlife_photo_rating)]' derivation='Sum' name='[sum:rating (wildlife_photo_rating):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:activity (wildlife_photo_rating):nk]' member='&quot;photography&quot;' />
              <groupfilter function='member' level='[none:activity (wildlife_photo_rating):nk]' member='&quot;wildlife_nature&quot;' />
              <groupfilter function='member' level='[none:activity (wildlife_photo_rating):nk]' member='&quot;Wildlife_photography&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]' />
              <wedge-size column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:rating (wildlife_photo_rating):qk]' />
              <size column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:rating (wildlife_photo_rating):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8F8FA03D-5C24-45CC-A5B5-B6F1E4B6333E}' />
    </worksheet>
    <worksheet name='W_tour_sideByside'>
      <table>
        <view>
          <datasources>
            <datasource caption='date+ (Eco Capture)' name='federated.0iqv7mb1pjmus0188hxnz0zonm2b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iqv7mb1pjmus0188hxnz0zonm2b'>
            <column caption='Traveller Country (wildlife photo rating)' datatype='string' name='[Traveller_Country (wildlife_photo_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Activity (Wildlife Photo Rating)' datatype='string' name='[activity (wildlife_photo_rating)]' role='dimension' type='nominal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Beach_Water_Sports&quot;' value='Beach,Water and Sports' />
                <alias key='&quot;Biking_cycling&quot;' value='Biking and Cycling' />
                <alias key='&quot;Hiking_climbing&quot;' value='Hiking and Climbing' />
                <alias key='&quot;Historical_Sites&quot;' value='Historical Sites' />
                <alias key='&quot;photography&quot;' value='Photography' />
                <alias key='&quot;Rafting_Kayaking&quot;' value='Rafting Kayaking' />
                <alias key='&quot;Romantic_holiday&quot;' value='Romantic holiday' />
                <alias key='&quot;wildlife_nature&quot;' value='Wildlife and nature' />
                <alias key='&quot;Wildlife_photography&quot;' value='Wildlife photography' />
              </aliases>
            </column>
            <column-instance column='[Traveller_Country (wildlife_photo_rating)]' derivation='None' name='[none:Traveller_Country (wildlife_photo_rating):nk]' pivot='key' type='nominal' />
            <column-instance column='[activity (wildlife_photo_rating)]' derivation='None' name='[none:activity (wildlife_photo_rating):nk]' pivot='key' type='nominal' />
            <column-instance column='[rating (wildlife_photo_rating)]' derivation='None' name='[none:rating (wildlife_photo_rating):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Traveller_Country (wildlife_photo_rating)]' derivation='Count' name='[pcto:cnt:Traveller_Country (wildlife_photo_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Rating (Wildlife Photo Rating)' datatype='integer' name='[rating (wildlife_photo_rating)]' role='measure' type='quantitative' />
            <column-instance column='[rating (wildlife_photo_rating)]' derivation='Sum' name='[sum:rating (wildlife_photo_rating):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([activity])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Asia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Bolivia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Brunei Darussalam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Cape Verde&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Curaçao&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;England&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Eswatini (Swaziland)&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Isle of Skye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Maldvies&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Near Prague&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Niederlande&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Palestinian Territories&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Republic of Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Samoa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Schweiz&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Seychelles&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;South America&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Taiwan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Venezuela&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Vietnam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Yemen&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]' direction='DESC' using='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:rating (wildlife_photo_rating):qk]' />
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]'>
            <groupfilter function='member' level='[none:activity (wildlife_photo_rating):nk]' member='&quot;Wildlife_photography&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating (wildlife_photo_rating):ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:rating (wildlife_photo_rating):ok]' member='1' />
              <groupfilter function='member' level='[none:rating (wildlife_photo_rating):ok]' member='2' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating (wildlife_photo_rating):ok]' direction='DESC' />
          <slices>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]</column>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]</column>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating (wildlife_photo_rating):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:rating (wildlife_photo_rating):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[pcto:cnt:Traveller_Country (wildlife_photo_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:rating (wildlife_photo_rating):qk]</rows>
        <cols>([federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating (wildlife_photo_rating):ok] / [federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk])</cols>
      </table>
      <simple-id uuid='{FCA862FE-25EC-4053-9CEE-C84F171C12BE}' />
    </worksheet>
    <worksheet name='W_tour_sideByside (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='date+ (Eco Capture)' name='federated.0iqv7mb1pjmus0188hxnz0zonm2b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iqv7mb1pjmus0188hxnz0zonm2b'>
            <column caption='Traveller Country (wildlife photo rating)' datatype='string' name='[Traveller_Country (wildlife_photo_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Activity (Wildlife Photo Rating)' datatype='string' name='[activity (wildlife_photo_rating)]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_Country (wildlife_photo_rating)]' derivation='None' name='[none:Traveller_Country (wildlife_photo_rating):nk]' pivot='key' type='nominal' />
            <column-instance column='[activity (wildlife_photo_rating)]' derivation='None' name='[none:activity (wildlife_photo_rating):nk]' pivot='key' type='nominal' />
            <column-instance column='[rating (wildlife_photo_rating)]' derivation='None' name='[none:rating (wildlife_photo_rating):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Traveller_Country (wildlife_photo_rating)]' derivation='Count' name='[pcto:cnt:Traveller_Country (wildlife_photo_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Rating (Wildlife Photo Rating)' datatype='integer' name='[rating (wildlife_photo_rating)]' role='measure' type='quantitative' />
            <column-instance column='[rating (wildlife_photo_rating)]' derivation='Sum' name='[sum:rating (wildlife_photo_rating):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Brunei Darussalam&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Cape Verde&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Curaçao&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;England&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Eswatini (Swaziland)&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Isle of Skye&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Maldvies&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Near Prague&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Niederlande&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Palestinian Territories&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Papua New Guinea&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Republic of Ireland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Schweiz&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;South America&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Turkiye&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (wildlife_photo_rating):nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]' direction='DESC' using='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:rating (wildlife_photo_rating):qk]' />
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]'>
            <groupfilter function='member' level='[none:activity (wildlife_photo_rating):nk]' member='&quot;Wildlife_photography&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating (wildlife_photo_rating):ok]'>
            <groupfilter expression='COUNT([activity (wildlife_photo_rating)]) &lt; 25' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                <groupfilter function='member' level='[none:rating (wildlife_photo_rating):ok]' member='1' />
                <groupfilter function='member' level='[none:rating (wildlife_photo_rating):ok]' member='2' />
                <groupfilter function='member' level='[none:rating (wildlife_photo_rating):ok]' member='3' />
                <groupfilter function='member' level='[none:rating (wildlife_photo_rating):ok]' member='4' />
                <groupfilter function='member' level='[none:rating (wildlife_photo_rating):ok]' member='5' />
              </groupfilter>
            </groupfilter>
          </filter>
          <natural-sort column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating (wildlife_photo_rating):ok]' direction='DESC' />
          <slices>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]</column>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]</column>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating (wildlife_photo_rating):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:rating (wildlife_photo_rating):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[pcto:cnt:Traveller_Country (wildlife_photo_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:rating (wildlife_photo_rating):qk]</rows>
        <cols>([federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating (wildlife_photo_rating):ok] / [federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk])</cols>
      </table>
      <simple-id uuid='{6426D586-96F2-4926-8C6F-D2946064B6C1}' />
    </worksheet>
    <worksheet name='Wildlife and Nature'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='date+ (Eco Capture)' name='federated.0iqv7mb1pjmus0188hxnz0zonm2b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iqv7mb1pjmus0188hxnz0zonm2b'>
            <column caption='Traveller Country (photographycheck)' datatype='string' name='[Traveller_Country (photographycheck)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[__tableau_internal_object_id__].[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='photographycheck1' datatype='table' name='[__tableau_internal_object_id__].[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]' role='measure' type='quantitative' />
            <column caption='Activity (Photographycheck)' datatype='string' name='[activity (photographycheck)]' role='dimension' type='nominal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Beach_Water_Sports&quot;' value='Beach,Water and Sports' />
                <alias key='&quot;Biking_cycling&quot;' value='Biking and Cycling' />
                <alias key='&quot;Hiking_climbing&quot;' value='Hiking and Climbing' />
                <alias key='&quot;Historical_Sites&quot;' value='Historical Sites' />
                <alias key='&quot;photography&quot;' value='Photography' />
                <alias key='&quot;Rafting_Kayaking&quot;' value='Rafting Kayaking' />
                <alias key='&quot;Romantic_holiday&quot;' value='Romantic holiday' />
                <alias key='&quot;wildlife_nature&quot;' value='Wildlife and nature' />
                <alias key='&quot;Wildlife_photography&quot;' value='Wildlife photography' />
              </aliases>
            </column>
            <column-instance column='[Traveller_Country (photographycheck)]' derivation='None' name='[none:Traveller_Country (photographycheck):nk]' pivot='key' type='nominal' />
            <column-instance column='[activity (photographycheck)]' derivation='None' name='[none:activity (photographycheck):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]' included-values='in-range'>
            <min>50</min>
            <max>2013</max>
          </filter>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([activity])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;United States&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (photographycheck):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:activity (photographycheck):nk]' member='&quot;wildlife_nature&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]</column>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (photographycheck):nk]</column>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[pcto:cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]</rows>
        <cols>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]</cols>
      </table>
      <simple-id uuid='{79D09EA9-F463-4E65-A3B3-B12C52F236F3}' />
    </worksheet>
    <worksheet name='Wildlife photography'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='date+ (Eco Capture)' name='federated.0iqv7mb1pjmus0188hxnz0zonm2b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iqv7mb1pjmus0188hxnz0zonm2b'>
            <column caption='Traveller Country (photographycheck)' datatype='string' name='[Traveller_Country (photographycheck)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[__tableau_internal_object_id__].[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='photographycheck1' datatype='table' name='[__tableau_internal_object_id__].[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]' role='measure' type='quantitative' />
            <column caption='Activity (Photographycheck)' datatype='string' name='[activity (photographycheck)]' role='dimension' type='nominal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Beach_Water_Sports&quot;' value='Beach,Water and Sports' />
                <alias key='&quot;Biking_cycling&quot;' value='Biking and Cycling' />
                <alias key='&quot;Hiking_climbing&quot;' value='Hiking and Climbing' />
                <alias key='&quot;Historical_Sites&quot;' value='Historical Sites' />
                <alias key='&quot;photography&quot;' value='Photography' />
                <alias key='&quot;Rafting_Kayaking&quot;' value='Rafting Kayaking' />
                <alias key='&quot;Romantic_holiday&quot;' value='Romantic holiday' />
                <alias key='&quot;wildlife_nature&quot;' value='Wildlife and nature' />
                <alias key='&quot;Wildlife_photography&quot;' value='Wildlife photography' />
              </aliases>
            </column>
            <column-instance column='[Traveller_Country (photographycheck)]' derivation='None' name='[none:Traveller_Country (photographycheck):nk]' pivot='key' type='nominal' />
            <column-instance column='[activity (photographycheck)]' derivation='None' name='[none:activity (photographycheck):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]' included-values='in-range'>
            <min>5</min>
            <max>153</max>
          </filter>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([activity])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Asia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Bolivia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Brunei Darussalam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Cape Verde&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Curaçao&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;England&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Eswatini (Swaziland)&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Isle of Skye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Maldvies&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Near Prague&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Niederlande&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Palestinian Territories&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Republic of Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Samoa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Schweiz&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Seychelles&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;South America&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Taiwan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Venezuela&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Vietnam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Yemen&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (photographycheck):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:activity (photographycheck):nk]' member='&quot;Wildlife_photography&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]</column>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (photographycheck):nk]</column>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]' value='8' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]' value='left' />
            <format attr='vertical-align' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]' value='top' />
            <format attr='text-orientation' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]' value='-90' />
            <format attr='font-size' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]' value='8' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[pcto:cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]</rows>
        <cols>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]</cols>
      </table>
      <simple-id uuid='{5250DAAD-0EA0-4C4F-B9BA-40CA69DB5FCF}' />
    </worksheet>
    <worksheet name='World map'>
      <table>
        <view>
          <datasources>
            <datasource caption='date+ (Eco Capture)' name='federated.0iqv7mb1pjmus0188hxnz0zonm2b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0iqv7mb1pjmus0188hxnz0zonm2b'>
            <column caption='Traveller Country' datatype='string' name='[Traveller_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[__tableau_internal_object_id__].[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A:qk]' pivot='key' type='quantitative' />
            <column caption='countrydate' datatype='table' name='[__tableau_internal_object_id__].[countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A]' role='measure' type='quantitative' />
            <column-instance column='[Traveller_Country]' derivation='None' name='[none:Traveller_Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Brunei Darussalam&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cape Verde&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Channel Islands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Curaçao&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;England&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Eswatini (Swaziland)&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Isle of Skye&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Maldvies&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mariana Islands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Near Prague&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Niederlande&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Palestinian Territories&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Papua New Guinea&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Pays-Bas&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Republic of Ireland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Reunion Island&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Schweiz&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;South America&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Stewart Island&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Turkiye&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Wales&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[Longitude (generated)]' field-type='quantitative' max='31291879.192274261' min='-18476159.715488337' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[Latitude (generated)]' field-type='quantitative' max='12039320.073551605' min='-7592539.1232284661' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='right' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]' />
              <size column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:countrydate_5FE7E8C955E64B93BFCBFF15E1527D2A:qk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]' />
              <lod column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[Latitude (generated)]</rows>
        <cols>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6413A371-5695-4ECE-94AA-64EB1BBAFD4F}' />
    </worksheet>
    <worksheet name='in genaral '>
      <table>
        <view>
          <datasources>
            <datasource caption='date+ (Eco Capture)' name='federated.0iqv7mb1pjmus0188hxnz0zonm2b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iqv7mb1pjmus0188hxnz0zonm2b'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Count C' datatype='integer' name='[countC]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countC]' derivation='Sum' name='[pcdf:sum:countC:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[countC]' derivation='Sum' name='[sum:countC:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([countC])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Year:qk]' field-type='quantitative' max='2024' min='2011' range-type='fixed' scope='cols' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Year:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='text-align' id='refline1' value='right' />
            <format attr='vertical-align' id='refline1' value='top' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='stroke-color' id='refline1' value='#ff00006f' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Country:nk]' />
              <size column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:countC:qk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Country:nk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[pcdf:sum:countC:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Year:qk]' enable-instant-analytics='true' formula='total' id='refline0' label='2020' label-type='custom' scope='per-table' tooltip='Covid 19' tooltip-type='custom' value-column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Year:qk]' z-order='1' />
            <reference-line axis-column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Year:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label='Covid 19' label-type='custom' scope='per-table' tooltip='Covid 19' tooltip-type='custom' value='2020' value-column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Year:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1628' />
                <format attr='maxwidth' value='1628' />
                <format attr='minheight' value='708' />
                <format attr='maxheight' value='708' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:countC:qk]</rows>
        <cols>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{EDE99122-6AD8-432E-BAC1-5132BC38669D}' />
    </worksheet>
    <worksheet name='location'>
      <table>
        <view>
          <datasources>
            <datasource caption='date+ (Eco Capture)' name='federated.0iqv7mb1pjmus0188hxnz0zonm2b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iqv7mb1pjmus0188hxnz0zonm2b'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Location Type' datatype='string' name='[Location_Type]' role='dimension' type='nominal' />
            <column caption='Traveller ID (location)' datatype='integer' name='[Traveller_ID (location)]' role='dimension' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location_Type]' derivation='None' name='[none:Location_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (location)]' derivation='Sum' name='[sum:Traveller_ID (location):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location_Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:Traveller_ID (location):qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]' value='8' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-orientation' data-class='subtotal' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location_Type:nk]' value='90' />
            <format attr='text-orientation' data-class='total' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location_Type:nk]' value='90' />
            <format attr='font-size' data-class='total' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]' value='6' />
            <format attr='text-align' data-class='subtotal' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]' value='left' />
            <format attr='text-orientation' data-class='subtotal' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]' value='-90' />
            <format attr='vertical-align' data-class='subtotal' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]' value='bottom' />
            <format attr='text-orientation' data-class='total' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]' value='-90' />
            <format attr='vertical-align' data-class='total' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]' value='top' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]' value='6' />
            <format attr='wrap' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]' value='off' />
            <format attr='vertical-align' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]' value='center' />
            <format attr='text-orientation' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]' value='90' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]' />
              <size column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:Traveller_ID (location):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:Traveller_ID (location):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:Traveller_ID (location):qk]</rows>
        <cols>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location_Type:nk]</cols>
      </table>
      <simple-id uuid='{56433569-E7AA-42F4-BD86-3A357A91F818}' />
    </worksheet>
    <worksheet name='photography Interest'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='date+ (Eco Capture)' name='federated.0iqv7mb1pjmus0188hxnz0zonm2b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iqv7mb1pjmus0188hxnz0zonm2b'>
            <column caption='Traveller Country (photographycheck)' datatype='string' name='[Traveller_Country (photographycheck)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[__tableau_internal_object_id__].[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='photographycheck1' datatype='table' name='[__tableau_internal_object_id__].[photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC]' role='measure' type='quantitative' />
            <column caption='Activity (Photographycheck)' datatype='string' name='[activity (photographycheck)]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_Country (photographycheck)]' derivation='Count' name='[cnt:Traveller_Country (photographycheck):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_Country (photographycheck)]' derivation='None' name='[none:Traveller_Country (photographycheck):nk]' pivot='key' type='nominal' />
            <column-instance column='[activity (photographycheck)]' derivation='None' name='[none:activity (photographycheck):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Traveller_Country (photographycheck)])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Asia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Bolivia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Brunei Darussalam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Cape Verde&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Curaçao&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;England&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Eswatini (Swaziland)&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Isle of Skye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Maldvies&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Near Prague&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Niederlande&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Palestinian Territories&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Republic of Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Samoa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Schweiz&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Seychelles&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;South America&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Sri Lanka&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Taiwan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Venezuela&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Vietnam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Yemen&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (photographycheck):nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (photographycheck):nk]'>
            <groupfilter function='member' level='[none:activity (photographycheck):nk]' member='&quot;photography&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_Country (photographycheck):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (photographycheck):nk]</column>
            <column>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='text-orientation' data-class='total' field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]' value='90' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]' />
              <text column='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[pcto:cnt:photographycheck_FD0AE758BF5F414FA520BB84E05DB8DC:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_Country (photographycheck):qk]</rows>
        <cols>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]</cols>
      </table>
      <simple-id uuid='{02F25D0F-FFD9-4FAF-9A9B-C0117B22D11D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='868' maxwidth='1766' minheight='868' minwidth='1766' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49066' id='18' is-fixed='true' type-v2='layout-basic' w='99094' x='453' y='922'>
            <zone h='49066' id='7' param='horz' type-v2='layout-flow' w='99094' x='453' y='922'>
              <zone h='49066' id='5' type-v2='layout-basic' w='99094' x='453' y='922'>
                <zone h='49066' id='3' name='World map' w='49547' x='453' y='922'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49066' id='21' name='Country Bar' w='49547' x='50000' y='922'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='49090' id='15' name='in genaral ' w='49547' x='453' y='49988'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49090' id='22' name='location' w='49547' x='50000' y='49988'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='50' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98156' id='49' param='vert' type-v2='layout-flow' w='99094' x='453' y='922'>
                <zone fixed-size='280' h='49066' id='3' is-fixed='true' name='World map' w='49547' x='453' y='922'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49066' id='21' is-fixed='true' name='Country Bar' w='49547' x='50000' y='922'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49090' id='15' is-fixed='true' name='in genaral ' w='49547' x='453' y='49988'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49090' id='22' is-fixed='true' name='location' w='49547' x='50000' y='49988'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1CA1F5E3-D03D-45CF-AF55-10A06875565B}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='900' maxwidth='1700' minheight='900' minwidth='1700' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='18' param='horz' type-v2='layout-flow' w='99058' x='471' y='889'>
            <zone h='98222' id='16' type-v2='layout-basic' w='91058' x='471' y='889'>
              <zone h='98222' id='7' param='horz' type-v2='layout-flow' w='91058' x='471' y='889'>
                <zone h='98222' id='5' type-v2='layout-basic' w='91058' x='471' y='889'>
                  <zone h='49111' id='3' name='Activity' w='49529' x='471' y='889'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49111' id='34' name='Act Traveller Rating' w='45529' x='471' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49111' id='37' name='Wildlife photography' w='41529' x='50000' y='889'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49111' id='43' name='SAI Pie' w='45529' x='46000' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='136' h='98222' id='17' is-fixed='true' param='vert' type-v2='layout-flow' w='8000' x='91529' y='889'>
              <zone h='14000' id='35' name='Act Traveller Rating' pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating:ok]' type-v2='color' w='8000' x='91529' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5111' id='36' name='Act Traveller Rating' pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:Traveller_ID (loca_rating):qk]' type-v2='size' w='8000' x='91529' y='14889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='25111' id='38' name='Wildlife photography' pane-specification-id='2' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]' type-v2='color' w='8000' x='91529' y='20000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9556' id='44' name='SAI Pie' pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:sentiment_comments:nk]' type-v2='color' w='8000' x='91529' y='45111'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5111' id='45' name='SAI Pie' pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_Country (wildlife_photo_rating):qk]' type-v2='size' w='8000' x='91529' y='54667'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='51' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='50' param='vert' type-v2='layout-flow' w='99058' x='471' y='889'>
                <zone fixed-size='280' h='49111' id='3' is-fixed='true' name='Activity' w='49529' x='471' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49111' id='37' is-fixed='true' name='Wildlife photography' w='41529' x='50000' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25111' id='38' name='Wildlife photography' pane-specification-id='2' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]' type-v2='color' w='8000' x='91529' y='20000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49111' id='34' is-fixed='true' name='Act Traveller Rating' w='45529' x='471' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14000' id='35' name='Act Traveller Rating' pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating:ok]' type-v2='color' w='8000' x='91529' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5111' id='36' name='Act Traveller Rating' pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:Traveller_ID (loca_rating):qk]' type-v2='size' w='8000' x='91529' y='14889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49111' id='43' is-fixed='true' name='SAI Pie' w='45529' x='46000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9556' id='44' name='SAI Pie' pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:sentiment_comments:nk]' type-v2='color' w='8000' x='91529' y='45111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5111' id='45' name='SAI Pie' pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_Country (wildlife_photo_rating):qk]' type-v2='size' w='8000' x='91529' y='54667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7E23A51B-AC2E-41B7-9D33-4BC731048B56}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size maxheight='868' maxwidth='1666' minheight='868' minwidth='1666' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98156' id='7' param='horz' type-v2='layout-flow' w='99040' x='480' y='922'>
            <zone h='98156' id='5' type-v2='layout-basic' w='89436' x='480' y='922'>
              <zone h='98156' id='12' name='Rating' w='44718' x='480' y='922'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98156' id='14' name='Advertising Months' w='44718' x='45198' y='922'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98156' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9604' x='89916' y='922'>
              <zone h='7489' id='15' name='Advertising Months' pane-specification-id='2' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_ID (wildlife_photo_rating):qk]' type-v2='color' w='9604' x='89916' y='922'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='36' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98156' id='35' param='vert' type-v2='layout-flow' w='99040' x='480' y='922'>
                <zone fixed-size='280' h='98156' id='12' is-fixed='true' name='Rating' w='44718' x='480' y='922'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98156' id='14' is-fixed='true' name='Advertising Months' w='44718' x='45198' y='922'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7489' id='15' name='Advertising Months' pane-specification-id='2' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_ID (wildlife_photo_rating):qk]' type-v2='color' w='9604' x='89916' y='922'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AAC70713-6302-4D5D-A0EB-90B0E16967F8}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Country Bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='World map'>
          <zoom type='entire-view' />
          <highlight field='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='in genaral '>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Year:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:countC:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Country:nk]</field>
                    <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Year:qk]</field>
                    <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:countC:qk]</field>
                    <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[pcdf:sum:countC:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>2018</value>
                  <value>1265</value>
                  <value>0.84671532846715325</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='location'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='15' />
      <simple-id uuid='{06EF0BA5-E097-4FB5-BB8D-45605398B7DD}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Act Traveller Rating'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Activity'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SAI Pie'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Wildlife photography'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='43' />
      <simple-id uuid='{323C2CA1-DC0C-4E2E-9D73-FB19A5C6503E}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Advertising Months'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Rating'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{4C52F861-7D08-4556-8E3C-A97FE198059C}' />
    </window>
    <window class='worksheet' name='World map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (country_count):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38EACDA8-98C3-459E-B1FB-2D1AF2CA59CC}' />
    </window>
    <window class='worksheet' name='Country Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (country_count):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5BC0CC7-0411-4AC5-B089-14F4F69F15A5}' />
    </window>
    <window class='worksheet' name='in genaral '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:countC:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Country:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location_Name:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location_Type:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Rating:qk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Wildlife_and_Photography:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{388B0B8C-87CE-4086-AA5B-5DB59958FA91}' />
    </window>
    <window class='worksheet' name='location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location_Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9345D99A-1CB5-4801-BD86-6398BBD02A4C}' />
    </window>
    <window class='worksheet' name='Activity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[__tableau_internal_object_id__].[cnt:activity_26DAD5B274D0491D8E778F174D5928B5:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE902D5C-6C42-4C43-9861-1FD2277A8F3C}' />
    </window>
    <window class='worksheet' name='photography Interest'>
      <cards>
        <edge name='left'>
          <strip size='238'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location_Name:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location_Type:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Wildlife_and_Photography:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Wildlife_nature:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (photographycheck):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:photography_Interest:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{65DB517E-A588-4D80-9298-538F8DEB947F}' />
    </window>
    <window class='worksheet' name='Wildlife and Nature'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (photographycheck):nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location_Name:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location_Type:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Wildlife_and_Photography:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Wildlife_nature:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (photographycheck):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:photography_Interest:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A7C0E59C-1A73-4F36-9E36-CCB21DB11DCD}' />
    </window>
    <window class='worksheet' name='Wildlife photography'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location_Name:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Location_Type:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (photographycheck):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Wildlife_and_Photography:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Wildlife_nature:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (photographycheck):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:photography_Interest:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8EF90024-7A28-417F-A749-54BF4816341E}' />
    </window>
    <window class='worksheet' name='SAI Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:sentiment_comments:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_Country (wildlife_photo_rating):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{007410A6-BD1D-4C12-8C25-4E72BEF66AD7}' />
    </window>
    <window class='worksheet' name='Rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating (wildlife_photo_rating):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating (wildlife_photo_rating):ok]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating (wildlife_photo_rating):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6956ACB0-098A-40F4-8391-040325DB51B6}' />
    </window>
    <window class='worksheet' name='Advertising Months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_ID (wildlife_photo_rating):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[cnt:Traveller_ID (wildlife_photo_rating):qk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:City (wildlife_photo_rating):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_ID (wildlife_photo_rating):ok]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:month (wildlife_photo_rating):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:month (wildlife_photo_rating):qk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating (wildlife_photo_rating):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E262A8D-C3BE-40FF-BDCE-8928CC93E513}' />
    </window>
    <window class='worksheet' name='W_tour_sideByside'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Country:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating (wildlife_photo_rating):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6803441B-D133-47E5-80A9-4B2CF6B74084}' />
    </window>
    <window class='worksheet' name='W_tour_sideByside (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Country:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_Country (wildlife_photo_rating):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating (wildlife_photo_rating):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBE0D243-BC4E-43D0-8BBB-BD7C54D5D558}' />
    </window>
    <window class='worksheet' name='Activity rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:rating:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_ID (activity):ok]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_ID (loca_rating):ok]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{74A774DD-F3E7-42B7-BD2F-552C372D0488}' />
    </window>
    <window class='worksheet' name='Act Traveller Rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:Traveller_ID (loca_rating):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_ID (loca_rating):ok]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_ID (location):ok]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity:nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{24FC2AC0-7947-4944-B36D-75119461EE7F}' />
    </window>
    <window class='worksheet' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[sum:rating (wildlife_photo_rating):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:Traveller_ID (wildlife_photo_rating):ok]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:activity (wildlife_photo_rating):nk]</field>
            <field>[federated.0iqv7mb1pjmus0188hxnz0zonm2b].[none:rating (wildlife_photo_rating):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1F13F414-CA3B-4EE9-9E6B-7F434AD85E3D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Act Traveller Rating' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAELElEQVR4nO3ZwU4bVxxG8W88gyFQY0FVixBYGQm1al4givI83faRuum2XfQ12EAJQq1A
      UZCMlRgZwmAYg91FJTZZVV0gdM5vOaMrzSyO7v3PFPP5fB4JqvXUDyA9JQMQmgEIzQCEZgBC
      MwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxA
      aAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoB
      CM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIz
      AKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBo
      BiA0AxCaAQjNAIQ1m88MQFyXk0sDENffn48NQFxH538agJjm83n+cgcQVfPQ5PP1JwMQU313
      nS93VwYgpk/XQz+Diuv8yyCJP8IEdXV7mcQABDWZTpIYgKBu72+TGICgJk2dxAAE1Tw0SZLq
      iZ9D+s/u7+8zmUwyGo2yvr6eTqeToigyGo1SFEVubm7SbrdTlmWqqsry8nIWFhYyGo3SNE2K
      oshStZTEAPQMlWWZvb29XFxcpNPp5M2bN6mqKoPBIKurq6nrOoeHh3n9+nXKsszp6Wnevn2b
      jx8/Jklms1mWFl4k8QikZ6iu6zw8PGR3dzdFUeTk5CQXFxfp9/t5//59ptNput1urq6uMpvN
      0mq1Mh6P0+/3M51Os7i4+BhAMZ/P50/8PtL/0jRN2u32V9en02mqqkpRFF/d++Pwt/y694tH
      ID1vo9Eox8fH2d7ezt3dXfr9fvb397O5uZmjo6O8evUqZVmm2+1mbW3tcd3ai2+TOAPomfvw
      4UPKssxwOMxsNsvW1laKosjBwUHG43Ha7XaGw2G63W7evXuXVuvfU//G6sskzgB65nq9XgaD
      Qeq6zs3NTa6vr3N2dpZOp5OVlZX0er3s7Ozk/Pw8TdM8rvvum16qVuUMIKb7h/v8/PtP7gBi
      qsoqG52XBiCu3d4PBiCu7zd+dAYQV93UBiA2j0BCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIz
      AKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBo
      BiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEI
      zQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMA
      oRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEL7B4qT3FBiXK21
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Activity' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Activity rating' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFmklEQVR4nO3dzWpTWxyG8bftTkh2mmja2KD2JG0EqehIEZ1Jr9Zb8BIMkSKlIkXRUBJT
      2yaa5qtJ98cZHBDORBwcKCfv8xtnw8rgYf3X2pCspGmaCjC1etMLAG4SAcAaAcAaAcAaAcAa
      AcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAa
      AcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAa
      AcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcBacNML
      AP5EFEU6OjpSu93WgwcPlM/nFUWRZrOZBoOBGo2Gjo6OtLOzo0qloq2tLX39+lVbW1v6+fOn
      isWiPn78qGfPnqnT6Whzc1Pj8VgraZqmN/3lgD/x5s0bBUGgcrms0WikxWKhMAw1Ho+Vz+eV
      y+XU6/UUx7H29/f1+vVrbW9vq1KpKE1TBUGgarWqTqej+XyuL1++EAD+PzqdjkqlkqIoUhzH
      Wl1d1adPn1Sv1xUEgbLZrObzuXq9nvb29vT+/XvVajWFYaiLiwslSaL79+8rjmP1+31dXl4S
      ALxxBsDSGA6HajabqlQqWiwWevHihQ4ODlQulzWdThXHsc7OzvTy5UsVi0VJ3AJhiYRhqDt3
      7mhtbU2TyURJkqjdbqvT6ejg4ECnp6eazWbqdDq/niEALI2zszNdXFwom80qCAJ9/vxZDx8+
      1Pr6uvb397Wzs6NCoaDd3d1fz3AGwNKKokhB8PspnzMAlsbh4aFms5miKFI2m1Wj0VCr1VKt
      VlO321U+n9fm5qa2t7c5A2D5lMtlzWYz1et11Wo1XV1daTQaKQxDTSYTra2t6fj4WB8+fPj1
      DAFgaZyfn6tYLCpJEm1sbCiKIt2+fVvD4VClUkmPHj3SkydP/jUWcQaANXYAWCMAWCMAWCMA
      WCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMA2ErShADgqz/rEwB8HV4cEgB8tU5bBABP
      aZrq8JwdAKbm8Vy9cY8A4Gk4H2owHxAAPHXHXa5B4etkdCKJF2EwNZgNJBEATE2iiSQCgKnp
      9VQSAcDU+HosiQBg6iq6kkQAMBVmQkkEAFOFTEESAcBUISAAGGMEgrWtcEsSAcBUvVSXRAAw
      dW/9njKrGQKAp2KmqEq+QgDwlFnL6K/iXwQAX0+rTwkAvp5Xn/M3qfB1ubgkAHhjBII1AoA1
      AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1
      AsDSePfunb59+/bbz6RpqjiOdX19LUn8KgSWR7PZ1Hw+18rKikqlkk5OTpTL5VSr1fT9+3el
      aapMJqNut6u9vT0Nh0MFN71o4L/S7/d169YtDQYDTadT7e7uSpKOj4/V6/X06tUrRVGk0Wik
      6XSq4XDIDgBv7ACwkiSJRqORwjDU9fU1AcDLjx8/9PbtW+VyOcVxTADwcnV1pbt372qxWGix
      WBAAvBQKBWUyGTUajX9ujDgEw0GapppMJioUCkqSRNPpVNlslh0AHvr9vprNph4/fqxcLqdW
      q6UgCHgTDA9xHGtjY0Pz+VyTyUSNRkPZbJYRCB7SNFW73Va1WtXl5aXOz89VrVYJAN4YgWCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGDtb3wIvuzV7CxbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Advertising Months' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Country Bar' width='192'>
      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
      6UaMPvwkYwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      dC1+0gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Rating' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAVHklEQVR4nO3dSXMcd3rn8W9mVtZehVpQCwobQUAgKVIi1M2WWpbUbbcnJuzuaC9hz/ji
      g8O+zBvwzeHX4JsPEzMRE3OYOfRh7Ahb4Q5HqyV7WlJLo6VJiSJIYi/shdr3XOYAkJLIAqUE
      UUWg8vlEMKoAVGY9IPJXuT35T8W2bRshXEhRFEV91kUI8SxJAISrSQDOLJtKtfKsi8Ay2lTq
      zWddRt94nnUB58HK3U/4+Vuf8Cd/9p8I+TS6nTY+fwBF1bAtk3arhXGwxK9X6kxNzzOe9BHw
      +zEsC5/a4R/+6S2ufed75BJhvIEg2AAW7VYb1ePh1q3f8OILC9iWiaZ7wbZoFfPcL8DVuQA2
      UDnY5c6dZa6+8j22PvoVe6ZNIv0cMb3Ce18c8OMfLKD7gmiY1Jttmls3WdfmWZiJ06jX8Rol
      Pt2Cl+ZSdC2FUMBHq9EERaFjmORXviA9eYlWo0YsEkb1+sDoYKsqn3z0ET944/Vn/FfoD0V2
      gr+NFm/94kPUzh7JmWt8/G//TGh0npDXxDA6fHZ3jVe/c5mqGUSpFflsdY3nc1kC89/h+5kW
      725HeX3K5M1f3yeitQjEL0Izz3q+gT/kp1zaYnw0SmzyCntr94hmZolrB0RzF3n3l/+OHvIT
      CXlptgP4vR2ahQL+ZByz6SMc67BX01m+9TFXvvdD5oP73D7wYje2aKoJ1GaFSHoUpVFkyxoj
      qxdoNVX+4x/9iJ/9j59xZX6Sf/3lh8xcmuDa9e+ztXqLwr5F0G/TwYOm6oRCGr/7Oz961n+E
      U6coiiJrgG9FJZ0ZRVdHmJhIsTN9mVhqhvLOfb7z3ZfR/DEmxtOU2hr+bAI1EmNiJEz28kUC
      uon39i9ZCU0R0kwyk7Nsra6TzIxy9cVZsDqUCiqhkSSXLl1ia/FT5i/P0tk2KLe9JGJRwkEv
      mXSCQtNLQO+w0uiQTmexOzrxUS9pNUKEDlPTOdjdp9a2eHF2Hk80S62wxc5ekSsv3sC+k2c0
      lqTU1NDRWLhxA49ZZeH6NSYujmMYBulMjkw2BkaZlaUlGqbKiOZ91n+AvpE1wBliWwb5rT0m
      xsewrS5r+V2mJ8cdzaNVK4E/hv+pP9os7n9xm2gqS73Z4cLE2NPO8MxRFEU51QCYpommaac1
      OyH6Ss4DCNeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXc3C+0GZ58TYdTxi/UaNs6MSD
      sLldZuHlG/i+EiXDtOh0TWeFaCpeXU6iicFydMK8UqliqibB0RDmXpVGYIQXppOU2jajXgvT
      NLFtm3/9cJm//8f/56iQH78yx1/9ZMHRNEI8LQcBUMhk0+wU2+geDUXTiAU83N4us5BV0JTD
      T29N03g9+DnPJ/7OUSHhyH/G47nhaBohnpajNUB2YobsxNHz3OFj5sE3vsKrdIlrNUeF6Erb
      0euFOA2yEyxcTQIgXE0CIFytL1eEWU0f7d2Eo2mUWrAfpQjxRH0JgFEN0Vh+fOf4SdRLsX6U
      IsQTySaQcDUJgHA1CYBwNQmAcDUJgHA1RwEwOi32D0oYnRbFchWz2+agWO5XbUL0naN26KX7
      90lkJlhbXaXV7LIb8kKjjTd6jdBRlJ5mmCEZo0sMmqPzAI16lf3bd0iOJYmHVPZsjYkRhVYX
      AvqX7dDLYxne+Q8/dFTItecu8prp7BoCIZ6Wo3bomZkZtkstcvEAW8UWc6kQqzsVLvsVFL5s
      h25GwqxN5BwVMhGP4/HIUKVisBwtcSPJDCPJw+eR+OHjlWjytGsSYmDkKJBwNQmAcDUJgHA1
      CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwNUcBaDcblCpVuu0WxVIZ0+xSrTX6VZsQfeco
      AKuryzSbbfJrK1QbLdZWllm5u0hdmjjFOeXoeoCg38fK6hoz40nWVlYIZ1JMpsI0ujZ+vmyH
      Ni3LcSG2bWEYhuPphHgajrpBPR4P8WQS3aMRSiSZSERY26lwdeLr7dCa6nzXQlFUaYcWA+fo
      eoDsxAWyR18lM4eP1+KpUy9KiEGRo0DC1SQAwtUkAMLVJADC1SQAwtUkAMLVJADC1SQAwtUG
      curVtm3atTqqx4OiKnh0HeUEZ4uFOG0DWQot02TtNzdp12rkP/ucVs3ZPYSF6BdHAShsb3D7
      7gqNapGltU3a9Qr3ltf5piFtFUXB4/VykM8THx8HRXmKkoU4PY42gXb2C6THZ9ja3cVnWdzd
      apDSLIodm5jHxjrqArUeGeXZtm1Uj0Y4maCwto4vFGT8+SuPvcaUwXHFgDlqh06nMqwuLzES
      DdIxLVSPQtuw8CuHn/IP/z0ypebxcOGlBQCSk5M9564czUOIQXLUDarrKmPjk4xGveyX20zG
      A+wU6ozohwuuoiioqgqKQqNcJhCJUNrewR8OEYhGaZTLgIJtW3i8XjqNBsFY7Oi+AEfTCjFA
      zkaHTqQZOXqeC0QAmMiFHnud1TXYvnuP8eevUN7eIXjpOSzTZOvOItn559i9t4Rt23Tbbbx+
      P7krl576FxHiJPrykavpHiLJJIqqYhoGW4v3sEyT+kGR9Zu38IVD6H4f0XQK0zC4+6v3+lGG
      EN+oL+cBup0Ope3twzfw6sTHc3SaLdKzs+h+H91Wi8BIFH8oRGwsSzG/2Y8yhPhGfQmA7vXy
      3Kvff+z7wZFoz9cHLssmkHg2ZK9TuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJqjANi2xe7u
      PrXiHrc+v0u7WWN5bfMb26GFOKscnQg72N5gZbtKMqgyNj5BfnMbPyblrk1UO2yHVhTlsXbo
      b+fLdmohBuXbrwFsi7X8FuX9HYKxOJt3F2lYh23MJ1rehTgDvv0aQFF56cYr1Gt1rG6DRirL
      ZDpKfq9K1qugoBxe+KKqqCfq65d2aDF4PZe4t99++9gJQuEQkXiK2elxvIEIM1O5xy6AEeK8
      6BmA999/n5s3bw66FiEG7thtjjfffJMPPviAdrs9yHqEGKie+wA/+clPANB1XbbLxVDrGYCr
      V68Oug4hnokeAbC5+9kn5PcrqIA3nOTl716TU8ZiKPVYrm2m5q6RiQVoNpv4fF450yuGVo8A
      qPh8Ovu7BdqNFhtbW0f3fxRi+By7ZZNOJ1F9IX70268Nsh4hBurYAKyubRCNhHl8nDchhkfP
      o0DNSoX5F65Tq3XQVAmAGF49A+DxeqmWqyiGTbNr4tMOVxS22WZxaZN0zEe+0GQqHWZ5q8yL
      V+dlPSHOpZ4BaDdLvP/eB+QuzDKrPdhKstnMb9LpdCnVbDI+WC42mIlp7LVskrqFaZqHozyf
      oK3Zti0Mw3ia30UIx3oGIBzP8sL8GF+s7tOxbAIAtk2lUmF7q8DU1Bjr1TbReJD7WzUuZRU0
      7fBYkaZpaCc4e6woKh7PQG5YI8RDxy5xsdQ44e17RyM3A4rKlWvXmb9iomDTNSx0XaMzYeJ/
      5DhpvXWPjb3/6aiQcvL3gWtO6xfiqfQMwP3PPuL++jbBkTjqIzvBDz7pfUcLvd/3+FkCGxPb
      7jgqxLZl80cMXs9tlc31PJ1GieX1feQgkBhmPdcAb/zeT7Etk65h4dVlu1wMr2P3Vt9/5y1+
      /ua/UGx2B1mPEAN17Md7MBxEbdp4NekDFcOr59JdL+7w3ge/oVWr0ZY7N4oh1nMNEIylefXG
      i+w2IOLVB12TEAPTcw2gKAqFYhmrWqTUkn0AMbyO3cDPZRJUOgpBr1wNIIZXzwDs5lf48NY9
      pqdyaHIeQAyxngHweXXGJme4OHcRXY4CiSHWcyf485u3iUV93Fsp8N3rkaPv2myuLrFVbjMW
      0dlvQnpEZ32rzEvfvY5H1hTiHOoZgMnpCVa397Gau7TNKYIeDVCIRCNsFBoYlgfbMKh1da5O
      RNlv2aS8X7ZDW6bzdmjLsqUdWgxczwBMzF7Gsj6javhQHw4JYVMsllCw8QZ8mMU6uurn1nqZ
      lzIKmvJlO7R6gs0mVVWkHVoMXM8lzrZt7nz+CYsrbTLTU/j1wzXA1MV5po5ek81NAzA91WsO
      QpwPPT+qb37wLrs1le+9ukBIDoOKIdYzANPTF4kENZaX1+haMiyWGF49N4FMxWJ2/iq2rT28
      IF6IYdQzAIXtDW5+vgT4mJqfkxCIodUzADNXXiK/W8Hv0Wh3LfAOuiwhBuPYVohGvcRHd9YJ
      6LITLIZXzzVAJJpg/tp1pmZNdGkGEkOs5xqgVilRrTUfjgAhxLDqGYBwbITi5hI///kvaRpy
      RZgYXj03gdbu3qapRnj1tQsE5AiQGGI97xATGonjUy2ajSamZfGgtc22LCzLOmx4+8qjEOdV
      z3uENRstPF4v2G0++fgzXnllAbDZ3ljh/uYB44kgu8UmqdEwe7tlXnzlZQKyohDnUI8AqFxZ
      uMHlozFBFeXBUSCFcCRMwN/E9gaYy/jZsBSuTY9Sadt4pR1anEPH9h9/8O9vsbVXZCQ3x29/
      /zoP2qF1r07Ur5MvNplOhVncKrMwpqBIO7Q4h45d4nTdA4oX78NXfL0dejR7+PjS6FhfCxSi
      n479qDZNk3A0xvXrMmS5GF7HBqDT6aCqcos8Mdx6BqCyt4svEqXd7mDJbbLFEOsZgOBIBKOr
      MpmO0zXkOL8YXj0DYHTalIoFmoqHsE/GBhXDq2cA/OEYaueA99/5gLKMDSqG2LGjQly98Tqa
      fxGvtEOLIdYzAJ++9zb5QolK3YPnBLc8FeK86L102wq2ZaGAHAUSQ63nGmDht37IwqArEeIZ
      cNR8Uy8fUGyaxIMa+d0yFyYz7BaqTOQyp15Yqdrib/7bLxxNk46F+Nu/+OGp1yKGl6MAGLZC
      pXRAp2KTSOfY2MjjMQ3K3TRRD1+7TsAp2+Zr1xb4rBp/3PrvjuYRaI9hWW84fm/hXo4C0GrU
      yI1P0m2UWL9zBz0ZJ6VrmPbhwv/g38l2G+yvBUenw8u+LxzNQdEbJwqfcC8HAbDptJrsl/OM
      Z0YIp7NMpqNs7FWZ9SooKNi2jaZpKCe4vbyiKF+7CN8wfZQ+vOpoHp5slrBcyC8ccBAAhcmL
      8w+/iiUOH+dCI6dc0hEbbNPZwuz09ULIQX7hahIA4Wpn9hpEU9NYnhx3NE1gdJRcn+oRw+nM
      BqDl9/HPv/sDR9MkgyFe7lM9YjjJJpBwNQmAcDUJgHC1cxWAYn6TvZVVLNNk8VfvPutyxBAY
      SAA0VWNu9BLpcJaxaI6AHjjRfOLjOSzDYH91DU0G0RKnYCABMC2Lvdo2o+FRMpEx5lKXTjSf
      vZVVthbv0q7XKeY36TSbp1ypcBtHH6N7m2vs101yiQD5gyZTqTAr22WuXp77hvGDbGKBBPf2
      7pKJZMmNODu+/0DqwjSpC4c36J58QQbsEk/PUQBGkmmK9TwH5QZJzWKpUGUqBPstm4T+5MFx
      i80DOmabgB7g8+2bj/380cFxjZPcmMOWAXaFM466QZcWb+OPj2E2S+zUOgSifjYKDWZyX3Zy
      Hjc4bqVVBmBxr3eL86OD43o8h/NrNxqsfvwp86+9yv7aOgfrG0RGk1T3CwRGomgeD/5IhMR4
      DhQZYFc442hpmbwwS8e0iWQStDomQZ+HeqtL6JEmTAWV+dRlNsrrKCgoikKtXSUVznDQKBAP
      JNA1HZ/HR768gaocvyuyv7KKNxDAtm2iqRTteh3TMOi2WoQScerFItX9fQLRCARDJ/pPEO7l
      qB06FInyYBELH42XFQk/PnCWR9XYq+8yFs0R9kYot0rU2lVC3jBto8Vcap7F3dtMxqZIBJOs
      FpePfVfbtinv7FA/KLKztISiKHi8XjSvl8R4Dn84xO7SCka74+DXFuJQX7YXVEUlHkhwUC8w
      GZvG6/GycrD0cDPItAwuJC6yfLDExMgkc6PHHxWauPo8E1efByCcTDz280A0SnJysh+/hnCB
      vgRAURQivij1To137v8Cvx4g4osyFh2j2W2yenD4iV9rV7m1/RsykSyxQKwfpQjxRH0JQMto
      8enmRw+/bnTqAHzW4+gPwEZpjavZF/pRihBPdK5aIYQ4bWf2mKFpNdk++D+OprG7aeBH/SlI
      DKUzGwDbtugaBUfTGIa3T9WIYSWbQMLVJADC1SQAwtUkAMLVHO0Elw926KphPJ0y6/t1ZiYS
      rG9XuDw/I7dTFeeSowD4Qz4quy0apR0CIxn29kuk/RaFlk38G9qhv8mj7dCm6bwd2kbaoYUz
      zoZH77QplxvkxifZXF5DiYbpNNqMj4N6dCslVVUfPndCVb8+OK52okFulRNOJ9zKWQAMjWQy
      RCDgJ3txlnjYT7nWIvyVG+kpisJJt4cU5ek2pJRTmIdwF2dXhMVHeTAWdODouvZE3HfKJQkx
      OHIUSLiaBEC42pntBTot7//X/0Vtz1lP0av/5c8JJuT6BDcY+gBMLX5Cd33d0TR650/7VI04
      a2QTSLiaBEC4mgRAuJoEQLja0O8E/+8//H22qxVH0/x1JMJon+oRZ8vQBwAAaY8Qx3A2OvT2
      Ch0lhm6UyR80mExFWN0usXD9GposY+IcchSAVDbN+nqThmkzHfWx3jC4kgmx37IZ9fa/HXom
      MYvX46XRaRD2Rbi9c+trP+/VDm1jO67FNA1pq3YJRwHYXFtjebXORC7E3YMm2VSYm2tlFjIz
      aOqTR4f+Jo+ODt2rrbnWqTIVukDIG6bYPHjs5wqPjw6tnKA1VdM8Msq0Szj6K+emLpObOnx+
      cfbwcfrCKVf0BH5PAK/mY624zHR8hpWDJWzb+Se8EA+cq4+5vdoue7UdTNuiUC8MbOH/tzd/
      xYfvfOxomt/56Rss/NaLfapInJZzFYCW8eU9wboDfN9rBytML/9fR9PEK3OABOCsO7MBUFB4
      LnWJrXKebDQHwL39RWaTz5EMjbJV2WQkEKPRqdM2WrS6rWdcsTiPzmwAbGy2K1v49ACWbT3c
      yV4q3ENRFHweH6VmkVQojaZ6MC2D3drOY/Opt+5Rbew5em/Lfh2Qu824wZkNgKIoXBydQ1d1
      LNsCDu854NcD7Nf3yI1MkAyl+CT/IeMjk1xIXKTeqT02n2rjJqXaqqP3tqy/OJ1fQpx5ZzYA
      2Daf5j967NvV9mFbQ6lZfPi9pcI9lgr3yEbG+lLKuzcWeDsRdjTNH1yZ57WvfG0bbez6vrM3
      9vhQQ9KU0U9nNgBn7uDmU7ZTmFuf0vzZXzqaRrvwBsE//vunel/xZGc2AMPGqIQo/trZzb0D
      nQsE+1SPOPT/AScdl7xHYWafAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SAI Pie' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACpUlEQVR4nO3ZTU6UURBA0QKbhPbfGAmswGjc/0pMjNG5EJg00Glohc9l9OCes4Ka3LyX
      qqNlWZaBqONDDwCHJADSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ
      JgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkC
      IE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDS
      BECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0A
      pAmANAGQJgDSBECaAMh6Xp4FQNdmtxEAXb9vfgqArh+X3wVA07Is88sLQNX+aT8399cCoGn7
      eD93j7cCoOn6/soalK7Luz8z4xBG1O3DZmYEQNTu725mBEDUw7+HmREAUbv9dmYEQNT+aT8z
      AiDqdHU6MwIg6vRkPTMCIEoApK0FQNmH9ceZEQBR528vZkYARH16fTar45UAaHp58mrerd8L
      gKbVi9Wcv7kQAF2fz74KgK4v59/maFmW5dCDwCFs91sB0OYLRJoASBMAaQIgTQCkCYA0AZAm
      ANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIg
      TQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIE
      QJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCk
      CYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQNp/ouFF5lEOvSQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='164' name='Sheet 15' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='W_tour_sideByside' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='W_tour_sideByside (2)' width='192'>
      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
      ZQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Wildlife and Nature' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Wildlife photography' width='192'>
      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
      TP4/XBeDys/TXHkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='World map' width='192'>
      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
      ewAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='in genaral ' width='192'>
      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
      jpRpAigAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='location' width='192'>
      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
      OTCu8r/RAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='photography Interest' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
