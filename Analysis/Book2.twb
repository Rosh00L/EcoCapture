<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1211.0901                               -->
<workbook original-version='18.1' source-build='2024.3.2 (20243.24.1211.0901)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
        <calculation class='tableau' formula='2020.' />
      </column>
    </datasource>
    <datasource caption='v_countrydate+ (ecocapture)' inline='true' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.040164612je0re1ch3d4c10oumvj'>
            <connection class='mysql' dbname='ecocapture' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photography_rating' table='[v_photography_rating]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
        </relation>
        <cols>
          <map key='[City]' value='[v_photography_rating].[City]' />
          <map key='[InputID (v_photography_rating)]' value='[v_photography_rating].[InputID]' />
          <map key='[InputID]' value='[v_photographyvsnonall].[InputID]' />
          <map key='[Photography]' value='[v_photographyvsnonall].[Photography]' />
          <map key='[Travel_Date]' value='[v_countrydate].[Travel_Date]' />
          <map key='[Travel_Month]' value='[v_countrydate].[Travel_Month]' />
          <map key='[Travel_Year (v_photography_rating)]' value='[v_photography_rating].[Travel_Year]' />
          <map key='[Travel_Year (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Travel_Year]' />
          <map key='[Travel_Year]' value='[v_countrydate].[Travel_Year]' />
          <map key='[Travel_month (v_photography_rating)]' value='[v_photography_rating].[Travel_month]' />
          <map key='[Travel_month]' value='[v_photographyvsnonall].[Travel_month]' />
          <map key='[Traveller_Country (v_photography_rating)]' value='[v_photography_rating].[Traveller_Country]' />
          <map key='[Traveller_Country]' value='[v_countrydate].[Traveller_Country]' />
          <map key='[Traveller_ID (v_photography_rating)]' value='[v_photography_rating].[Traveller_ID]' />
          <map key='[Traveller_ID (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Traveller_ID]' />
          <map key='[Traveller_ID]' value='[v_countrydate].[Traveller_ID]' />
          <map key='[activity]' value='[v_photography_rating].[activity]' />
          <map key='[inputID]' value='[v_countrydate].[inputID]' />
          <map key='[location_Type]' value='[v_photography_rating].[location_Type]' />
          <map key='[month (v_photography_rating)]' value='[v_photography_rating].[month]' />
          <map key='[month (v_photographyvsnonall)]' value='[v_photographyvsnonall].[month]' />
          <map key='[month]' value='[v_countrydate].[month]' />
          <map key='[rating (v_photographyvsnonall)]' value='[v_photographyvsnonall].[rating]' />
          <map key='[rating]' value='[v_photography_rating].[rating]' />
          <map key='[sentiment_comments]' value='[v_photography_rating].[sentiment_comments]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>inputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[inputID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>inputID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Travel_Date]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Month</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[activity]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>activity</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>18</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location_Type]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>location_Type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_comments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sentiment_comments]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>sentiment_comments</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photography]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Photography</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>14</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Z-scor' datatype='real' name='[Calculation_3191363324673548296]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([rating (v_photographyvsnonall)])-WINDOW_AVG(SUM([rating (v_photographyvsnonall)])))/WINDOW_STDEV(SUM([rating (v_photographyvsnonall)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='InputID (v photography rating)' datatype='integer' name='[InputID (v_photography_rating)]' role='dimension' type='ordinal' />
      <column caption='Input ID1' datatype='integer' name='[InputID]' role='dimension' type='ordinal' />
      <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
          <alias key='&quot;photography&quot;' value='Photography Holiday' />
        </aliases>
      </column>
      <column caption='Travel Date' datatype='string' name='[Travel_Date]' role='dimension' type='nominal' />
      <column caption='Travel Month' datatype='integer' name='[Travel_Month]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photography rating)' datatype='integer' name='[Travel_Year (v_photography_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
      <column caption='Travel Year' datatype='integer' name='[Travel_Year]' role='dimension' type='quantitative' />
      <column caption='Travel month (v photography rating)' datatype='integer' name='[Travel_month (v_photography_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel month' datatype='integer' name='[Travel_month]' role='dimension' type='quantitative' />
      <column caption='Traveller Country (v photography rating)' datatype='string' name='[Traveller_Country (v_photography_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller Country' datatype='string' name='[Traveller_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID' datatype='integer' name='[Traveller_ID]' role='dimension' type='ordinal' />
      <column caption='v_countrydate' datatype='table' name='[__tableau_internal_object_id__].[v_countrydate_98771871190540D39E6CEF22D122B18C]' role='measure' type='quantitative' />
      <column caption='v_photography_rating' datatype='table' name='[__tableau_internal_object_id__].[v_photography_rating_CE4A7D81431946439618575566B06C74]' role='measure' type='quantitative' />
      <column caption='v_photographyvsnonall' datatype='table' name='[__tableau_internal_object_id__].[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]' role='measure' type='quantitative' />
      <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
      <column caption='Input ID' datatype='integer' name='[inputID]' role='dimension' type='ordinal' />
      <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
      <column caption='Month (V Photography Rating)' datatype='string' name='[month (v_photography_rating)]' role='dimension' type='nominal' />
      <column caption='Month (V Photographyvsnonall)' datatype='string' name='[month (v_photographyvsnonall)]' role='dimension' type='nominal' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Rating (V Photographyvsnonall)' datatype='integer' name='[rating (v_photographyvsnonall)]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
      <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
      <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='Max' name='[max:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='None' name='[none:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country]' derivation='None' name='[none:Traveller_Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[max:Traveller_Country (v_photography_rating):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:sentiment_comments:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;negative&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;positive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;neutral&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pays-Bas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Schweiz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Skye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldvies&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mariana Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niederlande&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Near Prague&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reunion Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stewart Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini (Swaziland)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Deniyaya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Polonnaruwa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ahangama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katukitula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arugam Bay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nilaveli&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Habarana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tissamaharama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ella&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pussellawa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bentota&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nuwara Eliya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kalutara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ambalangoda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Koslanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kalametiya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beruwala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peradeniya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haputale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trincomalee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hikkaduwa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Unawatuna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kalkudah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kandy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Embilipitiya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saliyapura&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colombo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pinnawala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ampara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mirissa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jaffna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Weligatta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Galle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sigiriya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anuradhapura&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Negombo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country (v_photography_rating):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='v_countrydate' id='v_countrydate_98771871190540D39E6CEF22D122B18C'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
            </properties>
          </object>
          <object caption='v_photography_rating' id='v_photography_rating_CE4A7D81431946439618575566B06C74'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photography_rating' table='[v_photography_rating]' type='table' />
            </properties>
          </object>
          <object caption='v_photographyvsnonall' id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID (v_photography_rating)]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photography_rating_CE4A7D81431946439618575566B06C74' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Frq country visitors'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Travel Year (v photography rating)' datatype='integer' name='[Travel_Year (v_photography_rating)]' role='dimension' type='quantitative' />
            <column caption='Traveller Country (v photography rating)' datatype='string' name='[Traveller_Country (v_photography_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_Country (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Travel_Year (v_photography_rating)]' derivation='None' name='[none:Travel_Year (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='None' name='[none:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Traveller_Country (v_photography_rating)])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Asia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;England&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Vietnam&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photography_rating):qk]</cols>
      </table>
      <simple-id uuid='{E24F6573-B02C-4064-851B-4781DD2B59F3}' />
    </worksheet>
    <worksheet name='Line chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
              <calculation class='tableau' formula='2020.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_photographyvsnonall)]' derivation='None' name='[none:Travel_Year (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='color' id='refline0' value='#ff0000' />
            <format attr='stroke-color' id='refline0' value='#ff00004b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</cols>
      </table>
      <simple-id uuid='{0C548562-A996-4A45-9C46-A330E4EE51BC}' />
    </worksheet>
    <worksheet name='Line chart (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
              <calculation class='tableau' formula='2020.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' forecast-column-base='[cnt:Traveller_ID (v_photographyvsnonall):qk]' forecast-column-type='forecast-value' name='[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_photographyvsnonall)]' derivation='None' name='[none:Travel_Year (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='color' id='refline0' value='#ff0000' />
            <format attr='stroke-color' id='refline0' value='#ff00004b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Covid 19' label-type='custom' probability='95' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{87A7AAF9-8AA3-4318-BFA5-BB2477C400F5}' />
    </worksheet>
    <worksheet name='Non vs Poto'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</cols>
      </table>
      <simple-id uuid='{6A50E07A-6C64-4E2D-A8D6-C7B847FDFC3F}' />
    </worksheet>
    <worksheet name='Photo Activity'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='65' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='-90' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' id='legend-color' value='center' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</cols>
      </table>
      <simple-id uuid='{8ACD1209-7334-4E56-857C-B5BB9F8D0C52}' />
    </worksheet>
    <worksheet name='Photo Holiday World Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Traveller Country' datatype='string' name='[Traveller_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Traveller ID' datatype='integer' name='[Traveller_ID]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID]' derivation='Count' name='[cnt:Traveller_ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_Country]' derivation='None' name='[none:Traveller_Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID]' derivation='Count' name='[pcto:cnt:Traveller_ID:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Traveller_Country]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Photography:nk]' member='&quot;No photography&quot;' />
              <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]'>
            <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([activity])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Asia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bermuda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bolivia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Brunei Darussalam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cape Verde&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Channel Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Curaçao&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;England&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Eswatini (Swaziland)&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Isle of Skye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Liechtenstein&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Malawi&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Maldvies&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mariana Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Monaco&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Near Prague&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Niederlande&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Palestinian Territories&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Pays-Bas&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Republic of Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Reunion Island&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Samoa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Schweiz&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Seychelles&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Somalia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;South America&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Stewart Island&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Taiwan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Venezuela&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Vietnam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Wales&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Yemen&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]' field-type='quantitative' max='32056882.40199738' min='-3724079.2519264948' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]' field-type='quantitative' max='10766591.196134271' min='-6098587.5064701596' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3102B1BC-FA5F-46C0-9636-EDC5326D6981}' />
    </worksheet>
    <worksheet name='Rating'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7AB4EE68-1BAC-4E59-B2E4-2B1F6D160702}' />
    </worksheet>
    <worksheet name='SIA'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
              <wedge-size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2E56FC8B-EDFB-414D-AB93-5A9226D14142}' />
    </worksheet>
    <worksheet name='Stat'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column caption='Rating (V Photographyvsnonall)' datatype='integer' name='[rating (v_photographyvsnonall)]' role='measure' type='quantitative' />
            <column-instance column='[rating (v_photographyvsnonall)]' derivation='Sum' name='[sum:rating (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating (v_photographyvsnonall):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</cols>
      </table>
      <simple-id uuid='{B4F9E845-590C-4317-AE30-26D0E4BFAC9D}' />
    </worksheet>
    <worksheet name='type of visit'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='Count' name='[cnt:City:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
            <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[location_Type]' derivation='None' name='[none:location_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([activity])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' direction='DESC' using='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]' value='52' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]</rows>
        <cols>([federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk] / [federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk])</cols>
      </table>
      <simple-id uuid='{EF528593-29D6-41CC-B9C9-46FD7FABCCC7}' />
    </worksheet>
    <worksheet name='visit buy month'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
            <column caption='Month (V Photography Rating)' datatype='string' name='[month (v_photography_rating)]' role='dimension' type='nominal' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[month (v_photography_rating)]' derivation='None' name='[none:month (v_photography_rating):nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk] + [federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk])</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photography_rating):nk]</cols>
      </table>
      <simple-id uuid='{926ADA61-A842-4E77-9E74-95CFABBF94A5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='927' maxwidth='1469' minheight='927' minwidth='1469' preset-index='16' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
          <calculation class='tableau' formula='2020.' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98274' id='7' param='horz' type-v2='layout-flow' w='98910' x='545' y='863'>
            <zone h='98274' id='5' type-v2='layout-basic' w='96051' x='545' y='863'>
              <zone h='49139' id='10' name='Photo Activity' w='48136' x='545' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49139' id='12' name='SIA' w='14857' x='81739' y='49998'>
                <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49139' id='15' name='Rating' w='33058' x='48681' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49135' id='31' name='Photo Holiday World Map' w='52552' x='545' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49135' id='33' name='Line chart' w='43499' x='53097' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='42' h='98274' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='2859' x='96596' y='863'>
              <zone h='5609' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='2859' x='96596' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22222' id='11' name='Photo Activity' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='2859' x='96596' y='6472'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9277' id='13' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='2859' x='96596' y='28694'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4962' id='14' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type-v2='size' w='2859' x='96596' y='37971'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49084' id='32' name='Photo Holiday World Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' type-v2='color' w='2859' x='96596' y='42933'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7120' id='34' name='Line chart' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type-v2='color' w='2859' x='96596' y='92017'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='38' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98274' id='37' param='vert' type-v2='layout-flow' w='98910' x='545' y='863'>
                <zone fixed-size='280' h='49135' id='31' is-fixed='true' name='Photo Holiday World Map' w='52552' x='545' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49084' id='32' name='Photo Holiday World Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' type-v2='color' w='2859' x='96596' y='42933'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49135' id='33' is-fixed='true' name='Line chart' w='43499' x='53097' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7120' id='34' name='Line chart' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type-v2='color' w='2859' x='96596' y='92017'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5609' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='2859' x='96596' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49139' id='10' is-fixed='true' name='Photo Activity' w='48136' x='545' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22222' id='11' name='Photo Activity' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='2859' x='96596' y='6472'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49139' id='15' is-fixed='true' name='Rating' w='33058' x='48681' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49139' id='12' is-fixed='true' name='SIA' w='14857' x='81739' y='49998'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9277' id='13' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='2859' x='96596' y='28694'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4962' id='14' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type-v2='size' w='2859' x='96596' y='37971'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8CCA8090-640E-4B2E-82F7-02AE726BECC5}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='927' maxwidth='1469' minheight='927' minwidth='1469' preset-index='16' sizing-mode='fixed' />
      <datasources>
        <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
      </datasources>
      <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
        <column caption='Traveller Country (v photography rating)' datatype='string' name='[Traveller_Country (v_photography_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='None' name='[none:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98274' id='7' param='horz' type-v2='layout-flow' w='98910' x='545' y='863'>
            <zone h='98274' id='5' type-v2='layout-basic' w='88018' x='545' y='863'>
              <zone h='49137' id='10' name='visit buy month' w='65486' x='23077' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='13' name='Frq country visitors' w='45677' x='545' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='16' name='type of visit' w='42341' x='46222' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='33' name='Non vs Poto' w='22532' x='545' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98274' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10892' x='88563' y='863'>
              <zone h='4962' id='11' name='visit buy month' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' type-v2='color' w='10892' x='88563' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22222' id='12' name='visit buy month' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10892' x='88563' y='5825'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23031' id='14' name='Frq country visitors' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type-v2='filter' w='10892' x='88563' y='28047'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11435' id='15' name='Frq country visitors' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' type-v2='size' w='10892' x='88563' y='51078'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23031' id='17' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' type-v2='color' w='10892' x='88563' y='62513'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13593' id='18' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10892' x='88563' y='85544'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='37' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98274' id='36' param='vert' type-v2='layout-flow' w='98910' x='545' y='863'>
                <zone fixed-size='280' h='49137' id='33' is-fixed='true' name='Non vs Poto' w='22532' x='545' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='10' is-fixed='true' name='visit buy month' w='65486' x='23077' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4962' id='11' name='visit buy month' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' type-v2='color' w='10892' x='88563' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22222' id='12' name='visit buy month' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10892' x='88563' y='5825'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23031' id='14' mode='checkdropdown' name='Frq country visitors' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type-v2='filter' w='10892' x='88563' y='28047'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='13' is-fixed='true' name='Frq country visitors' w='45677' x='545' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11435' id='15' name='Frq country visitors' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' type-v2='size' w='10892' x='88563' y='51078'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='16' is-fixed='true' name='type of visit' w='42341' x='46222' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23031' id='17' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' type-v2='color' w='10892' x='88563' y='62513'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13593' id='18' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10892' x='88563' y='85544'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{148B74DC-060A-48C0-8A9E-8CA4F401E31E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Line chart'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Photo Activity'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Photo Holiday World Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Rating' />
        <viewpoint name='SIA'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{46844394-C8DC-47C5-8AB6-F61F276BEB8A}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Frq country visitors'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Non vs Poto'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='type of visit'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='visit buy month'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{79E10B69-7BD1-4F8B-8BCB-3874D47C0A61}' />
    </window>
    <window class='worksheet' name='Line chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EFB47061-EB8B-45F3-81A8-EA64D508D0E7}' />
    </window>
    <window class='worksheet' name='Line chart (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E4C7457-FEF1-485D-A6DB-FB8B09F1C85B}' />
    </window>
    <window class='worksheet' name='Photo Activity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{614D0002-C6CC-45DD-B3C3-55C172326677}' />
    </window>
    <window class='worksheet' name='Photo Holiday World Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D185D9C-B9E4-4F49-A905-1F029C7C6D15}' />
    </window>
    <window class='worksheet' name='SIA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDDD4D80-DDFD-40AB-ABC9-B13F899C78B8}' />
    </window>
    <window class='worksheet' name='Rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F11A9256-BDCD-4620-9D17-A973F9712E45}' />
    </window>
    <window class='worksheet' name='visit buy month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photography_rating):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5ED166A1-4843-4683-888B-4722DFCC388E}' />
    </window>
    <window class='worksheet' name='Frq country visitors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photography_rating):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2FEE0D30-8A7E-4B4D-B0D5-AD51894A3476}' />
    </window>
    <window class='worksheet' name='type of visit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{396FB502-1C76-4CC7-B7CB-7EF9A5E14013}' />
    </window>
    <window class='worksheet' name='Non vs Poto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B892FE8-53E8-4FB3-909E-CFD8384703C4}' />
    </window>
    <window class='worksheet' name='Stat'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Calculation_3191363324667273216:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[usr:Calculation_3191363324668567554:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95C1AC77-0FF8-46EF-A265-09594A86B84D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Frq country visitors' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Line chart' width='192'>
      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
      JAAi0v4fm81IfMTIGhgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Line chart (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAATW0lEQVR4nO3dyY8c53nH8e9bW3f1Pt09GzkckqIoWqJEybaiyIYsX+ybgThALgkSGMg1
      51wCJH9PfEiAHOIkhzhwbNgO7BiOtTpiKC4z5HDWnt6qa3vfHHpmNE3J5lDqnuKwng9ATKtZ
      rOft1vvrWvqpGmWMMQiRU1bWAxAiS1MLQJqm01rVE9fNaiOWJInUPeN1ZQsgck0CIHJNAiBy
      TQIgck0CIHJNAiByTQIgcs05yUI6Cbmztsm5xTnWHu5xfr7OIFI4ZoTt16n43qzHKcRMqJO0
      QiRxyM3332XklJlrzEEcoLUZbz8MXLx4kTRNUUqdwpAnaa2xrGw2ZFnVlrrTc6ItQBKFJDql
      Uqmxsb5Gu1khiBWOHm8BlFJYlpXJm3NYOyu2bUvdM1z3RFsAY8xRCo0xKKUY/6vxY6UUaZpm
      8uakaYplWZlsfZIkwXFO9BkidZ/Suidaq1LqaHIfTrTxj9OfdEJMk5wFErkmARC5JgEQuSYB
      ELkmARC5JgEQuSYBELkmARC5JgEQuSYBELkmARC5dqJeoCjoc+vWLfxai25/QLtaoBeCa0bY
      foPV84uzHqcQM3GiAHh+CZUm9EcxzWqJyBhKHhhVBh2htUZrnckNqrKqe1g7i5tFSd3pOVEA
      RoM+eD7teolOb/jJFkAH2P7cUZu0tENL3bNW90TXA5yEXA8gdc9iXTkIFrkmARC5JgEQuSYB
      ELkmARC5JgEQuSYBELkmARC5JgEQuSYBELkmARC5drKb44YBt27fpdVus7vfZ77uT7RDzzdr
      sx6nEDNxogBYrke9XGB7r4NSDr1hCMYQKQX9DrpRkXZoqXsm656sHbqzxdrugPMLLR5u7uA7
      /sEvyAhw/Ia0Q0vdM1tX2qG/gGdxQuStrhwEi1yTAIhckwCIXJMAiFyTAIhckwCIXJMAiFyT
      AIhckwCIXJMAiFyTAIhcO1GDhTGarc1tWq0G+70RFd8hSMDREVahjF9wZz1OIWbiRM1w8Sjg
      4f277IQOvmNwbAutDUoZlOVw6eIqWutMGtK01lhWNhuyrGpL3ek52gKkccA7v3mXWEOh3OCV
      F58/mtDJqM/WQNMoK/pBhFN0iFOwTYxVcI+Wy+LNMcaglMokfMaYzF6z1J2OTwKQxnT3++DY
      LC1fJD32l4XqHFcv+xSLRZI0xbUtEg0WGmW7RxMwi0mYZe3D+lL37NY9CoBX9PEcmwgoVso4
      xwpatkOlUhn/g4O+7NPv/Bdi+o5tV1yuX3uOzt4Ow1BnNyIhTtHEjpVBUZuroTO47lOILEwE
      IOrtEaoStUohq/EIcaomAlBqtXj48f+RZHOTBSFO3UQABlubrFw+x4OH/azGI8SpmghAub3A
      7laHc4uVrMYjxKmaCEDQ2aPaXsbO5lSvEKdu8us1q0jRCdjrjDIajhCnayIATsHQ6URUqsWs
      xiPEqZoIgFdu4CQBYRRnNR4hTtVEALTWLJ67RMWXRgeRD5PXAxgIRkPW1tZp1q9xeCycRgEf
      3blPo+TQHUHRiumFBteE2H6dK5cunP7IhZiCYwEwDLY2CIzFSysXOH4iyPZ86pUSngPdh5t4
      rQaVogHLA6PRWsvt0aXumax7LAApa1u7bNxeI3n51YmF4tGATqdDe36eVrtNu+7Tj8DRI5yS
      3B5d6p7duhNXhG188Ct+s7kDaolvv/0KTzKl5PboUvcs1p04CG6cu0C4N+DypcWZFBPiaTMR
      gO7WNqmTEsfWE336C3FWTQTALbi0l66wuiy/9E7kwyPfBBfYXrvFO7/9GOmIFnkwEYBkNKI6
      V2P93sOsxiPEqZrcBfJ90ljzh29+RY4BRC5MtkIkKa7nkqZyUbzIh4kA/M8v/puRTtBJmtV4
      hDhVEwG48fpXcLHxinKvT5EPk2eBXBcLQ0atNUKcumMBMAw6eyROiVJB7pou8uFYg0XC+k4X
      L00/1Vejk4jN3X3mKkUe7PRoVTx6EbhmhO03aNblInpxNh0LgMvqQoPfPNjkwVafuZr/yalQ
      ZRHHMVvbATaw3Y2xgVgpCHdoVEvSDi11z2TdiRY7v9mmuNklGu4B80fPp3HIg/U15ttt9och
      zbLHIB63Q9vSDi11z3DdibUqy8Z2XK4+f2niizC3WOaNN96YyQCEyNLR0e6o12Fje49aY47N
      tXViORUkcuAoAMVKDaVTurvbeNUqjjRDiGeYMYaP1naO7QIpRXd/j2CU0Go1yegXgQgxczv7
      Q77/H+8RjOLjxwB9bn+8x5UXarz33hqvv7aa3QiFmIF+EPHPP/uID+5s8UdvfYlXn188HoAC
      jbrD/YdDbny1md0ohZiyKEn56bv3+OGvPubtGxf5m7/4Bp4zPmN57KJ4zX6niwFKlerRAicl
      F8VL3aetrtaG925v8g8/+oCrKy2++41rlIvexDLH1mqh+7vc3Iu4frX8xAEQ4mlhjOHBTp+/
      /+G7uLbNX/3xG8w3Sp+57ESsbFuxdusDapU21y63T2WwQkxTdxDy/R++x/2dHn/2rVe4uvL7
      d+cnAmDZBdI4plSWu0OLsyWKU37w84/45W/v891vfIm/vPoa9gl+ufaxAET88tfvUqs1cE9/
      N0+Iz0Vrw8/eu8cPfn6Tt26s8rffe5vCE0zgY0sq6vUae/0+yJdg4ilnjOH9O9v8008+ZGW+
      xl//6ddpVJ58z2WiG3SlVeH92zeZ2+iy1Cx/auFhr8P61j5LzQr9CFw9wio1aNY+vawQs2CM
      YWO3zz/+5wfEiebPv32D1cX6517fxLai0l5gaeESL72w9JkL7+7uYNkF9roDMIZIKQi3aVR8
      aYeWujOv2w8i/u0Xt/jgzjbffesFXr68APCFxjTZDWo7dHfWebDV5dLyp1NVq9X56PZ9Wo0S
      wwgcM8LxpR1a6s5WMIr48Tt3+fdffcy3X3+OP/nmS9j2dK5anHg1vc2HDMKQUfTZd4WozbX5
      6pycHhXTZYwhTjXDIGa7O+TBTo+HewM2dvr0hiGDUcyrVxb5u+99k6I33QBOrK3UaPLS9Zdp
      VgtTLSKEMYZRlNAbRmzuDdjY7bOx22erM6A7jNDaUPFdGlWf8+0ql5YavPniCvVKkaJr4c7o
      1OSxtWqG3T3WH+5x8bKcBRJPLtWa4Shmvx8eTfAHu31294cMRjGuY1PxPRbmSiy3qrx2dYnF
      uTJVv0Cx8Lsn+CyPO45V7fGT/7rJ+ecWMtmfFmdDFKcMRhHb+0M2dvrjXZXdPp3+iChOKXgO
      c5UiS60Ki3MVXrw0T7NapFoq4Expv32ajjXDBdy72+fc+ebnOqiUZrizX1fr8W7KYBSx2w3Y
      3h+y1RmytT+kOxjRG4QYFKWiw3yjzHKzwmKzwlKzQrXkUfG9mfx/OKVrgi127t2l2CjQKJVx
      pRnumWKMIUpShqOY7iBkqzNkszM4muiDUcwoSii4NqWiS6vm06qVWG5VePX5RWqlAr5nU/Kf
      rePDYwHwsOwhP/7Rj3j7m9+iXfOzG5V4YkmqCcKYfhCxvR+w1RmwvT9ke39IbzA+k2LbFkXP
      oVEp0q77zDfKXF5q0Kz5VHyPUtH9vZ/gWXwHMGsTrRDLrRrbUczaRk8C8JRJU03/YNdkfavL
      bnfE1v6QTn9EP4hIUk3Rc6iVCjRrPguNEi+stPja9RWqpQIV33sq98GzNrFj1bx4jQvc48LF
      VlbjybXDU4Wdfsj97S73d3rc3+6z2w0IwpiC59Cul1hulZmfq/DSpXka1SIV35v6+fG8mHjX
      fvqv/8KgVsEqtLiyKpdFzkqUpPSHEVudAfc2u6xvd9neD+gOQmxbjc+iNCuca9e48dwijWqR
      WqlwtHuS1cH3s2jiXfzy197k1zdv06jL9QBfVJpqhmHMbi9gbbPLxm6f9a0encHo4Esfj/lG
      mQsLNd548TzzjTKNSlF2U07ZRACCzhb9OKuhnD0GCMLxFz8Pdvvc3+6yvtVjrx/QG0b4BZd2
      3Wdlvsal5Tm+/vIF6pUipYL8/oXPwxgDJgWdQJqATjA6hjjARENM1IdkhAn7mDiAeIiJBxAF
      mHgwfi4JQceYJIQ0mgxAdekCre13GISakxwFRKMA5Xhn6pSp1oZEa9JUk2pDmmqiJCWMU4Iw
      IQhjwjhhMIqJ4pQgjAnChFGUEIQJcZISpylRPD7rYtsW9XKB5VaVlfkqL12ap1nzqfoFLOvp
      +0JxPIn0wZ8UDieV0aA15vDv0nj8fBph0gjSGB0FJIrxBNTpwQQcL4PR48lo9NHkxKSYw2XT
      CIwZrwsgDSFNP1mGg/Vixsubw58pWqdEOhmPSVlgO2A5KMsGy0W5JfBKx36WUa4PlQUst4Ty
      SuAe/L3tglNA2QVwPD61I6kxpNHJNgN37txGuT5XLl9Ea/3JGwwopU7l8V5/xPu3tw8mcEwQ
      JYwOJmwUp0RJQhglxKkmihK0MbiOjWUpbEvh2DaubVHwbEoFD7/gUHBtyr6H61i06z6lgkvB
      tfELLp47Xt4zI9z1H+Md7bJsjF//dgybmseeMDyYII+l9ScT5IDRKalJxpNTpwefasl4uTQ5
      mnRGp+NJeTBZdRqPL3VSFgY1nkDKGv+xLJSyD563wDqYZAcTBeVgbA/LdsCywbJRloNRNsop
      HKzDQSkL3DKow2VcjLIOllEoyx3XtZ2DZcYT2QDKckCp8fMolO1gsNDGYHs+WO54HU84Vzh4
      bB5dxqhHdoH2tuiFMY30ZP31lu2g1HjSG2OOevONMUct0rN+HIzGn9BFz6FeLuAXXIqeQ9Fz
      cB0Lx7ZwbYVjWzi2QsFU6pJozGdcc6ocfzxBHvvmOeNJ8xjjT7nJz6lUG2y3iHK88WRxvPHk
      sGxQNkZZ4+cPH1vOsefHNY0xRwfVn/VYKYXWeuLxYcv7o88/6WMeeR6lML/jea01Wmssy/nC
      dT/r8bF31qA9H88YypWTfQewvLSI5ZWwLAvbtjNphTg/b3NhsXH6rRCeR/Kl72RzNuYZa8HI
      su6xj6CId9+/w6WVFp3O4ET/uFSpyflncaZN3Brxxo2r7Acp11fkizCRDxMf33PtReayGokQ
      GZBvXUSuSQBErkkARK5JAESuSQBErkkARK5JAESuSQBErkkARK49USNPZ2eTzf2AuZIzvj26
      GWH5Dc4tSOuEOJtOHIDOzia7+32SWDNKLFwFxiqQhkO0npPbo0vdM1n3xAFotBawLIt7G7s4
      yjCIwdEBTklujy51z27dJ1prba7Ndbk9uniGyEGwyDUJgMg1CYDINQmAyDUJgMg1CYDINQmA
      yDUJgMg1CYDINQmAyDUJgMi1E/UCGZ2ys7dPo1LkwU6PVtWjF4JrQmy/Tv2E9xIV4mlz7PcE
      fzadpsRxxMb2LpZO0BpSDDZgxreGZnV1lTRNM+nIHN85OJsNWVa1pe70PHYLkEQjev0hD9bu
      Md9usz8MaZZd+pHCMSNsaYeWume47mPX6vll2n6Z9vz8TAYgRJbkIFjkmgRA5JoEQOSaBEDk
      mgRA5JoEQOSaBEDkmgRA5JoEQOSaBEDkmgRA5NrJOoyMIdUaSyniNMWxbcY9pBqlbCzr9BvR
      hJiGEwUgjUf87+11agWLoXZw9IhhBLYJsYs1nr+8CpDZXZqzqptlbak7HY8NwGjQpRcayn6B
      YsHh3u37LMw38QsGlINifHtyrfVMBvg4WmuUUpldiyB1z3bdxwagWK7hOEN6nRi7VuPipYs0
      K0WGMdg6xPZrmV4PAGR2PUBWr1nqTs9jrwg7qTRN5YIYqXvm6spZIJFrEgCRaxIAkWsSAJFr
      EgCRaxIAkWsSAJFrEgCRaxIAkWsSAJFrU/1+Wboype5Zqzu1AGTVEZplJ2reXvOzWHdqAbAs
      K5NbZx9+MmTRDKeUyuQ1S90prnta3aAARmtQCmMMauInU71qzBiDMaCUAdTE87O8NmBc95PX
      9GiZU6978B+zC79B68n/l4fPGxTWDD90jDEYQB17wZ8exxc31WOAtbu3CMKQ/jCl4Nmk0Qjj
      ldBpyquvXJ/aG7a385C76zsUXY1VKKPDIUuLS9y9d5dzV67TrhamUudRUdDnww9v4lVKxGHC
      8pxHWFoh2LrFyuUX8b3ZTIh4NODD397EKRaJo4Rz7TKh18b0Nwm0wwvPXZxJXbTmzq2bDMOY
      KExYOLfMcBjQrHh8fH+H1197ZTZ1ga2NdR7u7KNMgl9tEAyHvHTtCj/52S95+62vT63OVLcr
      Stmsnltgbn6JYDBkab5JvTnPoN9nqscwBlYvrVIsVXEtRavVJI5jFhbaRFE6xUKPlDWG9vJ5
      yoUC9apPfa6FpaDVajHdF/jpus2FZSq+T7NWotpoYilQlsPqyvnZ1cVgu0XOLTRpz89juUVK
      RQ/Hdih43szqHrq4ukK53sRG0WzU2Fy/R5SkDMN4ajWmGgCtU/ZDF99O+PLrXyGxiixUHK5d
      exF7qhfOG/Y7+8zVK7QXlxj0h+CV0LgsN2f7+8qG/S7Ndhu/MkenOyQe7DHoDej2ujOtGwx6
      NFstvHKDXrdPNOyi05T9bm+mddMkRjtlHNui6mqGw4Ao1SwsLMy0rjGG/f6Imu+xsNgmGAwp
      zi3z1pt/QKngTq3OVI8BhDhr5IswkWsSAJFrEgCRaxIAkWsSAJFrEgCRa/8PYpF+2eMpDJsA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Non vs Poto' width='183'>
      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
    </thumbnail>
    <thumbnail height='192' name='Photo Activity' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAbXklEQVR4nO3d2W9baZrf8e85XEWJm6iVEqmNthZvJZerXK6tM+nKVFUnVZ0EM0hjGhWk
      gQBpNPoi+Qtyk/u+GwRIEARoTBoIAlQ6KfT0Uu2BY9dqeZFsa7G1kZIoSqIokqK4niUXsuWN
      tE1Sorb3cyOL5nn9SD4/nu0575F0XdcRhGNIkiRJ3u8iBGE/iQAIx5oIgHCsiQAcKDq/+5//
      nfvhje1vC0nuz0RYX41QUAFUViJrTN2/v59FHinG/S5AeEzJJlGMdUyO3WP6+jKtrY18dyfO
      mb5GNtQ5HKZN1DRMzs+wsjCHLhkJvPE+HXbTfpd+aIktwAGyub5MnacHg5TDZrPhaOmis7ke
      m82G2xTD7e3H3tjCUJ+f/tOnmFtO4G0Qn2HVkMRp0MMpvrpACjudLa79LuXQkiRJ2tUAaJqG
      JElIkrRbQwrCntn16wBiYyIcNuIYQDjWRACEY00EQDjWRACEY00EQDjWRACEY00EQDjWanId
      Xdd1Pv/8c7q7u1leXkbXdRoaGtjY2ODTTz/FYDDUogxBeE5NtgC6rmMwGNja2qJQKJDL5bBY
      LAQCAdLpdC1KEISiygqArqmsrqygqBrRtSiqphGLRimo2ouXe/iJn06nkWUZg8FANptldnYW
      m81W1Q8gCNUoqxcoPD+NarFTR454pkAhmwWjFZPJQqCnE1VVkWVZ9AIJh4IkSVJZxwC5TJpY
      bAMDZrr6T7A4cRtPbw/pjQiqqqJp2k5DnCAcBmVtAXLpJNOzC/i6/CzMz+MPnGBp9gGtXSdw
      N1if2gIoisLvf/977HY7sViM9vZ23nrrLa5evcrMzAyBQIC1tTVcLhcWiwWPx0N/f/9e/qyC
      8JRdb4d+MgC6rvP111+jKArxeJxkMslnn31GLpdjdHQUTdNwOp0sLi6SSqVQFIUf/vCHNDY2
      7lY5gvBCezotSjabJRaLoWkadrudnp4eVlZWCAaDDAwMoCgK4+PjvPfee/T19aGqKplMZq/K
      EYSi9mwLIAgHXdkHweWYuzOCks+VvZy7tYOmzu7dL0gQitizAHz7278jndwoe7nT738kAiDU
      jOgFEo41EQDhWBMBEI41EQDhWBMBEI61sgKQz2wyNTnFVibL9P1JEqkMi6EgOUXdq/oEYU+V
      dRo0Gl3F4WlFSW8gWxzI+Q3ykoVQcIlArw9d15+YHKvC62tPjSEIe6usANTb7ISXZ9hqaEfL
      xZldT+PxnSCTz+ys/NV2gz4aQxBqoawAmExGdEMD3hYH83Nx+gZPEwnN0+bvRZZldF1/ohWi
      shBID2+YEYRaKCsANkcjQ47tbs2hU0MABPoHdr8qQagRcRZIONZEAIRjTQRAONZEAIRjTQRA
      ONZEAIRjTQRAONZEAIRjTQRAONbKCkBifZnbt8eIx+PcvnGDaDzJ2M0bRGKbe1WfIOypsloh
      0qlNNMlIKhGj98w5QqPf0NJ/iXQ0hOq0PTM1YmUdnZqmoShKRcsKQrnKCkBdvQPDepCtnJnI
      2G1cjV5CU7fxtHbuNLBV2wwnyzJGY00eWyAI5QXA6WnltLsFWZbQNR1Jlujt0cVEWMKhVVYA
      JEnCYNhe2aVHX8XKLxxi4iyQcKyJAAjHmgiAcKwVDUA2m611HYKwL4oG4Fe/+lWt6xCEfVFy
      F+jXv/41yWSylrUIQs0VDYDdbkfTNK5evcrY2FitaxKEmil6HeCXv/xlresQhH1RdAugaxrR
      yBL3H8ySzSuVzvEmCAde0QDMTN5hKZrEZpG4OTLCZia//Re6xo3vrpNKxblxY4S19XVu3xhh
      aS1ey5oFYdcU3QUKDJ3j1rV/YHwpQXBZ5s23zQDEVsMYTHXkClk0TSKXjNJ+cph0NIjaaBfd
      oMKhU7IXqLHZw3J8k76+zp3X8vkCG+sR3K1uLGYDGVVmeeIGTd5u0Q0qHEovWNMkzHUNnDrd
      v/OmNl8Pbb6e7W86Ova8OEHYayWvA4QXQiji6Fc44ooGIJ9OYLV70At5VE2kQDi6igbAaKkj
      l1PoP9nJZiJT65oEoWaKBkDTVDLpLaLxPB0d7lrXJAg1U3wLYKrD2aBy6+tvmVko/2nvgnBY
      lDwL5G7t49RZM81uWy3rEYSaKnkWKBGZJ7qlYRC3zAhHWMktwLl3/5LXxA3vwhFXMgDLc/e5
      HwzT3jvAya72Cq/rCsLBVnIHJ1/IoRus5BMbiMdgC0dVyQAkY3E0NU+rr+vxZkJX+eb/fUUi
      scaN69+zEI5w4/r3hJbXa1OtIOyyortA0aU5ZiNr2Ozup3o6VxZDmOvqSSY2OXnuAqHRa3QO
      vLM9N6jqEt2gwqFTNABNHT28cTbD5HwEg8n0+M1mC4XcFhg8TI3eoLXjJIuTN2nu7BXdoMKh
      VHJNC87OUVBy/OHvv+Inf/0XGABPqxdPqxcAX4dv+6u3rSaFCsJeKHkM0OptIraa4eI758Xs
      WcKRVXLdVnQTdVadXCYvToEKR1bJXSBbvYuP/+VPsBgNtaxHEGqq9BYgHeOPf/wzKxtbtaxH
      EGqqZADi8RRWQ4YvvvgHxElJ4agqGQC3x00+Dz3d3lrWIwg1VboVIpfDaDTQHThR3mNkBOEQ
      KRkASZKQZBlZdIQKR1jRACj5NOMT8zidNrZS6VrXJAg1UzQAssGE39dGNK7Q19Oy83oukyK0
      EEZVCoSCc2ymc6wuL5NXtJoVLAi7qejuvWwwUVAKDPS4uTsV4Y1T7QBomo6WXmVmQcUom9Ez
      68QzConQEoGexzPI6bpOpc1woD9cXhD2Xsnj2+5uL7+/cpOP//mZnddkCXKahNVoZDO+wnxM
      weMfIBNfQ9d1NE2reuXVNR1VFXcgCLVRNACaqjI/H+b1N9/Aanh8EJxNb1HQTLQ5baSSRrpP
      nCSyMEdrVwBZltF1vepuUEl0gwo1VHRNi68ukcxkmb51G0+LF7tte3ZoZ1Mbzqbt7k/nKScA
      jsFTNSpVEHZf0YPgxnY/rjorA32tLC0nxQMyhCOr5HWAlvZWEimFdCKCOMcjHFUld7ZNljpO
      DJ7F2+oR9wMIR1bJddtslPjyi//Fg0UxNaJwdBUNwOrKCrqxjk//+m/wNuhsZvO1rksQaqJo
      AJpbmklurPNg6j6qqQG71VzrugShJopPj67kWF6OkFXAXm+pdU2CUDNFAzA1cp22wfOcbDNy
      e3y51jUJQs0UPQtkra/jqy9/h6RpvPF+Z7G3CMKRUDQAHm8npxQDINHcWL/zeiIaYX4xgq+n
      h4XpaXwn+1manqK1Z4AWV32xoQThQCsaAGdTO37VgLulGcMTN8Q02B2ghVhfXaPn9FlCo9/S
      PPAWqegCHnuXmBpROHRKXghbC03y9Y3bXLz0Dq3u7U/3zc1NTEaZgqIxNzWOzdVGeGYcR2OL
      mBpROJRKrmkNbgetah2ZjAIPn5NndzXSXe+kzmohl8thsVjI53KYLOJMkXA4lbwSnNpMMHrj
      Ftkn7vYyGE3Y6qxIkoTVuv3VYrWK+4aFQ6v4leDQNPPLW7R0tOGoNxV7iyAcCaX73CQJi0Vc
      ARaOtqLHAC3+ABcMOpFYHkn0ggpHWMm1ezE4zbXLV1iNHby5QTVNQ1XV574KQrlKngVqbvHh
      HzDT2+GqZT2vZGRkhOnpaYaGhrh58yZer5d4PM4nn3xCfb24ICe8utIn3CUDspolvpXFbjtY
      B8LNzc04HA7cbjcNDQ34fD6WlpaIx+MiAEJZSgagkN8inUyjHcBjgLt372Kz2djY2MBqtWIw
      GGhpaaG9vX2/SxMOmZIByBZ0JD1DMr4FzQfrU/WTTz557rWBgYF9qEQ47EoGwGww885H/4Im
      Z0Mt6xGEmioagM2NOOb6OqbujCKfPU+zywZAcn2F2YUl2r1+lhaD+Lt7WZqfocV/kvYmx54V
      qes6X375Jf39/dy9exe3282lS5e4e/cu33//PYODg6yuruJyuYjH4/j9foaHh/esHuHoKBqA
      Bze/Y0U2Y0VCe2KqQ7vbQ1NqC1XJoqoS+c0orSdeI70WQnXX72k36KlTp8hms6ytrZFKpbhw
      4QJNTU1YrVbC4TC6rmMwGFBVlampKUwmk9gtEl6qaADaek4y2N2FBR6uzNsWpidYTip0+7xY
      zBLJrEpi/CbN3q497QbVNI2xsTF0XWdwcJD19XVisRjhcBibzcbg4CATExMMDg7i9XqZn5/H
      arWKrlLhpSS9yGy2iw+mCCcz9PZ24WhwYDa92pMiVVXdCcBv/tN/IJ0sf0qV0+9/xMV/9pOy
      lxOEckmSJBX9iGxqb+He1DVuJ+K89vqbNDltta7taZPTkEyVv5zLASd7X/iWe/fuMTY2xokT
      J3jw4AHDw8NMTEzwwQcfYLfbKyxYOCyK3xPc4KbF3UAsnWI5mt7/AMwvQHil/OU6218aAJ/P
      RyKRIJ/P8/777/OnP/2JxsZG4vG4CMAx8MK5QTXdTEvT0T4Neu3aNWKxGBaLhatXr3Lp0iUU
      RSGfF5OBHQcljxLdrV38sOsE2fzRnhv6Rz/60c6fX3/9dQD6+/v3qxyhxopuAQrZBH/3X/8b
      X/zuCxbXKtj3FoRDougWwGR18s67F1iKZ3Daj979vrdu3cJisdDb28tvfvMbfvaznxGJRBgf
      H+fkyZNcvXqVzs5OotEoQ0ND9PX1iVOqR1TJY4DNRBz1iO79PLpAduPGDZqbm9E0jba2NpxO
      J+FwmE8//ZRkMomqqkxMTDA+Pr7PFQt7pWQA/L0B6gygHsGnY9y6dYuRkREMBgNLS0uEQiGC
      wSDXr19HlmV++9vfcu7cOQYHB3G73WxtHbybgoTdUXK7bjCaMEoZVta28HoOVjdotd5++23e
      fvttAN56662d13/+858DcOHCBQA6O8W0kEddyQDIksbGlszprsad13RNJZPNUVdXRzabxWq1
      kstmMVusyPLhmBolNz1NYSlc9nJynRXbm2/uQUXCfioZgNnpOfxeO9PzUV4f3H4yZCoRY3Fp
      AcnsJJ/dwmq1spXOYnc3Eejy1qzoamxdvUbqD38sezlDS8tLA7C8vMzU1BSnTp3i2rVrDA4O
      Mjk5yblz5+jp6am0ZGEPFQ3AxsoSgdfeYDV4H0+Lc+d1s8VCnb2FOkOBuq5BQqPf0j7wFuno
      ws7N6XvRDSprekX3pWm6jvbMWLpW4UGNrr90ztLm5mYWFhaYmppCURRisRiapnHv3j18Pl9l
      /66wp4o/J3hliZjJg6WwRTyRocNTB8BGdI1EIo29s4O5e3fwD55naeYOrd0Dezs3aIW7V7Ik
      IT8zliRXeIunJL30VGgoFGJkZIRLly5hNBqRZRlZlunv7xenUQ+oov8r3adfR56bQa0/QY//
      8TFAm7+PNv/2nz2N26+7Xzu/91UeEn6/n1/84hcA4oacQ6JoACTZQFffyVrXIgg1J7bLVZqd
      nSUajdLZ2cnMzAzvvfce6+vr/PnPf+bs2bM8ePAATdPIZrMMDw/j8/moq6vb77KFhw7enCeH
      TG9vLwaDAa/Xi8223Ta+tbWFJEk4HA4CgQBnzpxB13UmJia4c+fOPlcsPElsAao0MTHBd999
      h8Vi4dtvv8Xj8SBJEmazmWg0SjabZWBggEKhwOrqKuvr6/tdsvAEEYAqDQ4OMjg4CMDp06d3
      Xu/q6nrqff39/aLN+gASAaiCmougpucqWtbkuogkiT3Q/SYCUIVC/Drp4N9WtKz7wv8BEYB9
      J/4HhGNNBEA41soKgK6ppLbSaKrCSiRMOptnYz1K4SjeNCAcC2UFIL21yWI4wlZync20QiEV
      ZTkaJxgqv71YeDFd15mZmUHTNObn51lZWeEPf/gDc3OVHXQLxZV1EFxvd2Hb2MRkMrOVWCKb
      1Gj0D5HeiBzLblCt0rEARVGQXtDkl81mmZ+fp62tjYWFBQYGBhgYGCCVSr20K1V4dWUFILm+
      wurqKhaLBYPJRIe/h5XQDK3dJ45lN6hS6ViA0WhEkkv/+hsaGmhqasJsNuP1ejGZTITDYd58
      882d37VQvbIC4PC0csHTCkBrawsA7tNndr8qgVQqxfz8PLIss7i4yMDAAD09PWLl32XiOsAB
      1dDQwI9//GMAzpwRHzJ7RZwGPWBUVeX69evkcjlgu9comUwSDAYpFApMTEyQTqcpFAr7XOnR
      ILYAB8zMzAyFQoFbt24xNDTE+vo6kUgESZJQVZXR0VHi8TjDw8OYTAfr6Z2HkdgCHDAGg4Fk
      MoksyyiKgt1uR5Zl7HY7Pp+P9vZ2lpeXuXLlyn6XeiSILcAB09bWxvT09M6cRJubmwQCAW7f
      vo3D4WBgYIBsNksmk9nnSo8GEYADpr6+ng8//HDn+3fffReAjo6O/SrpSBMBOCAeLK7zt/97
      pOzlXPUW/uPP/tHuF3RMiAAcEJmcwmy4/GeqeRyvdn+xqqoUCgWMRiO6riPLsrimgAjAsbGx
      scGVK1dwOp2sra3x3nvviblPKfMskKYWWN9IoGsqoWAIRdNYWgiRU9S9qk/YJU1NTfh8PgKB
      APl8ntnZ2f0u6UAoawuQzWSIbWwgZTcwmC1M3R3D6molFFwi0OtD13UeP3W1wocLPDXG46Eq
      6QbSH473/IuVeL6u5x8wW8Zouv7UAEWeVlveWC+hqiput5vOzk6amppwuVxV/ZtHRVkBsDU4
      sMQS6LqCtb4erZDDUldPprC+s/I/7gatzKMxniRXEaZnx9IrHuv57s9qViBN05B4PF61Y72M
      JEn09m4/MfOjjz565eWK0XWdr776ivb2dkKhEM3NzU9NCHCYlN0Nur4epb6nl7VwmMCZYZbm
      Zmjz9yHL8s7BVTXdoFKxg7MKAyVJ0nNjVRzOImNVMyW8wWBAkh+PJ1fRWVrrg9loNMqDBw/o
      7e3F6XQSi8UO7QF12d2gww+7QT2u7VmjA/2Du1+VsCsmJycZHR3lww8/xGg0cvnyZerr61lc
      XKS5uZlQKMS5c+cYGhrC6XS+fMCHTCYTvb293Lp1i1OnThEOH94bosRZoCPMZrNhNBpJJpN4
      vV7a2tpobGzE5/MRiUTo6uoiEokQjUb55JNPXnlcp9NJIBDAbrezurq6c7HuMBIBOMIe7QJq
      mkYwGGR2dhaHw8Hk5CT9/f10d3eTy+UIBoNlj+33b08T7na7d7vsmhIBOMJ8Pt9TD+bo6+sD
      Hj8l85ETJ0680nhTU1M0NzfjcDi4cuUKfr+fdDpNT08PY2NjDA0Noaoqzc3Nu/dD7DERgCPo
      wdoU385fq2jZn5z/15gMz7dZZ7NZxsfHGRoawuVy4XA4iEQitLe3E4vFCAaDxGIxvF4vTU1N
      VZ0JrCURgCNoIR7k7yf+b0XL/tVrf1M0AHNzc6yvrxMMBuno6KCxsZHJyUlaWlooFAp8/PHH
      3Lx5k7m5OYaGhnZmyj7oRACEVzI4OEhfXx/5fB5FUdjc3OTixYssLS0hyzJWq5Uf/OAHzM/P
      H6rnH4gACC+k648vHRpNJowP70I7e+4cAI0ez1Pv7wsE0B8uJ1HFdZcaEQEQXmg+HuM/f/d1
      Rcv+8q138bkO9lkicUukcKxVFID8VpJbt24Q3YgzdusGK7HUbtclCDVR0S5QNpeiUJBRUlFa
      +s6xFQ2hOuvE1IhleHZqRFWtrKVcfzjWU3VVMVmxqigo0uPx1GrGUtUDP41jRQEwmeqor5OJ
      bebZiozS2NIhpkYs07NTI1baTCY9HOtJsqGKxjqj8anxDNWMZTAc+AeEV1SdtcFF/6B95zJ7
      NZ2MgrCfKlpzpYefho96TQ76qS7h4Lt8+TIjI+VPClDMnTt3uHz58ivtooqPbmHfPXoGQjwe
      35W71O7fv4/L5XqlD2YRAGHfybKM3+8nlUpVHQBd1zl//jxzc3Pk8/mXvv9gH6EIx8YHH3yw
      K+NIkoTD4eDixYuYzeaXvl8EQDhyPM+0Z7yICIBQc4qi8PnnnxMIBBgeHiYcDjM6OkpraysN
      DQ2EQiE8Hg9Op3PnRv5SdF1nZGSEhoYGBgcHGR0dJZlM8s477/DNN9/Q1NSErus4nU7a29uf
      W14cAwg1l0gkOHfuHJlMZucA2Gq1MjAwgKqqGAwGgsEgN2/e3HlOQin5fB5d11lZWQHYmfhr
      cnKSUCjE4uIid+/eZWxsjGw2+9zyVQVA1xSmpybZzLz8YEMQHrHb7Vy/fh1JkgiHwyQSCcbH
      x7l58ybXr1/nwoULdHV1sbm5WXSlfZIsyyQSCQqFAtlsdufU/KMAnD9/nkAgQCKRKDoZWFW7
      QJnEChZ3O5HwEva+nmqGEo4Rs9nMT3/6053vn5yi8dEN9sPDwwwPD790LJPJtHMDTi6XQ5Ik
      zp49S3d3N6lUCpvNRn9/P263u+guUFUBkCQZJZ9F7EkJr0JTVCJTixUt6+rwYHM1PPWarhYA
      HW/b43uQHQ0Pb8bRCjTYLICK1WzA39n+cJk8SI/nZKoqAFZnK8ZECG+X7+VvFo49JVfg+v+o
      7Mk2w3/1Dv7hpwOw9V/+MXqm/Bm1zW/8Wyzv/ntgF7YAvq5ugJ0HZeu6jiRJnPmLf4qSe/H+
      WzFNnT2oqrpzQUSSJAh0Q1tL+QXa6+Fhl+Wjuiznh5EqmMpDttl2OjYfjSXV9WP2/pvy6wJU
      TUfS1Z2xWlx1fPaX5T8Nss5sfK6uHncf/+q1zyqqS9blnd+/JEk4zRY+DPRXNJbdbH5qLAwS
      A//ktcrGanU9t14Y3vh3oJS/jtF+dud3Jum7OEOqqqpPdINW59Fco7vVaPfo7IIY62COtROS
      Vxhrt9YxSZKkXQ3AqyhkN/l+ZIK2jhb6erqrHE1l4s49soUCnb0DNLvqqxhLY2ZqkmQ6R4vX
      T0frq19MKWZtJUJsPUpn7wD11uout2ysrTEfSXDmTKDqCzdLwRk2EilMDR5O9nZW2LT+sK7o
      GhvJdRpcfloaq5sFIptKsByNY3e68LiclU4HC0Ahs8n9mSC5fJ4TQ2exl/j9S5Ik7cvRq1rI
      kMnvxjMFVNIZBS2/RTgcrXIsnc1UFi2XJ7K6UnVliY018opGrlD9DSGZVBxJ0tiN31ginsRk
      kFhcDFc+U/xD2VSCXKFAequC3ZBnSLKEUsgTX1sjXeXzJpR8FlUykU6usbKafOF7a34lWFMV
      3C1eev278XQSI25XPRZ7J+1t1c5GJuPxONFkK50+b9WVORxOkksRqHIXTtdUYrHU9r0XVVcF
      nmYP6Ty8c9Jb1ac/gFLYYmM9hS5XcHz2DDWbYTmyTGtnH/Wm6na9TNZ66kxx2s5cpLnxxZP+
      1nwLYLI20NrkIPcKnXovV2B1LY7RuBv3JGisrEQxm4wVT8f+LFk2gFb9Hqai5mnr6WU3ZtuJ
      RFawmE3bB/FVjuVqbsdqstDa5qq6rtxWmjqHY+ekRTXy6QTJTAHDKxwr/H8tFvuLZ84a4AAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Photo Holiday World Map' width='192'>
      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
      K6xw1vH/Axkv2QSTAgQkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Rating' width='192'>
      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
      YZCEl1NvLVQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SIA' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Stat' width='183'>
      iVBORw0KGgoAAAANSUhEUgAAALcAAADACAYAAABGSfLmAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAN5UlEQVR4nO3de3CU5aHH8S9uEnJp0AQIGAqIGhpQK0wWSDJGikejHDkmiiWQyDViJOK1
      9NSDThhpgWpx8AgtRE1JsGCYCoVpGyqloqCkDRejjiKoXCJHISZhSNzNZTc+549cTCCpUkh2
      ++T3mWGG7LPv8z7v8mXzvMsAvYwxBhELXeLrBYh0FcUt1lLcYi3FLdZS3GItxS3WUtxiLcUt
      1lLcYi3FLdZS3GItxS3WUtxiLcXdxXYtcuJ0tvxIIjV7DSXVTWPHCzJwLtrl2wVeNLtY5Myg
      4Pj5HufFfXQ3BUuzSU36V47vnOLuBj94cBP79u1j355NPND/Dzz8xFYqL2TC4wVkOBdhxW+L
      4xt5LOevkJRAbO3FnVpxd6egKG6ZmcaQ4gN84Ou1+IuhGax5eTEzk4bS+yJPrbh97fNichfc
      zYQEJ86kTNYf8TYPVFOyYg7JSc3bmQUFvFcN7FqEc/JKDvFnHnM6cbZuBbwc2bSAuyck4HQm
      MGH6Ml7/omUuL1+8vozpLWN3Z3Pfj3/+zXeA6hJWTEtq3iJVsuOpqc3ndZKU/AB5H7qapjle
      QIZzLouWTW9ebyo5RV/gbb2Yaj7+0zLmJCfhdCYw6ee7qMbLh7++C+e8Td98t6rcxLyEn1BU
      3cWvrZEu9WZOnEnPP9b0Rf0psz0n2cT/9C/mK2PMsfx0E3fvC+b9z13GY+rNgWcnmfjFbxtj
      jDn56v0mPv05c6DSY4yn0vytzXHmWL5Jj8sxb7Y5j2ffMyZ5wmNmc1m9MabeHMqbYeLvXGMO
      GWPMoTXmzvgZZtWBSuMxxngO5ZopcTnN86SbGQ8/bAo/dBmPMcaYCvPBgY/NmXpjjPGYys0P
      mbgZvzMnWs97r1l3xGU8xmMqDzxn0uPnmy0VxhjzpsmJm2Se2NZ0rKdys3kobob53QljzMlC
      kxmXaQpPNq214tX7TXzOm83na32lTE5cuml5qS4GvXN3g0MrJzfdUI5PI9eVTu6TtxLWMhj9
      A669PJQAgojs2weP1wu42L9nL4kZ9zI6MgACIrlpTjpXvr6H/Z2c4/DfdxE0OZM7BwcBQQyf
      k0ly2S6Kj8Px4l2U3TSTrNGRBAABvXsT0ObY8Q8tJ21EaPNjgXjfW8OcWxNwOuNJXvI2eL1t
      3p2jGToslAACiBydSvKVxRxo3WP1IWbE1fQJgoDIvlyGF68XGDCJGbcfYeOWw0Alb+w4RMrt
      ie3W0BW6en6h6YZy/cyhvl1EQEAnv9hXc/WVbUb25/JIQW9+uvFNJkYFNW2DcjubtJFGbyAB
      31pRGDdmpPHc4zs5nHoZ206l8d9juz49vXP7pTDiEsewZ/1LvFPlBW8Vr/92A0duSiQO4Hvf
      ow+f8NHhBmh+dxwefyMNm/L4w2cNQAOHf5vH9iE3kjAUBo24jj67t7aOlR89Qafb3fo6asP6
      MvCyILzuo+wu/uTsJ1DfANDAZ39cw8Yvkxl//Xe4pOGppEVuZPUv/wppqQz/F1+Z86G4/dSA
      yU/zv853+VlKPM74FJ5vu53pexv3zryEV2Ym4kzIYtMpCIh7lNUP9GL9jPE4nePJ2hnLkl9n
      MhwIGJvNL/+rnOenJOJMmsIzu6s6P/HYDOYP+iPZiQnckrWWz4P7nfWEt/nVpCSczkTS875m
      zponuDGsw5nOviIm/djJ33fDLT8a0Pro8YKM5j8DeIw/c4iVk5tuZC/Kx/8Xb/sufuurz82R
      z86YpntElzmy4X4Tn1l4/vN0cCP73TXd5N7QclPcDbTn7gnqPmDdI0v4y7EaPAQSPuIOljwz
      ufvOf7yAjMkrKYvJ4NncNjfTXayXMfpHecRO2nOLtRS3WEtxt+F2u329BLmIFLdYS3GLtRS3
      WEtxi7UUt1hLcYu1FLdYS3GLtRS3WEtxi7UUt1hLcYu1FLdYS3GLtRS3WEtxi7UUt1hLcYu1
      FLdYS3GLtRS3WEtxi7UUt1hLcYu1FLdYS3GLtRS3WEtxi7UUt1hLcYu1FLdYS3GLtfQfPp2H
      lIWFvl7Cedu6dKqvl+AzeucWaylusZbiFmspbrGW4hZrKW6xluIWaylusZbiFmspbrGW3//x
      u+uTbeSvLeK9igaCwq/gtof+h9uHADRSUZzPig0lVDSGMHj8fTyaNpIwAErJy4PMzFHNs9Tx
      fv7TvDt2IfeMDPTVpUg38++4q95g9YtHiX/kV9x/eTBfu05wuqF57OR2XtgZwcwlv2F4SCVv
      vfgsBf94iuxxwedM4ypdz+agNJ5U2D2KX29LynbvJPSuOdxweTAOIDDs+0RFNI0d3bOXIakp
      DO/jgMAobpiaTM3ed6g7exJXKYWvRTAjLRZHN69ffMuP4z7DkY8HMc557jsxwJnTkVx1ZZtc
      I0dwTUAlVe2e5WL/+iIipqQwTGX3OH68LamlNrCWE2uX8cq7x6hpcBAyOIHp96cT189LfX0I
      Ie26vwRH+SnKgWiAktVklUDwuGyWd1C22+3u8Kw1NTVdcC2+Y9v1nA8/jhugN8Num8Pds8MJ
      dng4fXALK/PeYNjP/oPevWuprQNaA/+axqgBRLV8OXYeuZkxFK9azO8/upb02PaBh4aGnnM2
      t9tNeHh4F15P97Ptes6HH29LBjKsv4e60HCCHQCBRIxIYkz9McqASyOq+PRI4zdPrzrIB96+
      RLabI4yE2dOo3ZhPqas71y7+wI/jhpiEQexb9zeO1TUCHk4f3M07/a4lFhiWOIayLVs5XN0I
      nnLeKtxO+JjRnLNDDxvFrLkDKFpbjPruWfx6W+IYlkJm0gbWPP4gn9U6CL/iBuY8NK4p4IHJ
      3DchnxVPZFPRGELMrfOZ18HHgACO6InMumo5q7YNZcHEaH1q0kP0MsYYXy/CX7jd7g734i30
      dyj/vfj1tkTkQihusZbiFmspbrGW4hZrKW6xluIWaylusZbiFmspbrGW4hZrKW6xluIWaylu
      sZbiFmspbrGW4hZrKW6xluIWaylusZbiFmspbrGW4hZrKW6xluIWaylusZbiFmspbrGW4hZr
      KW6xluIWaylusZbiFmspbrGW4hZrKW6xluIWaylusZbiFmspbrGW4hZrKW6xluIWaylusVaA
      rxfwz5WSl7WakjaPDEp9ipyJA4GTbFu8iC3/12Zw7DxyM0c1HZcHmZmjmgfqeD//ad4du5B7
      RgZ22+rFt/w77i/LqUiYT+6s6zoa5FTvyfwiN5n+3zKNq3Q9m4PSeFJh9yj+vS2prMAxoJN0
      z1RS0S/qW8PGVUrhaxHMSIvFcbHXJ37Nr+OuO11FxOUDOx6sqiI4upOxVi72ry8iYkoKw1R2
      j+PX25KammpK8rOa9txB4Vxx/V3MnJ1ItAP4qpoPtywiawvgCCHq6h8xLSuVkWHNB5esJqsE
      gsdls7yDst1udyfnrOmiq/EN267nfPQyxhhfL+K7aKyr5PCOtbziSmFxWkz7QY+LE6WFvPD2
      cH7ySBKXtt5QxlC8ajFHb15Keuy3v3W73W5CQ0M7HU9ZWHihl9Htti6d6usl+Ixfb0vacgT3
      ZcSkmxn66VG+PHswMIzvj7mdBPenlLUbCCNh9jRqN+ZT6uq2pYqf8OO4T7LjpZfZe8KFB8Bz
      moObiyi7Jpb+wPuvPs+2g5XUNQKNdXzx1mbeuGwEMWdPEzaKWXMHULS2GPXds/jxnnsg4++I
      pTBvEeuO1dDgCGFwwnQeTB8CwMjk2zjx8nM8vrKc2sYg+v3wP5k7axzBHczkiJ7IrKuWs2rb
      UBZMjNanJj3Ev82euztoz20XP96WiFwYxS3WUtxiLcUt1lLcYi3FLdZS3GItxS3WUtxiLcUt
      1lLcYi3FLdZS3GItxS3WUtxiLcUt1lLcYi3FLdZS3GItxS3WUtxiLcUt1lLcYi3FLdZS3GIt
      xS3WUtxiLcUt1lLcYi3FLdZS3GItxS3WUtxiLcUt1lLcYi3FLdZS3GItxS3WUtxiLcUt1lLc
      Yi3FLdZS3GItxS3WUtxirQBfL+CfKyUvazUlbR4ZlPoUORMHAo1UFOezYkMJFY0hDB5/H4+m
      jSSs5bg8yMwc1XxUHe/nP827Yxdyz8jA7r4I8RH/jvvLcioS5pM767pzx05u54WdEcxc8huG
      h1Ty1ovPUvCPp8geF3zOU12l69kclMaTCrtH8e9tSWUFjgH9Oxw6umcvQ1JTGN7HAYFR3DA1
      mZq971B39hNdpRS+FsGMtFgcXb5g8Sd+HXfd6SoiLh/Y4diZ05FcdWWbXCNHcE1AJVXtnuVi
      //oiIqakMExl9zh+vS2pqammJD+rac8dFM4V19/FzNmJRDvqqa8PIaTdDuQSHOWnKAeiAUpW
      k1UCweOyWd5B2W63u5Nz1lz06/Al267nfPh13P2TF5Kb3PTzxrpKDu9Yy5pX+7M4LYbevWup
      rQNaA/+axqgBRLV8OXYeuZkxFK9azO8/upb02PaBh4aGnnM+t9tNeHh4F12Nb9h2PefDr7cl
      bTmC+zJi0s0M/fQoXwKXRlTx6ZHGb55QdZAPvH2JbHdUGAmzp1G7MZ9SV/euV3zPj+M+yY6X
      XmbvCRceAM9pDm4uouyaWPoDwxLHULZlK4erG8FTzluF2wkfM5pzPisJG8WsuQMoWluM+u5Z
      /HhbMpDxd8RSmLeIdcdqaHCEMDhhOg+mD2keTua+CfmseCKbisYQYm6dz7wOPgYEcERPZNZV
      y1m1bSgLJkbrU5Meopcxxvh6Ef7C7XZ3uBdvkbKwsBtXc3FsXTrV10vwGT/elohcmP8HDlLq
      2bCN3qcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='type of visit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='visit buy month' width='192'>
      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
      Rdd1/hdG5fdtnTP38AAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
