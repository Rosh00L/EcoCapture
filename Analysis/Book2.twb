<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1211.0901                               -->
<workbook original-version='18.1' source-build='2024.3.2 (20243.24.1211.0901)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
        <calculation class='tableau' formula='2020.' />
      </column>
    </datasource>
    <datasource caption='v_countrydate+ (ecocapture)' inline='true' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.040164612je0re1ch3d4c10oumvj'>
            <connection class='mysql' dbname='ecocapture' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photography_rating' table='[v_photography_rating]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
        </relation>
        <cols>
          <map key='[City]' value='[v_photography_rating].[City]' />
          <map key='[InputID (v_photography_rating)]' value='[v_photography_rating].[InputID]' />
          <map key='[InputID]' value='[v_photographyvsnonall].[InputID]' />
          <map key='[Photography]' value='[v_photographyvsnonall].[Photography]' />
          <map key='[Travel_Date]' value='[v_countrydate].[Travel_Date]' />
          <map key='[Travel_Month]' value='[v_countrydate].[Travel_Month]' />
          <map key='[Travel_Year (v_photography_rating)]' value='[v_photography_rating].[Travel_Year]' />
          <map key='[Travel_Year (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Travel_Year]' />
          <map key='[Travel_Year]' value='[v_countrydate].[Travel_Year]' />
          <map key='[Travel_month (v_photography_rating)]' value='[v_photography_rating].[Travel_month]' />
          <map key='[Travel_month]' value='[v_photographyvsnonall].[Travel_month]' />
          <map key='[Traveller_Country (v_photography_rating)]' value='[v_photography_rating].[Traveller_Country]' />
          <map key='[Traveller_Country]' value='[v_countrydate].[Traveller_Country]' />
          <map key='[Traveller_ID (v_photography_rating)]' value='[v_photography_rating].[Traveller_ID]' />
          <map key='[Traveller_ID (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Traveller_ID]' />
          <map key='[Traveller_ID]' value='[v_countrydate].[Traveller_ID]' />
          <map key='[activity]' value='[v_photography_rating].[activity]' />
          <map key='[inputID]' value='[v_countrydate].[inputID]' />
          <map key='[location_Type]' value='[v_photography_rating].[location_Type]' />
          <map key='[month (v_photography_rating)]' value='[v_photography_rating].[month]' />
          <map key='[month (v_photographyvsnonall)]' value='[v_photographyvsnonall].[month]' />
          <map key='[month]' value='[v_countrydate].[month]' />
          <map key='[rating (v_photographyvsnonall)]' value='[v_photographyvsnonall].[rating]' />
          <map key='[rating]' value='[v_photography_rating].[rating]' />
          <map key='[sentiment_comments]' value='[v_photography_rating].[sentiment_comments]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>inputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[inputID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>inputID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Travel_Date]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Month</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[activity]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>activity</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>18</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location_Type]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>location_Type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_comments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sentiment_comments]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>sentiment_comments</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_F455E113C3834A4CA3AFFA2440A7A93A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_F455E113C3834A4CA3AFFA2440A7A93A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photography]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Photography</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>14</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_F455E113C3834A4CA3AFFA2440A7A93A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_F455E113C3834A4CA3AFFA2440A7A93A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_F455E113C3834A4CA3AFFA2440A7A93A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_F455E113C3834A4CA3AFFA2440A7A93A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_F455E113C3834A4CA3AFFA2440A7A93A]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Z-scor' datatype='real' name='[Calculation_3191363324673548296]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([rating (v_photographyvsnonall)])-WINDOW_AVG(SUM([rating (v_photographyvsnonall)])))/WINDOW_STDEV(SUM([rating (v_photographyvsnonall)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='InputID (v photography rating)' datatype='integer' name='[InputID (v_photography_rating)]' role='dimension' type='ordinal' />
      <column caption='Input ID1' datatype='integer' name='[InputID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Photography]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
          <alias key='&quot;photography&quot;' value='Photography Holiday' />
        </aliases>
      </column>
      <column caption='Travel Date' datatype='string' name='[Travel_Date]' role='dimension' type='nominal' />
      <column caption='Travel Month' datatype='integer' name='[Travel_Month]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photography rating)' datatype='integer' name='[Travel_Year (v_photography_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
      <column caption='Travel Year' datatype='integer' name='[Travel_Year]' role='dimension' type='quantitative' />
      <column caption='Travel month (v photography rating)' datatype='integer' name='[Travel_month (v_photography_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel month' datatype='integer' name='[Travel_month]' role='dimension' type='quantitative' />
      <column caption='Traveller Country (v photography rating)' datatype='string' name='[Traveller_Country (v_photography_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller Country' datatype='string' name='[Traveller_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID' datatype='integer' name='[Traveller_ID]' role='dimension' type='ordinal' />
      <column caption='v_countrydate' datatype='table' name='[__tableau_internal_object_id__].[v_countrydate_98771871190540D39E6CEF22D122B18C]' role='measure' type='quantitative' />
      <column caption='v_photography_rating' datatype='table' name='[__tableau_internal_object_id__].[v_photography_rating_CE4A7D81431946439618575566B06C74]' role='measure' type='quantitative' />
      <column caption='v_photographyvsnonall' datatype='table' name='[__tableau_internal_object_id__].[v_photographyvsnonall_F455E113C3834A4CA3AFFA2440A7A93A]' role='measure' type='quantitative' />
      <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
      <column caption='Input ID' datatype='integer' name='[inputID]' role='dimension' type='ordinal' />
      <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
      <column caption='Month (V Photography Rating)' datatype='string' name='[month (v_photography_rating)]' role='dimension' type='nominal' />
      <column caption='Month (V Photographyvsnonall)' datatype='string' name='[month (v_photographyvsnonall)]' role='dimension' type='nominal' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
      <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
      <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='Max' name='[max:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='None' name='[none:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
      <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[max:Traveller_Country (v_photography_rating):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:sentiment_comments:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;negative&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;positive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;neutral&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Deniyaya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Polonnaruwa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ahangama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katukitula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arugam Bay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nilaveli&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Habarana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tissamaharama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ella&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pussellawa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bentota&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nuwara Eliya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kalutara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ambalangoda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Koslanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kalametiya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beruwala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peradeniya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haputale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trincomalee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hikkaduwa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Unawatuna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kalkudah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kandy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Embilipitiya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saliyapura&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colombo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pinnawala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ampara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mirissa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jaffna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Weligatta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Galle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sigiriya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anuradhapura&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Negombo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country (v_photography_rating):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='v_countrydate' id='v_countrydate_98771871190540D39E6CEF22D122B18C'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
            </properties>
          </object>
          <object caption='v_photography_rating' id='v_photography_rating_CE4A7D81431946439618575566B06C74'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photography_rating' table='[v_photography_rating]' type='table' />
            </properties>
          </object>
          <object caption='v_photographyvsnonall' id='v_photographyvsnonall_F455E113C3834A4CA3AFFA2440A7A93A'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID (v_photography_rating)]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photography_rating_CE4A7D81431946439618575566B06C74' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photographyvsnonall_F455E113C3834A4CA3AFFA2440A7A93A' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Frq country visitors'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Travel Year (v photography rating)' datatype='integer' name='[Travel_Year (v_photography_rating)]' role='dimension' type='quantitative' />
            <column caption='Traveller Country (v photography rating)' datatype='string' name='[Traveller_Country (v_photography_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_Country (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Travel_Year (v_photography_rating)]' derivation='None' name='[none:Travel_Year (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='None' name='[none:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Traveller_Country (v_photography_rating)])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Asia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;England&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Vietnam&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photography_rating):qk]</cols>
      </table>
      <simple-id uuid='{E24F6573-B02C-4064-851B-4781DD2B59F3}' />
    </worksheet>
    <worksheet name='Line chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
              <calculation class='tableau' formula='2020.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_photographyvsnonall)]' derivation='None' name='[none:Travel_Year (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='color' id='refline0' value='#ff0000' />
            <format attr='stroke-color' id='refline0' value='#ff00004b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Covid 19' label-type='custom' probability='95' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</cols>
      </table>
      <simple-id uuid='{0C548562-A996-4A45-9C46-A330E4EE51BC}' />
    </worksheet>
    <worksheet name='Line chart (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
              <calculation class='tableau' formula='2020.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' forecast-column-base='[cnt:Traveller_ID (v_photographyvsnonall):qk]' forecast-column-type='forecast-value' name='[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_photographyvsnonall)]' derivation='None' name='[none:Travel_Year (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='color' id='refline0' value='#ff0000' />
            <format attr='stroke-color' id='refline0' value='#ff00004b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Covid 19' label-type='custom' probability='95' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{87A7AAF9-8AA3-4318-BFA5-BB2477C400F5}' />
    </worksheet>
    <worksheet name='Non vs Poto'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</cols>
      </table>
      <simple-id uuid='{6A50E07A-6C64-4E2D-A8D6-C7B847FDFC3F}' />
    </worksheet>
    <worksheet name='Photo Activity'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='65' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='-90' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' id='legend-color' value='center' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</cols>
      </table>
      <simple-id uuid='{8ACD1209-7334-4E56-857C-B5BB9F8D0C52}' />
    </worksheet>
    <worksheet name='Photo Holiday World Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller Country (v photography rating)' datatype='string' name='[Traveller_Country (v_photography_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='None' name='[none:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' included-values='in-range'>
            <min>20</min>
            <max>469</max>
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]' field-type='quantitative' max='21095432.66258464' min='-16764666.826567017' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]' field-type='quantitative' max='11900310.896921083' min='-5808069.6219534399' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <lod column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3102B1BC-FA5F-46C0-9636-EDC5326D6981}' />
    </worksheet>
    <worksheet name='Rating'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7AB4EE68-1BAC-4E59-B2E4-2B1F6D160702}' />
    </worksheet>
    <worksheet name='SIA'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
              <wedge-size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2E56FC8B-EDFB-414D-AB93-5A9226D14142}' />
    </worksheet>
    <worksheet name='Stat'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[rating (v_photographyvsnonall)]' role='measure' type='quantitative' />
            <column-instance column='[rating (v_photographyvsnonall)]' derivation='Sum' name='[sum:rating (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating (v_photographyvsnonall):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</cols>
      </table>
      <simple-id uuid='{B4F9E845-590C-4317-AE30-26D0E4BFAC9D}' />
    </worksheet>
    <worksheet name='type of visit'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='Count' name='[cnt:City:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
            <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[location_Type]' derivation='None' name='[none:location_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([activity])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' direction='DESC' using='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]' value='52' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]</rows>
        <cols>([federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk] / [federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk])</cols>
      </table>
      <simple-id uuid='{EF528593-29D6-41CC-B9C9-46FD7FABCCC7}' />
    </worksheet>
    <worksheet name='visit buy month'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
            <column caption='Month (V Photography Rating)' datatype='string' name='[month (v_photography_rating)]' role='dimension' type='nominal' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[month (v_photography_rating)]' derivation='None' name='[none:month (v_photography_rating):nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk] + [federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk])</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photography_rating):nk]</cols>
      </table>
      <simple-id uuid='{926ADA61-A842-4E77-9E74-95CFABBF94A5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='927' maxwidth='1469' minheight='927' minwidth='1469' preset-index='16' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
          <calculation class='tableau' formula='2020.' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98274' id='7' param='horz' type-v2='layout-flow' w='98910' x='545' y='863'>
            <zone h='98274' id='5' type-v2='layout-basic' w='88018' x='545' y='863'>
              <zone h='49135' id='3' name='Line chart' w='67188' x='545' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49139' id='10' name='Photo Activity' w='44111' x='545' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49139' id='12' name='SIA' w='13614' x='74949' y='49998'>
                <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49139' id='15' name='Rating' w='30293' x='44656' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49135' id='16' name='Non vs Poto' w='20830' x='67733' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98274' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10892' x='88563' y='863'>
              <zone h='7120' id='8' name='Line chart' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type-v2='color' w='10892' x='88563' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5609' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='10892' x='88563' y='7983'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22222' id='11' name='Photo Activity' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10892' x='88563' y='13592'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9277' id='13' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='10892' x='88563' y='35814'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4962' id='14' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type-v2='size' w='10892' x='88563' y='45091'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98274' id='27' param='vert' type-v2='layout-flow' w='98910' x='545' y='863'>
                <zone fixed-size='280' h='49135' id='3' is-fixed='true' name='Line chart' w='67188' x='545' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7120' id='8' name='Line chart' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type-v2='color' w='10892' x='88563' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49135' id='16' is-fixed='true' name='Non vs Poto' w='20830' x='67733' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5609' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='10892' x='88563' y='7983'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49139' id='10' is-fixed='true' name='Photo Activity' w='44111' x='545' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22222' id='11' name='Photo Activity' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10892' x='88563' y='13592'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49139' id='15' is-fixed='true' name='Rating' w='30293' x='44656' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49139' id='12' is-fixed='true' name='SIA' w='13614' x='74949' y='49998'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9277' id='13' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='10892' x='88563' y='35814'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4962' id='14' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type-v2='size' w='10892' x='88563' y='45091'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8CCA8090-640E-4B2E-82F7-02AE726BECC5}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='927' maxwidth='1469' minheight='927' minwidth='1469' preset-index='16' sizing-mode='fixed' />
      <datasources>
        <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
      </datasources>
      <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
        <column caption='Traveller Country (v photography rating)' datatype='string' name='[Traveller_Country (v_photography_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='None' name='[none:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98274' id='7' param='horz' type-v2='layout-flow' w='98910' x='545' y='863'>
            <zone h='98274' id='5' type-v2='layout-basic' w='88018' x='545' y='863'>
              <zone h='49137' id='3' name='Photo Holiday World Map' w='45677' x='545' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='10' name='visit buy month' w='42341' x='46222' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='13' name='Frq country visitors' w='45677' x='545' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='16' name='type of visit' w='42341' x='46222' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98274' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10892' x='88563' y='863'>
              <zone h='13657' id='8' name='Photo Holiday World Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type-v2='color' w='10892' x='88563' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13657' id='9' name='Photo Holiday World Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type-v2='size' w='10892' x='88563' y='14520'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4962' id='11' name='visit buy month' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' type-v2='color' w='10892' x='88563' y='28177'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13657' id='12' name='visit buy month' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10892' x='88563' y='33139'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13657' id='14' name='Frq country visitors' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type-v2='filter' w='10892' x='88563' y='46796'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11435' id='15' name='Frq country visitors' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' type-v2='size' w='10892' x='88563' y='60453'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13657' id='17' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' type-v2='color' w='10892' x='88563' y='71888'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13592' id='18' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10892' x='88563' y='85545'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98274' id='29' param='vert' type-v2='layout-flow' w='98910' x='545' y='863'>
                <zone fixed-size='280' h='49137' id='3' is-fixed='true' name='Photo Holiday World Map' w='45677' x='545' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13657' id='8' name='Photo Holiday World Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type-v2='color' w='10892' x='88563' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13657' id='9' name='Photo Holiday World Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type-v2='size' w='10892' x='88563' y='14520'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='10' is-fixed='true' name='visit buy month' w='42341' x='46222' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4962' id='11' name='visit buy month' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' type-v2='color' w='10892' x='88563' y='28177'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13657' id='12' name='visit buy month' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10892' x='88563' y='33139'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13657' id='14' mode='checkdropdown' name='Frq country visitors' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type-v2='filter' w='10892' x='88563' y='46796'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='13' is-fixed='true' name='Frq country visitors' w='45677' x='545' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11435' id='15' name='Frq country visitors' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' type-v2='size' w='10892' x='88563' y='60453'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='16' is-fixed='true' name='type of visit' w='42341' x='46222' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13657' id='17' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' type-v2='color' w='10892' x='88563' y='71888'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13592' id='18' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10892' x='88563' y='85545'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{148B74DC-060A-48C0-8A9E-8CA4F401E31E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Line chart'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Non vs Poto'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Photo Activity'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Rating' />
        <viewpoint name='SIA'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{46844394-C8DC-47C5-8AB6-F61F276BEB8A}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Frq country visitors'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Photo Holiday World Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='type of visit'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='visit buy month'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{79E10B69-7BD1-4F8B-8BCB-3874D47C0A61}' />
    </window>
    <window class='worksheet' name='Line chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EFB47061-EB8B-45F3-81A8-EA64D508D0E7}' />
    </window>
    <window class='worksheet' name='Line chart (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]&#10;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E4C7457-FEF1-485D-A6DB-FB8B09F1C85B}' />
    </window>
    <window class='worksheet' name='Photo Activity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{614D0002-C6CC-45DD-B3C3-55C172326677}' />
    </window>
    <window class='worksheet' name='Photo Holiday World Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D185D9C-B9E4-4F49-A905-1F029C7C6D15}' />
    </window>
    <window class='worksheet' name='SIA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDDD4D80-DDFD-40AB-ABC9-B13F899C78B8}' />
    </window>
    <window class='worksheet' name='Rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F11A9256-BDCD-4620-9D17-A973F9712E45}' />
    </window>
    <window class='worksheet' name='visit buy month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photography_rating):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5ED166A1-4843-4683-888B-4722DFCC388E}' />
    </window>
    <window class='worksheet' name='Frq country visitors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photography_rating):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2FEE0D30-8A7E-4B4D-B0D5-AD51894A3476}' />
    </window>
    <window class='worksheet' name='type of visit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{396FB502-1C76-4CC7-B7CB-7EF9A5E14013}' />
    </window>
    <window class='worksheet' name='Non vs Poto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B892FE8-53E8-4FB3-909E-CFD8384703C4}' />
    </window>
    <window class='worksheet' name='Stat'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Calculation_3191363324667273216:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[usr:Calculation_3191363324668567554:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95C1AC77-0FF8-46EF-A265-09594A86B84D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Frq country visitors' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Line chart' width='192'>
      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
      5v8DUptPrDpzQ6kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Line chart (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Non vs Poto' width='183'>
      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
    </thumbnail>
    <thumbnail height='192' name='Photo Activity' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Photo Holiday World Map' width='192'>
      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
      8vm82u225vO5Li8vU3flHDY0soJIjacVFaxbfdP8AUmm8sBn/Psonu92u2vNmSSfI3wtPNfb
      JozCnIQHVI6Dg4NER+umjio+C8kqIly7FNl8LBBBTJuoPqLmgyVJuZzQlGaXCBdBVn8y8NVq
      1Tp+Qq9Pa0ubI/yGqVOv140oBZhNlCtiCnCxXHjS4OQCwxCUv3h/IaGTzBaZtuqv09RMYgzu
      Cp/tTbq+pOtutVpWzHGb75WudhMoIU8ZPI+kBSwcD5Js9T44OFAmsxIRrlQq5iOyaONPUFBF
      C9y0QhqPXLFYjDWZZoZ6TgWyemdnZ8Z3abfbVpsZHjQUwiI86gcxRCv+zyzO5/Pq9Xo6LJVU
      63d1Wq6q/UPm7vDwUFI8KkWcOGllvIvCkDTzK7xmv/qjiXTb3YfjViqVR93F0SPMmXiE0Tz/
      mdFoZM/X/53PcS9Z3aFJ80y63a6FVVut1kYrwcLKOIjrTB4cvJOTE5VKJV1cXNgDIZzl/+E3
      8Pu6OK//TpznTCajaqet6j/9k+o/aLtwjuGu4S+On3cVKcE2Dcsmw3P3uxu7Y6fTubPmF/4+
      PlaEeaQkEOb1zwiqCWY42V7GTCiOJq0mxMXFhc7Pz3V+fq4PHz7ow4cPMb3XEH78+Imw9RIZ
      RSuxqFevXsW2slarZRfn4b/IOztpk4ykF1nImaT+60+kXE4+P+jDrSHC1Xo+n6vdbps8yk1A
      NCvN92Gwk0nudDqm2DwYDK5lN58TuAesxOtWf+l68pPiFqj0odhAuVy+1lCdZut+cYF/tmkC
      EmDo9XpXVsquF53NZnVwcGBOba1WM2nBpC9MyuAmmQ+tVkv/9m//Zkpf2UJBi2pVhR8KZ5BX
      ZIKEseEkkKFNijBsgyiKrDAjDVAfWq2WLi4u7GGij3qXHWUeG+Dw9Ho9CwisA4lCSHbNZtPC
      79lsVu12O5YDwTrxgRFyJeVy2aI8SX0lQjDusDB4342MZLYSyEuoKOOshqaJ7wSTNhDfvXun
      v/zLv9Tf//3f6/PPP9f79+/1ox/9SL/97W/16aefqt1uq9vt6he/+IVOTk7sPKgpTgNJtqRQ
      5rbXCl8oPG740998drxut3sj5ejHDsLXkNny+byGw+FGJiz3EzBuiNp4+KQqVXvIyZOM7HQ6
      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
    </thumbnail>
    <thumbnail height='192' name='Rating' width='192'>
      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
      MjOf7AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SIA' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Stat' width='183'>
      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
      fMaPxxKRm/P/eJrQtidkYfwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='type of visit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='visit buy month' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3Sc13Xo+/va9IYy6B0sAHsRqd6lyEWSnbjIiZO4xDdO4pK7kqz7bu4f
      d9233l0r7yXvZr0bJzdOt51ry1W2KcmyeqEkSqLZSYAg0XsdTG9fOe8PUCBBDIABCQgEOL8/
      CM7Md87Z883Z3zlnn733kYQQggIFblLktRagQIG15LoVwDRNEonESshSoMAHTmEEWCX6L55h
      IpblxIkTXDnHNLIpUpksw0MjAKSik5w4cYZEKsnw+BQX205z8ux5hoeGZstYeopExliyzaHh
      oTmvL5w7xalzHTMvhEU8niAajc65JhUep39s+tq+5AZAXWsBNiqjExOI0Unah5MYmQSaw8nU
      2BRmNo4ZqEMf76K+ZR9SMkRpWYCjR96hbvsBBgeGSQiJke44g8M1pGIJVDPCpKOBEmMaZ6CE
      yVAIv8tGaUkx751oo7mxGt2QCU0OMFBWgcvpxVdayeDAMEkU5NQEYzGd4cEJdu3ahp4KYShO
      jEQcf1kVyfA0deW3rfUtWxMKI8Aq4XQHSGZMWjdVkclkSKeSlJRV4PUH8ThU6pu3gJ5CVSR8
      ZXWMT0WoL/PiLy7hwfvupaquCdVKkc0aeIor8GqCTEZnKhxlOjSF0JzIZhpZkRgbnyCb1amq
      b8bmdNPf1UFJaTH+oiL8LhejUxGQFWorSzEMA83pwaEZJOIppqYmQZLW+natGdL1WoFM0ySd
      TuN2u1dKppuKbDLKVNyksqwor+ujoTEGJxO0bm5EutRxJ6cmKS0pBcAysgyMTFBfW71oPUII
      2s+coLgkCK5iKopuzt9vVgFisRjXoguWZZHNZnE4HCsuXIECq01hBChwU1NYAxS4qSkoQIGb
      moICFLipKShAgZuaggIUuKkpKECBm5obTgGEEJw9e5bJyUl6enoQQtDb27vWYhXYoNyQCuD3
      ++nr7eX44ZeZGB3mtddeW2uxCmxQbjhnOMuy+OUvnkUJ9XPsxEmi01OkbT6i0Sg+n2+txSuw
      wchrJ9gysnR3deLwFBENT+N0O4nF0mzf0QrW/J3gbDbL4cOHKSsrI5FIUF9fz+TkJDt37ly0
      HdPQOfny00wM9HDrY5/B4fLw2pP/wId//z9d/zctUADmufvkNQLIioLL7cVXFEBYBropqA+6
      iesCJyamaWIYl/3VZVnG7/dTV1dHX18fwWCQiYmJOddczUj3eU6+8FM27b+Thz739VkPRUmW
      Scai2Jyua/m+BQrMYWxsjNdee42DBw8SiUTyUwAjk2Y6GgUJorEk5cEiRsIJtpZLWJaCoiio
      6uWqYrEYExMT+Hw++vv70TSN4eFhtm/fjqIoc+rOJOMc/cWP6B8eZee9j6FLMm+9/TYHDx7k
      +eefx+4r59//5Zts3nULuq6zY8cOqqsX93QsUGAhZFnmtttuo6mpiba2trVzhhNC0HXiHdrf
      eYXd93+UYMNW+vv7OXHiBJqm8eCDD3Lo0CFcNpVjLz/Db339zxkZGWFwcJDPfe5z8xSpQIF8
      GBwcpKuri/LyckKh0MotgoUQtLW10djYyMTEBG63m9LSUk6ePMnOnTs5deoUiqIQDAZBT9P2
      +rN4i0p55It/gs3hpKOjg+npaT796U/Phu3t2bOH6upqBk8fYcvmzTQ0NDAwMIAs33DGqwLr
      hJqaGmpqamZfr6gVKBAIEI/H6erqoqqqClmWuXjxIk6nk5GREZwOO68+/WPUTJQnfv+PKa25
      HNSxqVSFIj9isgPvpfq2V2hgjnPn3hbG296iqqaKraUSIjGB5ClbSdELbGB0XefIkSPcfffd
      PPvsszz66KN0dXXR19e3sgrQ2dkJQDKZZHx8HIB0Os3ExAQdp49T7TCprqrEX30nwdqmOWVT
      T38dMd2Xs96SrIfuc8UE/P0A2G75Iva7/2QlRS+wgdE0jeLiYtrb2+nu7iaRSFBcXExbW9vK
      KYAkSdx7773z3m+sq+X0a8+yq8rPwY8+ga+0fNl1l2pxzsSqEeKmDl8tcI1ks1m6u7vZtWsX
      9957L8lkkqmpKfx+/wquAUyD9C//87z3u4ZiuBOjbNvUjPzuX5G69L6257dQq/flVbckgVdJ
      EzGcBLTU0gUKFLgCm83G448/Pue9YDBIS0vLCk6BhIVx4Zfz3q6/9Nfq7MK64n216T7IUwEA
      Ku0RhtOBggIUWDZGz2HSL/7XnJ/dcK4QC1Fhj9KVDFLIZFpguQgjg0hM5Pxs3dgTVdlCkSxS
      lrbWohTYQKwbBYCZadBI2r/WYhTYQKwrBahyhBnL+ijMggqsFOtKAZyKQcZSMUTBDaLAypCX
      AghhMdDXQyKVpr+vn0wmSf/Q6Jo8ictsMcYz3qUvLFAgD/KyAgnLwu2yM9TbjaeohLPnu6ku
      mnGHtosZd2jTXN5gYlnWXPfoPLWp2hGmb9qgbhHX6gIFrsSyzAU/y0sBLD3F+c4B6mvKGR0e
      xeNxMhqKsa1GQhEz7tDL9c6UZXmOCzV57vAGtBTHOk8gAYq6bqy4BdYQIS/cN/PqQarDyx23
      3wpAde3cz8yFlWvVKMr2MTXcR1ld8wffeIENxbpaBL9PbV0VA+2n1lqMAhuAdakA5Y2bGe3u
      wLKspS8uUGAR1qUCqKqGw+MlGQmttSgF1jnrUgEAGnbeQt+5E2stRoF1zrpVgIrGrQx2nLmm
      U20KFBACRtK+9asAbn8RIMgk42stSoF1SNy0M5AuXr8KAFC9ZQfDne1rLUaBdUjUcOJTU+tc
      ATbvoO/c8bUWo8A6JKw7CWjJ9a0AgfIq0vEoRjaz1qIUWEcIAWHdhV9Nr28FkCSJYG0T4/3d
      ay1KgXVGVqg4FX19KwBA9Zbt9LcVzKEF8kcXCvKlCPX8FEAI0uk0QlhEo1Es0yCeSK6mjHkT
      rNvE9Ogg1lo4JRVYl0QNBz41DeTtDm3S0zdAbdBDR/coTpcTTRLUbWlBEwIhBEIszy1BCDHX
      lWEZ5nwhmC0rKwqeohLC48MEygtJcwvM5+q9oqjhpEibeYDnNwJIMpoikc7oKIqEbphoqowQ
      XOr84gPO1jC3sarNO+g9e+yDFKDAumJufwnrMyZQyHcEEBYetwu710+t6qSoKEAsnsKlSpim
      jCzLy05YK0nS3DLLyPh2ddmaLdvpOnEESZJmc40WKPA+knS5rwgBseVOgWRFpaKyCgCvZyYN
      elHgxklPYnd5UFSVRCSEJ1Cy1uIUuIERSFhIqPJyFsHrgMqmFoY6zq61GAVucDKWikO+4jSj
      NZRlRalt3c1Id8EtosDiTOsuAtplC+aGUQBvcZBkNEI2dWOYZwvcmMzsAF/OL7thFACgvGEz
      r/ziZ0QiEd577z0GBgY4evToWotV4AYiZtpnLUCwwRSgfsc+jPA4oVCIrq4ustksTqdzrcUq
      cIMgBCQMOy4lO/vehlKA4spaOi5coL+/j8rKSqampmhra5s9rabAzY0pZBTJQr7CUr6hEuvI
      ssJttx5kS1M9wdpGAA4ePLjGUhW4UYiZdryX7P/vsyEUIJvNEovFsNlslDa2MnD+FCmhUFJS
      wsDAAOXl5WQyGXw+Hy5X4cDtm5X3XaCvZEMoQCKRYGBggJKSEgzVyeCFc6TdZfT391NUVMRL
      L72EzWYjGAxy++23F3aLb1KihpNqx/Sc9zbEGsA0TXp7e0mlUoyOTyAUjeH+HgzDoK2tjfvv
      v5/a2louXLhAOBxea3ELrAFCzPUCfZ8NMQJ4PB7uueceNE2jvLycEa9GIhZl5x13EI/Hcbvd
      7Nq1i61btxamQDcpAglDyNjkuW7z+TnDmTqdvQM01JTT2TNIsNjP6GSUba1bVkXY5aKOHcMT
      Hpx9XWkkONLWBaUJPJfeswANMH2VqI33rIWYBdaQjKVil+dnFM+pANl0imTGwO/zzHhYKhpu
      p5P49ATprMloKEZtsYOYLnDywaZHB7CEmFM2e/pHmJ0vzb6WBFjTm4i+9Az2qzRerr8Tau9Y
      lqwF1jeWZRIxnHN2gN9nngJMjQ7SOzKJy6bSa6ns2tkCRpapiTHKq6pxail8PhdD4RQt5RLC
      +mDTowPIkjSnrH7VolaSoNweZTTjp94ZuuqzuWULbHyErFya/+ehACUVNYwODtLdPYbiq2QP
      gGpj5+49AJQFgwBUzXhHc6MGItY7QrwdbqLKHkaTC0l0b3bCuosKT3Te+znnLTUN9XgCQXZs
      aVhtuVYNu2JQ7wzRkahYa1EK3AAkTRtuZX76nJwKMDo4iKKoFJeu7+CSBuck07qLiO5Ya1EK
      rCGGkJERKNL8hWYOBTDJZrMMDgxhmOt76iBLsMM7xJlYdeGE+ZuYhGnHqeg5P8ttupEdbGqo
      XvcKAFCkpfCoGQbSRWstSoE1IpqW5wTBXEkOBRBMjI8Syxq47BvDWrLNM0JnooysVThf+GZk
      anRwOQqgUlHupf34WaKp3MPGesMmm2x2j9MWr1xrUQqsAdGxgZwLYFhgCuQtrubeX7uHgMu2
      qoJ9kNQ4pokbdsJ6wRXiZsIyDVITvTjlZawBbIpgYjKMYW2claMkwS7fECdH7YjC4Xo3DelE
      HDU5ykIOwDkVQNXslFdW4FQ3hLPoLD41TSB8nM7jb6+1KAU+IGKhCfxFCxtAcvZw0zQY7e/h
      +JmOVRNsrdixtZr2d14lU8gecVMwOdhDSVXdgp/nVIBYJIrmcNPaumnVBFsrVJuNPQ8+xtFf
      /HCtRSnwARAeHyFQXrXg5/MUIJ0IMzA6Mec9YRr0Dcy4G48M9hOLRrjQ1bccB84bitqW3WQS
      cSYGCgdrbGSEEMSmJ/EWBxe8Zp6h3+EOUFdZRvfIFLohZpzoZQVVlsmmYkyOTxIxJMpdEtHs
      jeEOvZyjUoUQmKbJvg99giM//TYPf+FPkJaZ2LfA+sDIZrAMA1ldOI9t7p0uodPX00NJVQN7
      WxsRps7YyBCmUU5Wz2AzdAZiabZVSEg3oDv0YrzvDh0IVlC1aTsXj77Btjsfyr/xAuuGZCSE
      O1CMLC/cN3MqQCqdwswIampm5k6yamPfLQcAqKufu6C4Ud2hl0KSJHbe8yGe+6e/pHHXAZxe
      /1qLVGCFmRrqo6Ry4QUwLLAILq/ZzK8/8XGK3RtnIywXiqax96GP8avnf1I4cX4DMj06uOgC
      GBZQgHR0glNn2sncBOduVW/ZganrjPVcWGtRCqwwkYnRa1OASCRGJjbF62/dHMcOHfjIpzn2
      /FOYxsbwfSowEwecjEVweQOLXpdTASqrK4mmLXa2NK2KcDcabn8R9dv30f72K2stSoEVIptK
      YnM4kZcwzuRUgOHBYUp8Lmxu76oIdyPSescD9LefJBaaWPriAjc8kckx/KVLh8PmjAdwun24
      PV7sG8wXaDEUVWPfwx/n2PNPFRbEG4Dw2NCS839YICRyoK+fcDKDU9sYATH5UtG0FUXVGL54
      bq1FKXCdhIYHKK6qXfK6nAExpaUBNCtLOJWd//EGZ/+HPsHJV57GyOYOoChw4yOEIBaawFNU
      uuS1Oec4wWAxg6OhDRMSuRxcXj/Ne26j/UhhQbxeMQ0d09BxuDxLXpvTGe7Nd06waXPznJM0
      biY27buDoYvnsKyNvw+yEUlGw3nv7M9TAIc7wG237kdYBoibSwPed5STVQ2b0014YgzzJtgM
      3GiEx4bwB/OL/845BUolEqTjYTq6+oGZjhEKhRCWQV9vH5lMmqGR8XXrDr0QY2NjHDt2jO7u
      bmKmwouHfszhw4fXWqwCy2R6dIjSmoa8rs05yS+tqKZ6y06ctksfWybTkRg+jwubJnOhs5cS
      j42EHsQm1p879Jx2r6C0tJTx8XGqq6uJtu7mved+zIc+/bkFry9wYxIaHaRux/7Z322xqWxO
      BbD0FN/512/xxOc+R8CpzYwA4yPYFZPB0QhlJV4mpuOU1IIirt0dek6ZZbpDX1l2OUceSVeV
      vZKBgQEikQg9PT0YQiKrG/R2XWTX3v35C1dgzUnHo3iLSmd/Z7Ecd+ipsSFiho0vfOGz9Pb1
      49vSjKSo7D9wAJCorBbIsowQAlmWuJ4p8vWc1bUaZevq6qiru+w+60hN4Zb0wpli64hMMo6i
      2VC1hYNgrmTevKW4rBIpG+VM2wWq6+qQmekwsqzMPrVnXm+sXeK+vj4ymQznzp0jk8kghCCl
      enju50/R0dFR2B1eJ4QnRgkE888IPq8XZ2Ihznf2Mzkxyc1kB52cnMRmszE8PMyhQ4cYGBig
      pqEJy7I4deI4R48eXWsRC+TB1FAfpZfOiM6HeQoQn57GkmXMVJJ4+uZwD7Ysi02bNhGNRjlw
      4AAtLS34fD6qqqq49c67qSv10diY/00tsHaEhvsJlC3tA/Q+8xTAU1yC26biDhTjceQ3j1rP
      WMkpRKgLjz6ORx/Ha0ywrdKB15jAmupkU10JmdEuiqUwZqhnrcUtsATJaBh3IP9zLeZnhfAW
      s3PHdnzFJSg3weJPP/1Dskf+bsHPVSERntpCdOyf0XxBPP/h5Q9Quo3LuXPncDqdHH/3bUqC
      ZWQMi4cffnjZ1sQr0TNpTEPH5nDmXSbnSjYZHuf1w++Q1Av2b1kSlNgSTBuFpLorSU11Fe1v
      v8zQmXc5d/h5aqqrr7vOZCyCy1+0LKtd7p3gdIzI2DSJdEEBAKod0wynFw+tK5AfQgjGei/y
      g2/8BYbq4OHPfpmtO3bx5i9+wuDg4NIVLML0yADFlUu7QF/JvCmQnk4wHUkxOjV+eSf4Jsev
      pjijVyOIrLUo65pMMs6pV58lNjXOZ/7oz/CVlAGwZcsWzG//DQGXPe+6EokEhmGgqiq6rhMI
      BAiNDhKsXV4Y77webhpZspbKzh1b2WCm/mtGky3cSpaY4eDmCRJdOYRl0d9+irNv/BJ/QwvO
      TfvwFgc5evQoTqeTRCJB48EH+Ldv/L984ktfp7Zu8Vw+AEeOHCEejyNJErt27SIQCBAZH2HL
      gbuXJdu8Lq7anJQVe7GEjCik0Z+lwh5hOF1InrVc4uEQr//gnxjsOM0Dv/MVDGcRqVQaXdfR
      dZ0LFy5QWVmJu7gMNAdP/+A7jI2NLVnv1q1byWZnArba2toQlkUqHsXp8S1LvnkjgGpzYBlx
      2k5dYNvePbhvwqCYXJTZYryX8SGEKLhG5IFlmlw89iYXf/UW+x/5DSqatiJJEs3NzXR0dBAO
      hwkEArhcrlkl+Nhnv8gz3/pbYqFJysvLF63f7Xbz8MMPI0kSlmWRSSXQ7A6URfKA5iJn7y4p
      raFhUxKn7ZJJSgj0S/OtTCaL3aaR1Q3s9o2dOe5KHIqBmgqTioVx+QonTi6EEILw+DDvHPoe
      5Q2beeRLf4pmuzy3r62tpbZ2ZqFaVlY2r/xnvvRVTr7yNM1bWxdNWlxcXDzn9XhfJ77SxZUm
      FzkVwDRNfIFi1EuuEMIyudDZTX25n57hELIsgWnSvG07qhAIIRDLjA4QiLn+NcsoLuCay3Id
      ZcukMYYunGPT/juX1+BNgqnrnHnjOcZ6L3Lro5+hqKIGuHy/M2/8FWb/u4vW4QLcwwbtTyu0
      Pv6VOZ+Nj49z6tQp7r//fs6ePYuu6yiKQn9/PwMdZ2iqr50JaJqnOAv/yDkVYGp8iJPvtrNp
      +3bKvArICl6XE1038Hq9TEcilHgcmAKU9xVgmeduCSGwrvGsrqvLLkf5hOCay5Y7k5zvOEPT
      3tvzLrORMU2TF154AbfbTe/5M6jRUQ7c+zAPfe6PkWR53u9rRYawJpc+dajVIfPG6WNU3zWJ
      J3D5ST84OEg6nZ7jt7V//358Ph9D535FKJHl7Nmz7NixY059izky5lQAb3EV9z0SnD0lUlgG
      YCI5i3GSpLZ6C1PhOG5VwjRlZFleNAV1LmRpreIBmFPWWEZZr9dFNpXEMnQ0uyPvchsVy7LQ
      9Sznj7xLJqtz4IEP03LbvQten+/vpEoWu0umOfrs93nwd746W2779u1Eo1FkWcbpdBIMBmfX
      FZVFHlpvux2vv2jebrIlLTyVmr8PkEkjSxYTE2EamwUoICsadfWXnMF8M5H2ZaXFVxfd8EiS
      TEl1HaM9HdS27F5rcdYcWZYZO3+Cmro63FXN3HLrbStWd1llJWNakM7jb7N5/50IYWG3qdx3
      7yUzZ7CExoYZc6ll6jhVidbWVpAkhGUi5flAnqcAkz0XOT0cIuB0LntefzNQv30fF3/15oZR
      gFgsxhtvvEEwGGR6epoHHngALY9gEmFZHH/+J+zbuYODjz6x8oJJEvt+7df55T/9FVWbWlHb
      vk/2nf+V89K4YccWryT+N/97pqi3As+XXlqiAQ3Ntm++Avgqari3uRXXTZYVLl9Kquo5NvUU
      pmmgKOv/HpmmSSqVIpPJYBgG6XR6SQXo6enh3eeeoqGmEqm8me7ubnp7e6mtrSWdTlNWVrak
      GTMfNJudAx/+FO8+/SR3Ni88fYoaDjwLnAS/cN07AHP+RpiZifOTJ3/A628WnOFyoagqvpJy
      QsMDay3KiuBwOAgEApSUlOBwOLDZFjdtCyF45vvfJpGIs++RT+Byuejv7yeVSvHee+/R39/P
      e++9h66vTCxJeeMWnN4APWcXTtUfMZwUacs79lZVt6Lr5+YrgK+shvvu2IdhGMjLWZneRNS2
      7GTowpm1FmNFcDgcPPTQQ2zbto0HH3wQu31hfxwhBKdefYaAy0bd7tuJJxKMjo5SVFSE3W7n
      /vvvp7W1FcMwyGRWJrWkJEnc8uFP0jHtI23mHnEjuhO/lsq7TlkuRqCDSOWwAkkS2UwGK5sm
      pZs4tGv3z96oVDS10Pb2+o4LOH78OH6/n4aGBg4fPkxjYyNdXV1UVlbidDrxeDyUll7OrSmE
      4PSrz5BJxPns1/7zrK394Ycfnld3U9PKniuh2ezsO7iXk690cmugh6uNSWlLwy7nP1tRtR3o
      2ZMz/891Qe3mVmo3zwz3BeZjczhRNRvRqfFZj8b1hBCC0dFRfD4f2WyW8fFxgsEgRUVFTExM
      MD09TSAQ4O67757NAHLm9edIJ+Lscpwn/fTX82pH2/ww2raPrYjMZfY4XbLJcCZAtSM8+37W
      UlAkC4V895RkVLWZbOZNIKcCGDzzgx/hDJZz+733EnDePO4Oy6G2dTdDHWfw3fHgWotyTQSD
      QcbHx7HZbDidTvr6+jAMg3vvvZf+/n46OzuxLAtJkjh7+HkS4RC3PvabJL/zGCLcn1cbSknz
      isq80zvE4dBmSm0x7PJMPp6EacelZOeNCgvKpNRhGH1wSWFyKIDKrr07GI1msa3rAzJUZr7k
      6ri01rbs5u2ffofWdagAkiRx4MCB2dd1V7kf79y5k507dyKE4Ozh54mHJjn42GeWPG5otbHJ
      Jq2eEU5Fazng70WSIKI7CCxjAazZdpHNvIsQgJByT4Fsdg1Yr2cDaGi2XWjabkxzgEz6xVVp
      xen1o2czpJPxvNJw3ygIUyf9yz/P69qOsI+kvYpbf/3zN4zJt9IeYTBdxEjGT5UjQthwUeuY
      zq+w5ECS3FjWGFZGIz1cllsBPL4AqQt9JDLm9e8HSE4QOrB8k6plKEiyySI72Vcw0/FVbQeG
      3kEy+T2czseR5CKElecNWgaSJFHZ1MJ470Xqtu1d8fpXDWFiXPjl4pcIuJAoI2K4uOszX7lh
      Oj/MuLLs9g3yVqiZElucuOHAo6bzKqtp2zCMiwDoIT+aP547JtjIpohkTDwrEBKpqo043U9g
      dzyELAfzKiMEZKd9xNsbSfbWsGhSNt1ANZtwun8TsJNK/AA9+w6INJnM29jtd133d1iI+h37
      6T17fNXqz5fx8XGefPJJTp8+zaFDh64rme+VnX+/vw9ZuvGiouyywVbPGGeiNehCRpPyyc8p
      oapbMPRzCAF6xIsWiOYeAcZHx/G5bMQy+uWYACARHqejZwSf100ikWbbrh25NegKdM5jJDtQ
      lHps9tuRJA+G3o5k5VYuYUmkBssRuoqnpYfMeAnpgQqcdaNzLzQM6OqDzl5EdJJ04llg7pPA
      MgeBA8hyOZa1dJTRcvGVlBGZGFnzXeFgMMiWLVsoLy/H4XBcc2oRIaAzGSRsuLjF34ci3biu
      MFX2MIOpIjTJyiuBoSyXIEQWIVJYGRuyzUBSxHwFSEemKG3cSoZuXFeNAMISIATxjEFNqZeU
      LnCweHp0K+gGIRAj3ZhGN5LkQtVakc9NYU68jWiqh4ogCDAzGqneatRAFHvtKJIEjqpxkr3V
      ZMaKsZWFkCQVxnTE869DTSXm/bdjvPw0TOYeBrOZt7A57iad/MnMd7gqPfqyXLJzpFYvrWlk
      rPciZfWb869nhTFNk/r6eqamppiYmKChoWHh3K0LZDMWArqSQSazHg4Gemc7/3WlsbdWLo29
      dVV8riTBXn8/CTOHlVJw1W9somrb0fUZ2392yo9WPGNKnacAlpnlzOkO0HWsq+S1u714vTHK
      y0qZmI7TZJOwzMXTo8sjMczWUohmIKEjRBI9ewxl56fQylqhqw9x9jzWWAXJbifOmgFUb2LO
      F3XVD5PorEd1luKpPIDkrUe6726w21ABfREbmGWNg9BRlFpMcwBJklCv2N8wlxP5f1VZgIYd
      +xi8cJaq5tb861lhVFXFbrdTWlrK1q1bF71W5FiLWULiYqKMkO7mYKBnzpNfluW533k5buvy
      3Pu12O90NfN+pxwLQZtsYpNz7ABLzJVZsYFaTzbz5sz0J+zDUTmJcKrzFcBVXMmD95WDJCFf
      JbBmd7F58yYAfP788uRIApSuaczNxShtk0hXalVJEcLvJfqzQ6QGw5Ts3IJs24mhd2DoHUAG
      kNFsmyjZsY+p022gPIez9eMoywjHzGTexOF4iFRy5f13grXN/Oq5H69JrPCFCxfweDzYbDZO
      nz5NQ0MDvb29uN1uSktLKS0txe9fOJDfEjCS8XMxUU6ZLTav828UZFGGbgwAJmbSgeLIIIrt
      iCJH7im8LMvzOv/1IGVM5LEEVr1/zghqTk8z+TffAEXGszdJ1niaTOo5JMmJ00K+Ns4AACAA
      SURBVPUJHM5HcbqeQFbKyeg/x9XYTrIvgJnOP38MgLBCWFYYRV3ZLXoA1WbDV1pObGqcbDbL
      e++9x9DQEMePH1/VlOrvZ1QIhUJkMhnC4TDpdJpoNEo2m+XMmTO0t7fnLGsJGEr7ORzazLTu
      5rZAN9u8Ixuy8yME0mAIQ585+1kP+dGKI1hVHuShWO5F8GogTSSx/A5EsROmUmTOXyTxg2P4
      P/VJHNu3E//WP12SN46efRc9+x6yXIYQMYSY2eiQ7eBsGCb6Shf2gxGURZ5uV5PNHMHhepws
      Kz8K1Lbupr/tBGHZg2manD9/nuoVSPW3GJZlUVxcTDqdRlVV3G73bKTUtm3bGBsbY3Jycl6Z
      oYvtnJ7eRJGa5NZADw5lg3v8pjNY/SexrPGZ6U/Ug31rGCurImXND1ABAKU3jLG1FKPdB5kE
      pf/xj1ECC02lRE7LjepKI5cmmfrmP1L6x19DduQXmihEDNMYRtNarv1LLEBlUwuv/+CfqL/z
      o5w6dYqWlhbOnTu35Hz8erDb7dxxxx2zrx955BEAWlpmvl9JyeUMycKyGO5qn0lMVRLkgL8P
      p3JzpL6nbxCrWIUQmAknqiuFVe1GGYoBCzjDrRYiLZF52oVUAyUf27tI518cx7YtqBwk9C//
      SskffDnvcnr2PVypu8GyWMm0dw6PD0mWaaqvmwnLA/bs2bNi9V+NOdVF+sX/uvSFAsayXjqS
      1QSqGrnrk1/E5XYS/8ZfrppsNxRCQN8gNNZBJ2RDftSaBKgaUnLmAfCBKIAQM9qX7K/CWTWG
      3CRhuKZQr2Ph6L77LozJSSI//BF2T35zVyES6BMvY+86AJtX9sCL6s07GDh/iuYFMkas6AJZ
      T2KNnFrwYyFgPOvlfLwCjzrNnV/4Cr76nTOfGfntmm4IwlGw28FuICwwEy5sWzPIl57+8AEo
      gBCQHS8mO+3H09yPbNcRQ5Dp/gla8W2oni3XXLfv4x9j+t++RaLtIvY8Y/TNUhM6OqGpDlbA
      uUsIwU9/+lNamurpOnGYF945yZ49e7DZbHR2dlJRUcFtt92GI8+p2vXJMtPx2+OVeJQM+/19
      eNQsLvdNmsGis2fmQZc8i5lwoQSy4FCQo5eDdVbd3TMzUoqZseHZ0otsnxl2JAHOwOMk+/8R
      y4hfc92SJFH0u7+Dpe0kG8ozJ6SmQlM9tF+85navZHJykvHxcTKWREdXD4auo6oqXV1dbNu2
      jXA4zBtvvLEibS1GwrBxeHoTfakSbvH3znb+mxbDhIkpKJ9xv8lMFqFsN5FHE3MuW/URwF45
      Y4m4egYg28uxl20hNfAvuBryC7DIhaSqeHbrhJ8pRdYMVG8errFbmuG5V2b+XifBYJDPf/7z
      pFIpkgcOUlTVQGl9Az6fj5qaGhoaGgiHw0tXdB0Mpf10xCvY4xugSEvm7Ru/oRkZm+n8qgKW
      hJl1YauKIJ2du3G26gqw2I9hK74LI3aKbOjw9bWhWLg39RO/WI+7aQDFucSTT1Vga/N1jwIi
      HcUK96MBGtBY5ae3+xRba/2UBIB4LwBuG5ijZ5HLWvPOV5MPppBoi1WRtDTuLO6cDRIpAHT3
      w84Zi5gesSM3gTIWn7eRvaZ+rpIk4az5AvGL/w3JuvapEIBsM3A3DZLsqcG9uQ9ZW6IzbGqA
      X7wC3mufJhiDR0k//cezr90CJkJbSQ7nzl/j+cO3wLEyKdaTpsbxSD3l9ijbvUM304m2S5M2
      IJ2Bopl7nTpxDq0hhTQ8f3aw5iFfsurGVft7GHVOxHX+iIozg6NmjERXHcJcojJZhh0tSBdH
      F79uGcgSeJU0YT3/Q9quhdHxMO+Gm2jxjLDJNV7o/FehSvXQUAOShJVOk+k/hioi5NroXpYC
      WKZOd1cXsWiEzp6BFcsbp3paUMwAVs3yDjfIheZLYA+GSHTXLn3AR301WtndSNLKnftSaY8w
      tIrniZ165RnOvfEctwe6KLUlCvP9eUho7n1QP5OZOtPWhlw8ijyWe4axrClQdHKY6UQWgxAl
      DplYdml36IW42s1WHoljlmtYXhtybPFpiSUWd7PViiNYukqisx5H5QSK5/LC8Go3W1EBtqE7
      yaQXj5K6VHhJV+oKR4QLU+VYSNQ5QvjU9GzbpmnOxDFcA5ZpcOrlQyianXs+9gn0Hx9aRlkT
      8X67C7hDL1j2BnWHXghZDiJUMFQFDIPEu+9gry9BGujOef2yFMDh9mEjgmnIDE4ZbKuSkK3F
      3aEXFvQqN1sESncYc0sxUvskkrnwzZKlxd1sJQns5VNogRjp4SBiJIijahzFnZrnZpux+lBk
      f36hk1eVFTl2k1VJcE/JBcYzPtrilZhCpsoRocYxjUdRkK4h1Uw8PMVbP/kWtS27ab3jQayx
      syzHkUFWlNkUN7ncoRctewO7Q+dCs+1EN87iVFWsZBJ9tAPvPb9GduBozuuXpwCeInbumns6
      ykraHaSsiTwcw2wsQukMXVdeOkkCxZHF1TiElbaTHilFmAqe0vlu1JnMYez2u0innr6OFi+j
      SoIqR4QqR4SkqTGYLuKdcBPen32fzQfupay+Oa+jfIQQDF04y6lXn+HAR54gWNtYOJ5pUVRk
      pYKs8ToAqRMncWzbjmxbOBR3zRfBVyOF0kimhQiuzMHUkjSzOHY1DuGsHiN5epTJv/07sr29
      s9dY5jBIGrJcsSJtXolL0dniHueuoou03nIbfeeO8/y//DUnXz5EdHJszrQgkUiQyWQYGhrC
      NHROvfI0F3/1Jg/89lcoq2sqdP4lUNUmTGMQMBDCIvnu23ju+sjiZT4Y0fJHAuS+COa2UqRY
      FmmFDuuWJFBcGbzbilH3PUr054dAlnFUT864a6TfnBM6udLIEpTWNBDctBs9m2Gg/RS/ev4n
      mHqWpj23UblpOz/68U/YsmUL2VSS9peforSmgXs/8/trno9nvaBqrWQyb4JNw5jqw4rHUKuq
      MTrPL1zmA5QvbyRLoPSEMZsCKO2TOc1X14Otvp6Sr30VvbeX8Hf/GWu0FkflODa7gazUXAqm
      Xz00m52m3Qdp2n2QWGiCntNH+f7//O90DE3hFhnefvk5vv7n/43G7avnUbrRkCQvkuREWFNI
      ooL4kZ/j3HtgyVHzhlQAACmhI02lZtYD3dMrnqdakiRsjY34H6oh+cKLpAYryIx142vYiyUN
      seyT964Rb3GQXfd9hB33PMJITyeDF85yy//5P2hsXtm0ghsdVduCrrcBYIko6RMnCf7Rby9d
      brUFux5mwihVrGrvbADDaqB6k3i8fegxF+GLOpJSh6N6GMXxwQWNyLJCdfNWqptXL4hm4yKh
      ai2kkk8BYHgcKPZNqFdkt16IG1oBZtcDW4qxSl1Ik8lVPbFA8yax+YZQ9MeYvnAU95ZuZHX1
      /Gssy+LIkSO4XC4aGxt57bXXCAaDhEIh3G43Ho+HxsZGgsH8EordrMhyEMsKg0ghNBk97se1
      79b8yq6ybMtCiBkHr4zQGDGKacvWk7ZsKJ3TWGUuhH95wfDXJkMMxTOKp66EVF/l4lnprhNJ
      kvD7/ViWRSQSYc+ePYyNjZHNZvH7/YyOjnL0aG77dYHLaLbdGO9Pf8o9mEM+nPv351X2gw2J
      FCCQMJAJR3VCnaOMhxOMhRKMjN7FVOpuBKBiUqzECMhxfpi4n897nqP+wgRmSwmSvrquxQCZ
      9Fu4yp8gGxZkJ+PYg6vT5vsdv7y8HI/Hw+nTp9m/fz89PT20tLRQVVVFf39+qchvXhRkpQwz
      /TJCkTCdXuS0C7U4vwipVVeATr2ak9lmpkw/U5YPExkNk5JzEpV1E5QVudm9qZw7eo5TZOtA
      vSoX5ZTDxz/EHuOg0c6DnacxNxUj7KstdoZ08ikCmz/F5EkZ1XsMxbGywSVCCGRZ4o47LodQ
      3nffzBm7dXW1ALhcTioqyhHCAqTCPkAOVHXTJdu/hRX0YFxQ0fyR/Muvnmgz2CSdVq2fUkeE
      Yjk6m8jUcfv/jda6c/a6uD2JSM739yhRovwf/if5fuIB/n78o3xBeQn5YAc2I4GsuldNbiHi
      pNM/IrDlUaYvhHBvvrCi6w8RGSTxbx/O+3rnp/4NtebA0hfeZMzY/l9HSCBKnJhvKDh3RvMu
      v+prgDp1nO22XsqV6Tyz+M5HkSx+y/0SB+3n+avBTzDSbyfR/T8Q1uqG/AkRx5B/gSvYQHpo
      /R2FtKGRHKjatku2/2lEqQsxLpAwkbVlnBe23HbjsSh2h51QOE55sGTpAiuEJMEt9g6qlQm+
      de4z3O+UuF37Ju6Gr65qu0JEUYrfRkxvxojmP7QWWFkkbChqM6ragKxUgjAwzUHSqacRElhl
      bszXJWwl4ZkzKfJkWQpgGRkunDuLu6waFzqJomJswsKyLCxr+W625pWuuXlaWyrVEP9pb5x/
      j9xD28sv8rsP/xj7stxsmdOuuDoDcK4yxHDUnSPZvR3PyBhSWemlssvLnW+aJtKltq/nflnm
      8tq1LGvWDVpcQ9lr+Z1myoq593o5JjVDwMAwjI4jJqeRQwJFqcTQL2Cm34Ar/GFFwIEUz6JP
      FuHeNAnCOafdxTKAL2sKFJueIp3NkkqniSbSKNKMKU+W5YXTcS+AdKnMtZR12FW+8uu3smv/
      b/OXP4/QHxrOv12JOe1KeYZTyVoGe1kX4b/9X8jh6LLKztZxHd9ZlpYv8+V2L/9GynLbvVrm
      ZTR9Zd+QZXnxRbzkQFEbsdnvw+n6TezpPTA1DbXV8NBdmE1Zspk3Mc0B5nR+wKr0IHp1ZNVE
      Vq0cci/c7rJGAH+wittKZjwmDcPEpkiYs6GHy/tRJK5KFrWcG8vMj3r/3kaaqz7NN590c29a
      4nb7ubwipK7VmmKrtKO7thD/1+/g/b3PLU/oS+2+37a03CW1dFnu5ct/ud1rCTu91vslSYuV
      tSNRRmZcRlEbcFdWYTGEafSQzbyNUn4brj1fviT95X+vRvhsoJvow2604ktT1Hntzi8btZyc
      1+uXvwh+X6tstqX92T8I6sr9/Nmm05y1beG7iYfJilU0bEkS/k99kmQ8jP6zX0Akf2vDTU82
      i2yWYLPfg8P+m4jIY8Tag1hmAj1zjvHj7xHtO4eRHWA5BzRaFV7koThGxIvmyy+xQlpo/EPs
      cbxS8sbaCb5WnGT4PcfTVDRk+f/in2bCXJnMC7mQ7XaKvvRFQh1nkM/HkeQPzhCwvrAhxYGT
      5+CF1+GVt5BiDpLDaSZPniaTfA335pM4KidxVE7ibekBIRE730h6tATyCLG1vDZAYE2qyPYs
      krr0+sYUEv8a+wh32s/SauvfGAoAoGQNHki9zcf3neUfUh/nRGbTqrVlq63F9fBDhHvP4XB+
      uKAEAGjIShU2++04XJ/E6fokih6EogDWbfuI2yWmjrdjZLtxb27HUTk5p8NKioWjchLP1h6w
      ZCKvxYm9+CJWJpOzNeFQsRoCKD1h9JAPrXjp0dgSEj9O3EedOs4djpnzAm5IZzgBjCg2XnH4
      0ZFoMVI062lKLJ3FQkPkhM6miQt8Zf80Tx7bT59RzmOut1fl4AfPA/czdfY08dEX8VY8Rip1
      CGGFVrydfBFOFbPOP3MgRMaEjIGUNpEyBsJKIIQxc77aHOwoSjmK2oislCHluLtyWxL6X599
      7RAPgivHsURIWNYkhtGHnj2NEAk07+dID/aR+O4bOHZux3e7DWtoMkfZK9pTLRxVE8gVTZip
      NBN/8f/gvvsu1CvSPApVxmwuQumahqyFEXPjqJpY/P4IeCm1n4zQ+JTz1dn3bygFEMCYrPGC
      swhdkngoFcYmLC5qTp5xFRGWVEotndZ0mO2xEYKecuSrgqXlcBq/LcSXdh/m0Okd/Hv8ET7r
      efGaN+EWQpJlfI/sZfKvX0VxPY/L9zFSqZ+viRJYXhtWnR+lNwy6hbAr4FARHg2r1Ely/Hsw
      JSFZMpLNj1lfjGZuRjXrITWNme4hm3oPxPwNJMfW/4685fI5BJn//ddYyVz+SVdYZizQp/0k
      nr6A856tlHz9qygeD6mnXyZfI6zktON7/DE8Dz5A/OVXmH6tDc1RhC044x0sD0SRkjpGwoni
      SiMpi9d8NNvCBaOWP/D+fE4epRtCAYQQjMk2XnAHSUsyD6bCNJiZ2bV7ZUbnnkwUAxhXNHpS
      EX508kkiqTAVvkqaktM0yipFloEMSOMJFE3m47vP8GrHJv4++jG+5H0Wl5x7OL1WJM3EUT1G
      vLsEecszOF0fI5X62aoczJ0LAYhiB1aFB+ViCCk7o+RS1oRYFrAhKz6cgQ8hpRWEnkBUukiE
      n8Gwn0G3tSNKVVBlUD1IcR1pIjETjPR+IwqgaVe0qcMCOSmEBXrYT2asGNUXx//oTpz3P35d
      31F2u/E9/hi2oiGiT18k1r8ZmxHBLmdBnsn5P2v9WYALiQCvpvbyNd9T83zN1lQBhBCMxUb5
      RdvPmTIzPJiJ0WykF1yYqECVqdNQVM+H7v4TdDPLcGSIs6NneMpVQlxSKLN0NuspNo2k8Pt0
      7tvdi79f5xsDv8Hve55m6RCJ5aH6EhhRD8kRC6qexel8XwlW12tVAFa5GxFwoHRMXUojoyEr
      ZahqPbJSjSTZsMwJKClCamxBcjoRRhrptfA8w6CQQHhsWJVesMlI02nkyTwSDfN+x/eRGS9B
      dSdxb+pH1syl01MuA0m1sN2eRYuPop+yE481YA+GMBNOnDULnwE9MB7huy+38wfep3M+ANdE
      AQQwFh/nhXf/gcnEBI9u/zi17YdgmYc3aIqN+uJGylQ798TH0IFhxc5FzcH33aXIBvxGR4j9
      lWncQfi705/g980wKxlsKEngqB4n3tFA1jcCPIfD+RiZ9Msz2SZWBYFV6wObMvPktwSquhXN
      fgDLHMecnYfPmAWVsj8E5+LuAZIAKZZFjoUQioRV4sLcVExafx0RDqJ5dyEpl88ZEAJEViM7
      FUCPelCcKdzNA8vyw8n72wqB6c/AmIQyGUatBstQyIyWoBVFkeTca7xQNMU/HjrG793qpOjo
      CmSGu14EMCmrvOAsYnrsHI/t/122V+xCkiTiknTdUbgaUG9mqDczPJSO0K3a+a6zlB3jSe5T
      z/G72+N8s/dxfq9/kpa6lRsLJFngahwi2V2D0tJDOvlzHM6PYBid6NljrGR8sbB0UvEXAJC7
      ppFQsNnvQZa9pOI/QZC67nSJkilQxhOI8QRa1VaMWDvpkR+helqxJBN9yk825AdLQiuJ4Nnc
      t+Qc/FoRQqBPv0V25GXk3ssjl6yaOGvGFyyXTOv87VPv8cQDO6gzT3P1o1UAFh9QRJgAJmSV
      77mDfNddxp5snD9tvp8dlbtX1ce9ycjwtdjMU/gbcikM9vP1muf4zqFnebd9aEXbUhxZbMEQ
      qf4KhIiSSv4QSfLicD4O0sqc0CKERbzzL5DTEvJAFFny4XR9AiHiRPrfJNpWRbyjkdRAOXrE
      g2XI1xXRJgGKrQJn9e9gt3+Z+M/biB1zoxeXYr8lhnv7APbS8Kp1fgAjfo70+HM47PfnnR3E
      MAXfPPQrHtjXyI6m+V68FvCyI8BLjsDqjwAhWeWXjgAjqo1fS4XZrs/svn1QoR0q8HA6zO5s
      gh+7SyhXi/nT336Ybx7qYGqsjQe0XCa9a8NWGiYR8ZKd9qIFYmQzr6Kom3C6Pk0m/eL1VS5M
      kr1/gz34CErGBerr2Ox3kUm8SqzHQpIcM5tJgBF3YsQ8pEdKAQnzucM49+nYmpuRctiRLSGh
      o6JhIF/qZUKA0FUSb54k88PjqBUV+O77PIbzz7BSw1gOJ2ZtCaQN5MkkUjhzTb9pVihkFCdX
      p7hWsZONDpDo+y7uhq8SDz1DVp2fxNhhplHF5UW7JSS+P7GLpm1F3LWrbt71CUnmu+4gFabO
      R1Kh1VeAHtXOTj3JbyYnP7BOn4syS+cPY6MctXv5xjvf4LH7PsFbR01GQ2P8RpETeTp13fJJ
      Ergbhoh31mOlHNgrJjCNTtLmOA7nR6FnDFp8i58akgOhSCSGv4m98Qk0/wE4+is0bQ+JqUMk
      uouxl02hlURmq9X8CTT/zFFAwpRRGypInz5N5Kc/Q5IEIlROJqDTpQVp1+vp0SuwSzomMvts
      F7hV70GbcCJ0FU9zOaWf+QyKxwNA/KiMpFsoYwnEWAJcGla5G6vGjzwcQwotfR+FgAGzjDfS
      uzlv1qMrNpJFZWwqDlGtTCBLICQ7nHwRzfdJ6BrFSgWwyh+dV1dKduIxYuyJ/IraZC/PpW5F
      dgd5/M652TUEM33xR65SHkuF2KbPPPiWpQB6OsHFrl6cbhexWJptO1qX/LL7s4klrpjP+yNd
      UnFjt9KoYmWsCRJwu6ecg/f/F5489m2UsiyZ9F7+Oebhc5tfwd47haRf33AuqRaerT1kxkqI
      tTfjahhCcc1MiTwTd8PkNNyWX8A2gNBkzK0luGo+jb30EXjpMKYWJjrwCpmJYlyNg4ueiCMp
      FvbWzYhb6unoGefU2R7OH/XiNqI0hSNsj0T5uP9FHN4YkXApx/TN/H3Rh3H7stzjP8bB7dWz
      nX9e3QBJHaUnjNBkrGofVrUXeSiKFJo76xZCELecHE7t563sLpLeYh72vcsnxb9js7K0J+p4
      a2on560iDtrbObA3QuXe/wvNuwOAzJF3yZ5+MqccI44qzvl28wPlUcI6/GnRq3OeMQJ41eHn
      nObiy7FRAlf0p2UpgKLZ8Pp86KagPugmoQucK5QeHQFxxUOfq5FedzMT9gqcZpKY6mNf+D12
      h4+hXErFu1R69MUQQuBUnHzx4B9wbvQMT018k9SYwt9e+BBf3vEqrqkw8uj8o3QuFV4yPTpc
      sgxVTKEVRUn1VSHbdJy1o5j7dyCPRpFeeB2zZelUJ8Khzmz6dIeRqh2I069hbttM+PlnMWJu
      PFt6F5x/py2NDqOW9mwD3d9vR3MNsq0+yB176/nU4Fdm7OEBsCpkjJgbI+bG75/k13y9PCLD
      qFHM6+ndPPPLGFu7jvHwLU1UlXoXXM9LuoXSG0bYFKxqL1a1D8OeQtZ1Tlwc5fVT/ZwevIVg
      WZKH5CMcjH0Pu3XJLCnBdlsf2219JLHzbtEB/vH0ATyhMPfvGWDv5opF06NXpocJR1WOJQN8
      tvoML/tuRTr2LjvLKmgq9vG9/ncISAp/GBuZ1+GXpQCZRJRoLEl5sIiRSIKt5RLWdaRHT5kG
      PaEQXaFJhks+htMToi7Rzf7pdynLjCIh0CUbR4tv51sNf8C+8LvsCh/HtkR69MW4Mu327pq9
      NA/u5anxJ3nBtPjLIw/y9daXKNrmQB6Jw1XBMpJTRiROz74W5gBWrlQtl9wRZEnHvbkPPeQn
      dr4R9dwFnAduRSopRn3jMKq2A0M/m1NOy2ub8XXpmEI1atHaw4jbbif07W9hb/Jjaxia+5QT
      cF6v41S2mR6jCgnBVm2APbZOfvtTX8NRtglJkhBGmvgVm0GyamErikHR3MRjFWqIJzyvYnvk
      Ec6pVfzotXamYinuiNZyC2O4F9hUlLImck+YMaWUV51ROg5/G9Prw1fl47PNbdwy8LPLHf/q
      2wbYG53ckz7JQ1tlwnf9Lq8c7+GHr7fTisXdRjFV6vyd9iGjlB8l7uM/+n+ML5FkhzSJ+Ogf
      8XTbEX54tp/SjJ2HhBuV+WWXpQBOXwnbt804fpVeQ66muOJh0FVPn6uJiREDd+oMTcUl3Fpb
      j+e9/wLh3nlPXpvIcsfU69wyfYRfFd3Od+q/zAElyIH/v70zi43zuu7479tn+WYfDjlDcdVi
      yVotS4pt2bUdKc6GIk3TNm6RIikcpE1aoECL5ql96VNf0gZoka5G0QJ1kDRRWjgOYltxojqx
      Lcux5U3WRlrcORySw9m//fZhSEoUqY1aWgf5vxAfhueu59zl3LMEAeotyPauIfi11hwfUl7l
      37NV/urUY/xx9od057RVFzN0Ca9+MdBq4E0i4msIgCwR6AoY7UVBDgThZoXKj/6a5ssHiX/2
      MPKHCihTPShKD7Z1lKXX1fbrbpigYKKcnseQDyIbHdg9ESr//E+kvvB5lFCN5jfbeciEgJPO
      Jp5tHaBfnWK3PsSnoz9Fx10WEF1Zv02/LEvs3ZLnns1d1JoOLzz5LH8z91tk5QUeCr3FNm10
      +eLcCnROOFt5ydpOWHboyvWzcXs/m2I2e+QXCQ8PIa7C/EEhBkK0F58BKGRjfO6xXTx+aAcn
      nyvyneOPUBdh7jdOcZ/xLmHZYcGP8mTtE3wp9jRxublYluDnYy8yXDrGnz74FazJs7xiVThq
      fJIttVPsqryO6bffBW77JXjKKPBW8l6KRhdhv8WG1gg7K6/Te8+DhLbuW56YuiSuqC2XACNw
      ODh3jH3lV3g99HmePPEKB3p62dVVuOk2SkDBd/gz/y2OJef4u9mP8onqG4SklWdrKZQk1P/g
      8rdfTOKcW52xPSw73K1dQF2yP5Il0BXMJ/4Sd7TB/Df+DannffSBOWQ5iQh6EFa5HQlblREh
      Fe20TUj/DJ53gcroC3jjHpkv/yFqPk9QfAch4C13kOda++lVZviD+H+TkG5fyiRJkohHDQ7H
      3uFRb5RJP8tPrD0caT7MNm2E+SBGyU+y1zjH4cJZzmZ2sSGf4KF9B4loGoGzl0blz/G1LPJE
      Dam6UmsksmGEqaGcXZ0XQlVkdiZrbIkfoSkMXrR28fXqb5CU65T8JL9jHqVLbZuftCSZ/5Rk
      YvMX+Oqhv0BXdNziu3xi+r/wJJXTsR08k/91QHBw7tideQjbXj3Jh60pVOEtd05FrGtVMgKb
      h2MeD+7dx8sjF/iXE69wrxNiMzLydZtarQ0F+LCYYE/s2xx3tjEiR5mVVcqyRkVWaMgK+v/8
      I1kzRzbaQcazMYkTvcy/d8zPcaTxEHdpY9xvvEu/Oo1keWjx3ej7EoR3HqL6ve/QPPIU4d5R
      tFgIPf4RXPU8nnUafTLTVnE2f0Jt2AfCZP7k02iFAkII3poKOFJ5nII6uB4zRgAAC79JREFU
      yxfNZ0jK9TuaK0yWYIM6y+fMo9hC5T2nj5jSwk/EOZF+AMOa4FOT3yLV9dsYejshiWLk0OYi
      MFa+eFkeryLVHETcIMhFUU7PXVWpIkkQlWw+FjnBY+ETjHqdAPSpbVOIcUXnW9Esj2gRHt7/
      xAr+kgBNeOysnmRH9SRlLU1Lidx+Acjbt8ccIKLpHNq0hft7+3mxdprXer7AvQvH2VI7hXyT
      L69pucnHQz9f/g4ADwkr3EHz03/PTK3IXKNEceo9JhsjWJKMKiAifDKBR8F3uM89TsXq5LnW
      fhYCk73GWR5teqRCIBs68Y89BENfozmax422EIWnMaKHMaS7EKpDY/5pGsNJ9I4qemYBSRWM
      l6o8+cwbdKkLPBF7hrRcuyWM70kK56N30VBXa3u0mkAZvbD8bUe2I1iZSMSXFI7FtiO8OT5S
      PELBWbgiY0m2jzxcBkPB745DdwwUGeXsHNJ1BChYgixBv9ZmfAEc101eMuJ8rl6iK5q56uIq
      AWl3Htw78A5wuxHRdX7Fepvdkz/jtdT9vJ48wL7yy2yqn7lpQViCDOgIDEmiu+MuNne0dcxu
      OIn17vcIABeJpqwwL6tMKjpHw3HmTI9U8Co7bZhr9PH1Iz8nHovxyJ4+7k57KBEbc/MFnFKa
      2pk8buEYRiqKNWthF9OE+yZRwhZTfoYfPDtCU7f40q/eS859n+Y3bz5aticpvBvfzcnkfgYa
      50g5c8u/2ZJMTVKo1yaYtRco1YrMNkpIeMRCJqnAI+O7ZAKPtN9k0+wPmMbhed2gEiogCYgW
      3yP1yj/QGcuTNTuIu01MScEUPqrtoywKAoFYt/rZQeJIJEMgSXylNoVxg3P+gReAJUT9Jg/P
      /oiaEuPV9EFeS91HoTW+akuV1V7Uc2eWv30rjp89vKo8I7CIuxWS7jymVyPsN1mdXWyxTMBA
      YAQeqcBjo2fx0KL59pyscUYLM5UeQc4fZcFN8I2jUTQryb7mIxwMvUN3bhYtWaU5lseaVJF1
      lejmC0yT4vu1w1RFlM8c7mfnnnuRJAn/JlMbe5LCqfguXk8eoLs5xP6pbzMlB7yh6NRlpb2j
      BYJY4JMVG9meO0DH4A46zBzqd7+IujB6VcYRtBcEsekQ9S2PUarPMFuf4R3fpRLNUpMVZAFh
      EZAIPCJysIoTZauKdvKpi22eO48fXh3v8301xH6nxn12bV12Pb8wArCEmF/jUOmH1BWTWaOD
      y40ulHgUI33RhdEt2rjN1Sk0bdmgoiUZj/TSUEyaahQUA/ON1zANg3Q4QqJqEw4VlgXk8gc7
      FegMXDoX/RmMR77KjNviveI7nBp/k9dOOTzfeIy+hsTDxtvsGThP1PUoqjGean2csh/jk5GX
      2aaNEu342E3bTbm+z9vFGZ7r+32m/BKZhedZCCzKqsImz+Fut0k88DFEsMwYoe69aFs+ulxG
      nWub9km0d0xd1cmmB+lPDwLQGnoBr15E0F65LUlmQVax1sgAKasGRtfF0Jnu/DCeu9ps5QG7
      RjZYfx6HXzgBWILp1zGbq01glaBAJHPREtRWbZw1BOByCMCPFVA//kVqtsV8q8lcWeNcYi91
      NYYlt82NQ4FFxKuzlm2rNjyCpOjABvoySXLZKqWczRApvlf7FN8tWeSdCcblPPclf8YhXiAl
      HLybuNs7SJQWxhmpWLw1PUO9NUp+9mkecOYZcC3iwr/jjuESizum8ElcIW+xohpELhEA+/0X
      cbyVAjBp7WDCvotM/AjSOt1eb7sABEJBwv/AZzRvaxF8TMMgZhgU4gnc2ims4veBtoB4koal
      hGgqEdYytA3n/whJb180Rb1I66WVsf9FXOB4CtPxXi5EB/iufg+VoI5sT2C89k26zv+YXCxH
      xneIaRGygYsZ+IQvWbFdJKYUjbNamHOayXR0C5GhSR4c6OJ39+wnEWyn+fbXbt9A3UHE1aWz
      4PrverdVAAKhcLz8e9xlPk9aH7mdVf2foy0gLprnEvPWvqCapokUaodsCYIqDXtqzf/rXZjg
      wMLLuJLKrJFjJDLIaOEjzCFTtj0sdxpVT3ISj5okY8kyqhAYQlCXZbJBgGT04cb28EhjmAdz
      GtGZZ/HfPc36bDb/f8JUZzHVqzvZXwvrEoDZ6QkmimXu3rXjqtunLPkMRF7CVK/suPBLXBma
      8Mhbk+StSR499ARB/h4ulOc5PzHEWLqOJgJ2WOP0NodJ2dMEwqNqFBgyt2IEFrvH/gPTr6OV
      MygbD6Hf+wXQQtT/dt8tbacvtHZUZun2+QXcLqxLAFpuwIaOGJYHkWscILtCp9ZTxS+xBnRF
      ZUs2x0avSPOFf6WpRJgI93De3Eox8ygPzP2EgjVBX2vlbqvt+ixKdjMA4gbdTq8FISROVn6T
      rH6evsirt7TsO4F1CUAunWCsVGGjBjcY5PiXuIWI+E0218+wud5W6wrunKPREiRJsDF6jJD8
      wQwTuSwAtVrthsyKc+kEtWqVIAhwHAff03Hv+fJ10/uRHuTqxUFztz4O1vUNotexHfsSWq/n
      EMK8vkhwUqIb7xJaP72T4HrbrUcILqEVRhfeDfS51nLBWaT3lBsar0BOIi3WLTBvqN4gMJZp
      Ef6NzVP4snna9jhYK+84kcW/l3sleNkdK+ep9xAitvm66l09T7tuYJ6iK+YpMLrwr0AriRsK
      2r4avu9jWRbR6PrSFQVBcMOhwj/otJdGib5TEEIs5iX74I3X7aS9pSrgRrX9+nkjkGWZ0vQ4
      F8baNkOe06BpXd+56tLOLcxMstB0GB5erdP3vBbN5srHkrUGZnxsFP/S9UD4VMtlaq2V5+a1
      aCdHR3CCgOHh96/Z5suZP/Ac6s31+ybXllY7z6JcWzuWz1Ksfmg714+Ojl21TMe2V7hD2I0q
      p8+ew/EvHZ8A21ntjXb5aWKp3vmZKc6cG8IPBCCw7SVan2p1bc9BWZIYGR2lXC5fQ9npUa2u
      7Lssy4xfGOL90Ykr0t5SNahVbzBbnmZkqkEhZSAZGhEjhdeq8PaZIbZt3QQCjHCEZCZLRG9X
      X280kHWTn/74ORIdndiOQjwWJhSWMdQ4dn2eN8+OsPvuATwfQtEY2Y4sunKRET3PZ2F6lGKp
      Cs6bzNkKUVnGCKtoIZWZiQqD27aSjq8dH0cIj9r8LIqqMzM7QyQUQQ9pCNsnlFGIha8e2UEI
      l9FzZyk7ErUTP0UKp8ik0sSzHcSukdVSeC4zU2O0EhlK81U810W2yzSVJAd2b7vmuNfrFRoN
      C5wy87aKVY+QyOSI6Gs7KTm1OWbm68j6FCoSnt1ivuHQkUqAcBk+P0oqFSHe2c+GXAoA33MJ
      AsHI2bcZm2/RnYwgqwpzNZeQqOEZCXSvRYCKGk2CPcqWHXejX+JTUW+55JMm586fQ9cVSsUK
      mXQUoag0F6rEkjFOnzpD36ZNpDMd5DvSgKA2P0O17jBfmkaoOtGQQa1a5dzINFsGCjSaFvFU
      nMpMhXgqyunTQwxu3kg6m0M2IoRshzdPHqflhUiGFWR8xuZa9OVit24HEL7N1HwFSSikEyap
      bCfJWIzZ4jjVhkW+qxPVMBkY6GOmOENYv8gU8WSWvu5OMrkCHZk0miKhGmE25LsoTo1SbTl0
      d3agm0kGB/uYmS6iKSubrhkRJATd3XlQDGIRg85CN4amIis6GzcPIl/Frc6qLBAYUZrlEk4g
      0I0wha4csqqjq9f2dguZKXxkenIJjGgCM55ktjSNeQUmvGTkGB+fIByKMD42hh6J0d3VQTSe
      prvz2rGLquUSlidRnp2m6UqkM2mKM7OEr1JvudYiHvKoLjQYmyzi+x6WZVOvzFFrOiRjBuF4
      eoU/kKSoIHxkLUJ/TwHbdgiZSZKxMLFkhnwuy4b+fnq7uzFUDWQZq9Wk0by4KmtywFhpnlgk
      hKZHSSUii4lS2vkmFEWmp2+QeCKxyPxt5HsHCZxG++goGzRqDVKpJIOD/SRTWXp6ekiYkcUy
      VPoG2mV0ZpJY9QoV1ycZS7Ehn0OWJVQjykDfBtIdXfwvRMcxpmkgK4wAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
