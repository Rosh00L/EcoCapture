<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1211.0901                               -->
<workbook original-version='18.1' source-build='2024.3.2 (20243.24.1211.0901)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
        <calculation class='tableau' formula='2020.' />
      </column>
    </datasource>
    <datasource caption='v_countrydate+ (ecocapture)' inline='true' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.040164612je0re1ch3d4c10oumvj'>
            <connection class='mysql' dbname='ecocapture' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photography_rating' table='[v_photography_rating]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
        </relation>
        <cols>
          <map key='[City]' value='[v_photography_rating].[City]' />
          <map key='[InputID (v_photography_rating)]' value='[v_photography_rating].[InputID]' />
          <map key='[InputID]' value='[v_photographyvsnonall].[InputID]' />
          <map key='[Photography]' value='[v_photographyvsnonall].[Photography]' />
          <map key='[Travel_Date]' value='[v_countrydate].[Travel_Date]' />
          <map key='[Travel_Month]' value='[v_countrydate].[Travel_Month]' />
          <map key='[Travel_Year (v_photography_rating)]' value='[v_photography_rating].[Travel_Year]' />
          <map key='[Travel_Year (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Travel_Year]' />
          <map key='[Travel_Year]' value='[v_countrydate].[Travel_Year]' />
          <map key='[Travel_month (v_photography_rating)]' value='[v_photography_rating].[Travel_month]' />
          <map key='[Travel_month]' value='[v_photographyvsnonall].[Travel_month]' />
          <map key='[Traveller_Country (v_photography_rating)]' value='[v_photography_rating].[Traveller_Country]' />
          <map key='[Traveller_Country]' value='[v_countrydate].[Traveller_Country]' />
          <map key='[Traveller_ID (v_photography_rating)]' value='[v_photography_rating].[Traveller_ID]' />
          <map key='[Traveller_ID (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Traveller_ID]' />
          <map key='[Traveller_ID]' value='[v_countrydate].[Traveller_ID]' />
          <map key='[activity]' value='[v_photography_rating].[activity]' />
          <map key='[inputID]' value='[v_countrydate].[inputID]' />
          <map key='[location_Type]' value='[v_photography_rating].[location_Type]' />
          <map key='[month (v_photography_rating)]' value='[v_photography_rating].[month]' />
          <map key='[month (v_photographyvsnonall)]' value='[v_photographyvsnonall].[month]' />
          <map key='[month]' value='[v_countrydate].[month]' />
          <map key='[rating (v_photographyvsnonall)]' value='[v_photographyvsnonall].[rating]' />
          <map key='[rating]' value='[v_photography_rating].[rating]' />
          <map key='[sentiment_comments]' value='[v_photography_rating].[sentiment_comments]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>inputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[inputID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>inputID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Travel_Date]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Month</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[activity]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>activity</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>18</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location_Type]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>location_Type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_comments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sentiment_comments]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>sentiment_comments</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photography]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Photography</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>14</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Z-scor' datatype='real' name='[Calculation_3191363324673548296]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([rating (v_photographyvsnonall)])-WINDOW_AVG(SUM([rating (v_photographyvsnonall)])))/WINDOW_STDEV(SUM([rating (v_photographyvsnonall)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='InputID (v photography rating)' datatype='integer' name='[InputID (v_photography_rating)]' role='dimension' type='ordinal' />
      <column caption='Input ID1' datatype='integer' name='[InputID]' role='dimension' type='ordinal' />
      <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
          <alias key='&quot;photography&quot;' value='Photography Holiday' />
        </aliases>
      </column>
      <column caption='Travel Date' datatype='string' name='[Travel_Date]' role='dimension' type='nominal' />
      <column caption='Travel Month' datatype='integer' name='[Travel_Month]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photography rating)' datatype='integer' name='[Travel_Year (v_photography_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
      <column caption='Travel Year' datatype='integer' name='[Travel_Year]' role='dimension' type='quantitative' />
      <column caption='Travel month (v photography rating)' datatype='integer' name='[Travel_month (v_photography_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel month' datatype='integer' name='[Travel_month]' role='dimension' type='quantitative' />
      <column caption='Traveller Country (v photography rating)' datatype='string' name='[Traveller_Country (v_photography_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller Country' datatype='string' name='[Traveller_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID' datatype='integer' name='[Traveller_ID]' role='dimension' type='ordinal' />
      <column caption='v_countrydate' datatype='table' name='[__tableau_internal_object_id__].[v_countrydate_98771871190540D39E6CEF22D122B18C]' role='measure' type='quantitative' />
      <column caption='v_photography_rating' datatype='table' name='[__tableau_internal_object_id__].[v_photography_rating_CE4A7D81431946439618575566B06C74]' role='measure' type='quantitative' />
      <column caption='v_photographyvsnonall' datatype='table' name='[__tableau_internal_object_id__].[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]' role='measure' type='quantitative' />
      <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
      <column caption='Input ID' datatype='integer' name='[inputID]' role='dimension' type='ordinal' />
      <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
      <column caption='Month (V Photography Rating)' datatype='string' name='[month (v_photography_rating)]' role='dimension' type='nominal' />
      <column caption='Month (V Photographyvsnonall)' datatype='string' name='[month (v_photographyvsnonall)]' role='dimension' type='nominal' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Rating (V Photographyvsnonall)' datatype='integer' name='[rating (v_photographyvsnonall)]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
      <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
      <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='Max' name='[max:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='None' name='[none:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country]' derivation='None' name='[none:Traveller_Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[max:Traveller_Country (v_photography_rating):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:sentiment_comments:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;negative&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;positive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;neutral&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country (v_photography_rating):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Deniyaya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Polonnaruwa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ahangama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katukitula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arugam Bay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nilaveli&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Habarana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tissamaharama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ella&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pussellawa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bentota&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nuwara Eliya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kalutara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ambalangoda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Koslanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kalametiya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beruwala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peradeniya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haputale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trincomalee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hikkaduwa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Unawatuna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kalkudah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kandy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Embilipitiya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saliyapura&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colombo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pinnawala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ampara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mirissa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jaffna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Weligatta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Galle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sigiriya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anuradhapura&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Negombo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pays-Bas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Schweiz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Skye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldvies&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mariana Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niederlande&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Near Prague&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reunion Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stewart Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini (Swaziland)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='v_countrydate' id='v_countrydate_98771871190540D39E6CEF22D122B18C'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
            </properties>
          </object>
          <object caption='v_photography_rating' id='v_photography_rating_CE4A7D81431946439618575566B06C74'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photography_rating' table='[v_photography_rating]' type='table' />
            </properties>
          </object>
          <object caption='v_photographyvsnonall' id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID (v_photography_rating)]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photography_rating_CE4A7D81431946439618575566B06C74' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Frq country visitors'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Travel Year (v photography rating)' datatype='integer' name='[Travel_Year (v_photography_rating)]' role='dimension' type='quantitative' />
            <column caption='Traveller Country (v photography rating)' datatype='string' name='[Traveller_Country (v_photography_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_Country (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Travel_Year (v_photography_rating)]' derivation='None' name='[none:Travel_Year (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='None' name='[none:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Traveller_Country (v_photography_rating)])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Asia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;England&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Vietnam&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photography_rating):qk]</cols>
      </table>
      <simple-id uuid='{E24F6573-B02C-4064-851B-4781DD2B59F3}' />
    </worksheet>
    <worksheet name='Line chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
              <calculation class='tableau' formula='2020.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_photographyvsnonall)]' derivation='None' name='[none:Travel_Year (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='color' id='refline0' value='#ff0000' />
            <format attr='stroke-color' id='refline0' value='#ff00004b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</cols>
      </table>
      <simple-id uuid='{0C548562-A996-4A45-9C46-A330E4EE51BC}' />
    </worksheet>
    <worksheet name='Line chart (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
              <calculation class='tableau' formula='2020.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' forecast-column-base='[cnt:Traveller_ID (v_photographyvsnonall):qk]' forecast-column-type='forecast-value' name='[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_photographyvsnonall)]' derivation='None' name='[none:Travel_Year (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='color' id='refline0' value='#ff0000' />
            <format attr='stroke-color' id='refline0' value='#ff00004b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Covid 19' label-type='custom' probability='95' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{87A7AAF9-8AA3-4318-BFA5-BB2477C400F5}' />
    </worksheet>
    <worksheet name='Non vs Poto'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</cols>
      </table>
      <simple-id uuid='{6A50E07A-6C64-4E2D-A8D6-C7B847FDFC3F}' />
    </worksheet>
    <worksheet name='Photo Activity'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='65' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='-90' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' id='legend-color' value='center' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</cols>
      </table>
      <simple-id uuid='{8ACD1209-7334-4E56-857C-B5BB9F8D0C52}' />
    </worksheet>
    <worksheet name='Photo Holiday World Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Traveller Country' datatype='string' name='[Traveller_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Traveller ID' datatype='integer' name='[Traveller_ID]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID]' derivation='Count' name='[cnt:Traveller_ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_Country]' derivation='None' name='[none:Traveller_Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID]' derivation='Count' name='[pcto:cnt:Traveller_ID:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Traveller_Country]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Photography:nk]' member='&quot;No photography&quot;' />
              <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]'>
            <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([activity])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Asia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bermuda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bolivia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Brunei Darussalam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cape Verde&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Channel Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Curaçao&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;England&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Eswatini (Swaziland)&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Isle of Skye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Liechtenstein&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Malawi&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Maldvies&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mariana Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Monaco&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Near Prague&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Niederlande&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Palestinian Territories&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Pays-Bas&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Republic of Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Reunion Island&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Samoa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Schweiz&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Seychelles&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Somalia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;South America&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Stewart Island&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Taiwan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Venezuela&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Vietnam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Wales&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Yemen&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]' field-type='quantitative' max='32056882.40199738' min='-3724079.2519264948' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]' field-type='quantitative' max='10766591.196134271' min='-6098587.5064701596' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3102B1BC-FA5F-46C0-9636-EDC5326D6981}' />
    </worksheet>
    <worksheet name='Rating'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7AB4EE68-1BAC-4E59-B2E4-2B1F6D160702}' />
    </worksheet>
    <worksheet name='SIA'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
              <wedge-size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2E56FC8B-EDFB-414D-AB93-5A9226D14142}' />
    </worksheet>
    <worksheet name='Stat'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column caption='Rating (V Photographyvsnonall)' datatype='integer' name='[rating (v_photographyvsnonall)]' role='measure' type='quantitative' />
            <column-instance column='[rating (v_photographyvsnonall)]' derivation='Sum' name='[sum:rating (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating (v_photographyvsnonall):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</cols>
      </table>
      <simple-id uuid='{B4F9E845-590C-4317-AE30-26D0E4BFAC9D}' />
    </worksheet>
    <worksheet name='type of visit'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='Count' name='[cnt:City:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
            <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[location_Type]' derivation='None' name='[none:location_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([activity])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' direction='DESC' using='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]' value='52' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]</rows>
        <cols>([federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk] / [federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk])</cols>
      </table>
      <simple-id uuid='{EF528593-29D6-41CC-B9C9-46FD7FABCCC7}' />
    </worksheet>
    <worksheet name='visit buy month'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
            <column caption='Month (V Photography Rating)' datatype='string' name='[month (v_photography_rating)]' role='dimension' type='nominal' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[month (v_photography_rating)]' derivation='None' name='[none:month (v_photography_rating):nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk] + [federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk])</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photography_rating):nk]</cols>
      </table>
      <simple-id uuid='{926ADA61-A842-4E77-9E74-95CFABBF94A5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='927' maxwidth='1469' minheight='927' minwidth='1469' preset-index='16' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
          <calculation class='tableau' formula='2020.' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98274' id='7' param='horz' type-v2='layout-flow' w='98910' x='545' y='863'>
            <zone h='98274' id='5' type-v2='layout-basic' w='96051' x='545' y='863'>
              <zone h='49139' id='10' name='Photo Activity' w='48136' x='545' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49139' id='12' name='SIA' w='14857' x='81739' y='49998'>
                <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49139' id='15' name='Rating' w='33058' x='48681' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49135' id='31' name='Photo Holiday World Map' w='52552' x='545' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49135' id='33' name='Line chart' w='43499' x='53097' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='42' h='98274' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='2859' x='96596' y='863'>
              <zone h='5609' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='2859' x='96596' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22222' id='11' name='Photo Activity' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='2859' x='96596' y='6472'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9277' id='13' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='2859' x='96596' y='28694'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4962' id='14' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type-v2='size' w='2859' x='96596' y='37971'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49084' id='32' name='Photo Holiday World Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' type-v2='color' w='2859' x='96596' y='42933'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7120' id='34' name='Line chart' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type-v2='color' w='2859' x='96596' y='92017'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='36' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98274' id='35' param='vert' type-v2='layout-flow' w='98910' x='545' y='863'>
                <zone fixed-size='280' h='49135' id='31' is-fixed='true' name='Photo Holiday World Map' w='52552' x='545' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49084' id='32' name='Photo Holiday World Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' type-v2='color' w='2859' x='96596' y='42933'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49135' id='33' is-fixed='true' name='Line chart' w='43499' x='53097' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7120' id='34' name='Line chart' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type-v2='color' w='2859' x='96596' y='92017'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5609' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='2859' x='96596' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49139' id='10' is-fixed='true' name='Photo Activity' w='48136' x='545' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22222' id='11' name='Photo Activity' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='2859' x='96596' y='6472'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49139' id='15' is-fixed='true' name='Rating' w='33058' x='48681' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49139' id='12' is-fixed='true' name='SIA' w='14857' x='81739' y='49998'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9277' id='13' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='2859' x='96596' y='28694'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4962' id='14' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type-v2='size' w='2859' x='96596' y='37971'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8CCA8090-640E-4B2E-82F7-02AE726BECC5}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='927' maxwidth='1469' minheight='927' minwidth='1469' preset-index='16' sizing-mode='fixed' />
      <datasources>
        <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
      </datasources>
      <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
        <column caption='Traveller Country (v photography rating)' datatype='string' name='[Traveller_Country (v_photography_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='None' name='[none:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98274' id='7' param='horz' type-v2='layout-flow' w='98910' x='545' y='863'>
            <zone h='98274' id='5' type-v2='layout-basic' w='88018' x='545' y='863'>
              <zone h='49137' id='10' name='visit buy month' w='70115' x='18448' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='13' name='Frq country visitors' w='45677' x='545' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='16' name='type of visit' w='42341' x='46222' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='33' name='Non vs Poto' w='17903' x='545' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98274' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10892' x='88563' y='863'>
              <zone h='4962' id='11' name='visit buy month' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' type-v2='color' w='10892' x='88563' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22222' id='12' name='visit buy month' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10892' x='88563' y='5825'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23031' id='14' name='Frq country visitors' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type-v2='filter' w='10892' x='88563' y='28047'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11435' id='15' name='Frq country visitors' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' type-v2='size' w='10892' x='88563' y='51078'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23031' id='17' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' type-v2='color' w='10892' x='88563' y='62513'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13593' id='18' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10892' x='88563' y='85544'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='35' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98274' id='34' param='vert' type-v2='layout-flow' w='98910' x='545' y='863'>
                <zone fixed-size='280' h='49137' id='33' is-fixed='true' name='Non vs Poto' w='17903' x='545' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='10' is-fixed='true' name='visit buy month' w='70115' x='18448' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4962' id='11' name='visit buy month' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' type-v2='color' w='10892' x='88563' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22222' id='12' name='visit buy month' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10892' x='88563' y='5825'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23031' id='14' mode='checkdropdown' name='Frq country visitors' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type-v2='filter' w='10892' x='88563' y='28047'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='13' is-fixed='true' name='Frq country visitors' w='45677' x='545' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11435' id='15' name='Frq country visitors' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' type-v2='size' w='10892' x='88563' y='51078'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='16' is-fixed='true' name='type of visit' w='42341' x='46222' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23031' id='17' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' type-v2='color' w='10892' x='88563' y='62513'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13593' id='18' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10892' x='88563' y='85544'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{148B74DC-060A-48C0-8A9E-8CA4F401E31E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Line chart'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Photo Activity'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Photo Holiday World Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Rating' />
        <viewpoint name='SIA'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{46844394-C8DC-47C5-8AB6-F61F276BEB8A}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Frq country visitors'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Non vs Poto'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='type of visit'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='visit buy month'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{79E10B69-7BD1-4F8B-8BCB-3874D47C0A61}' />
    </window>
    <window class='worksheet' name='Line chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EFB47061-EB8B-45F3-81A8-EA64D508D0E7}' />
    </window>
    <window class='worksheet' name='Line chart (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E4C7457-FEF1-485D-A6DB-FB8B09F1C85B}' />
    </window>
    <window class='worksheet' name='Photo Activity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{614D0002-C6CC-45DD-B3C3-55C172326677}' />
    </window>
    <window class='worksheet' name='Photo Holiday World Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D185D9C-B9E4-4F49-A905-1F029C7C6D15}' />
    </window>
    <window class='worksheet' name='SIA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDDD4D80-DDFD-40AB-ABC9-B13F899C78B8}' />
    </window>
    <window class='worksheet' name='Rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F11A9256-BDCD-4620-9D17-A973F9712E45}' />
    </window>
    <window class='worksheet' name='visit buy month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photography_rating):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5ED166A1-4843-4683-888B-4722DFCC388E}' />
    </window>
    <window class='worksheet' name='Frq country visitors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photography_rating):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2FEE0D30-8A7E-4B4D-B0D5-AD51894A3476}' />
    </window>
    <window class='worksheet' name='type of visit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{396FB502-1C76-4CC7-B7CB-7EF9A5E14013}' />
    </window>
    <window class='worksheet' name='Non vs Poto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B892FE8-53E8-4FB3-909E-CFD8384703C4}' />
    </window>
    <window class='worksheet' name='Stat'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Calculation_3191363324667273216:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[usr:Calculation_3191363324668567554:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95C1AC77-0FF8-46EF-A265-09594A86B84D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Frq country visitors' width='192'>
      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
      8kWxZjdjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Line chart' width='192'>
      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
      JAAi0v4fm81IfMTIGhgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Line chart (2)' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Non vs Poto' width='183'>
      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
    </thumbnail>
    <thumbnail height='192' name='Photo Activity' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Photo Holiday World Map' width='192'>
      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
      K6xw1vH/Axkv2QSTAgQkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Rating' width='192'>
      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
      YZCEl1NvLVQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SIA' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Stat' width='183'>
      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
      gsdls7yDst1udyfnrOmiq/EN267nfPQyxhhfL+K7aKyr5PCOtbziSmFxWkz7QY+LE6WFvPD2
      cH7ySBKXtt5QxlC8ajFHb15Keuy3v3W73W5CQ0M7HU9ZWHihl9Htti6d6usl+Ixfb0vacgT3
      ZcSkmxn66VG+PHswMIzvj7mdBPenlLUbCCNh9jRqN+ZT6uq2pYqf8OO4T7LjpZfZe8KFB8Bz
      moObiyi7Jpb+wPuvPs+2g5XUNQKNdXzx1mbeuGwEMWdPEzaKWXMHULS2GPXds/jxnnsg4++I
      pTBvEeuO1dDgCGFwwnQeTB8CwMjk2zjx8nM8vrKc2sYg+v3wP5k7axzBHczkiJ7IrKuWs2rb
      UBZMjNanJj3Ev82euztoz20XP96WiFwYxS3WUtxiLcUt1lLcYi3FLdZS3GItxS3WUtxiLcUt
      1lLcYi3FLdZS3GItxS3WUtxiLcUt1lLcYi3FLdZS3GItxS3WUtxiLcUt1lLcYi3FLdZS3GIt
      xS3WUtxiLcUt1lLcYi3FLdZS3GItxS3WUtxiLcUt1lLcYi3FLdZS3GItxS3WUtxiLcUt1lLc
      Yi3FLdZS3GItxS3WUtxirQBfL+CfKyUvazUlbR4ZlPoUORMHAo1UFOezYkMJFY0hDB5/H4+m
      jSSs5bg8yMwc1XxUHe/nP827Yxdyz8jA7r4I8RH/jvvLcioS5pM767pzx05u54WdEcxc8huG
      h1Ty1ovPUvCPp8geF3zOU12l69kclMaTCrtH8e9tSWUFjgH9Oxw6umcvQ1JTGN7HAYFR3DA1
      mZq971B39hNdpRS+FsGMtFgcXb5g8Sd+HXfd6SoiLh/Y4diZ05FcdWWbXCNHcE1AJVXtnuVi
      //oiIqakMExl9zh+vS2pqammJD+rac8dFM4V19/FzNmJRDvqqa8PIaTdDuQSHOWnKAeiAUpW
      k1UCweOyWd5B2W63u5Nz1lz06/Al267nfPh13P2TF5Kb3PTzxrpKDu9Yy5pX+7M4LYbevWup
      rQNaA/+axqgBRLV8OXYeuZkxFK9azO8/upb02PaBh4aGnnM+t9tNeHh4F12Nb9h2PefDr7cl
      bTmC+zJi0s0M/fQoXwKXRlTx6ZHGb55QdZAPvH2JbHdUGAmzp1G7MZ9SV/euV3zPj+M+yY6X
      XmbvCRceAM9pDm4uouyaWPoDwxLHULZlK4erG8FTzluF2wkfM5pzPisJG8WsuQMoWluM+u5Z
      /HhbMpDxd8RSmLeIdcdqaHCEMDhhOg+mD2keTua+CfmseCKbisYQYm6dz7wOPgYEcERPZNZV
      y1m1bSgLJkbrU5Meopcxxvh6Ef7C7XZ3uBdvkbKwsBtXc3FsXTrV10vwGT/elohcmP8HDlLq
      2bCN3qcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='type of visit' width='192'>
      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
      MDjN/wdGkYKdDILq3gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='visit buy month' width='192'>
      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
      Rdd1/hdG5fdtnTP38AAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
