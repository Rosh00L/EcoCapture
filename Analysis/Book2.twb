<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1211.0901                               -->
<workbook original-version='18.1' source-build='2024.3.2 (20243.24.1211.0901)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFiltersHamburgerUI />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
        <calculation class='tableau' formula='2020.' />
      </column>
    </datasource>
    <datasource caption='v_countrydate+ (ecocapture)' inline='true' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.040164612je0re1ch3d4c10oumvj'>
            <connection class='mysql' dbname='ecocapture' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_frqcountry' table='[v_frqcountry]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_twocatstats' table='[v_twocatstats]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photovisit_rating' table='[v_photovisit_rating]' type='table' />
        </relation>
        <cols>
          <map key='[City]' value='[v_photovisit_rating].[City]' />
          <map key='[CountryCount]' value='[v_frqcountry].[CountryCount]' />
          <map key='[InputID (v_photovisit_rating)]' value='[v_photovisit_rating].[InputID]' />
          <map key='[InputID]' value='[v_photographyvsnonall].[InputID]' />
          <map key='[Photography (v_frqcountry)]' value='[v_frqcountry].[Photography]' />
          <map key='[Photography (v_twocatstats)]' value='[v_twocatstats].[Photography]' />
          <map key='[Photography]' value='[v_photographyvsnonall].[Photography]' />
          <map key='[TravelMax]' value='[v_twocatstats].[TravelMax]' />
          <map key='[TravelMean]' value='[v_twocatstats].[TravelMean]' />
          <map key='[TravelMin]' value='[v_twocatstats].[TravelMin]' />
          <map key='[Travel_Date]' value='[v_countrydate].[Travel_Date]' />
          <map key='[Travel_Month]' value='[v_countrydate].[Travel_Month]' />
          <map key='[Travel_Year (v_frqcountry)]' value='[v_frqcountry].[Travel_Year]' />
          <map key='[Travel_Year (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Travel_Year]' />
          <map key='[Travel_Year (v_photovisit_rating)]' value='[v_photovisit_rating].[Travel_Year]' />
          <map key='[Travel_Year (v_twocatstats)]' value='[v_twocatstats].[Travel_Year]' />
          <map key='[Travel_Year]' value='[v_countrydate].[Travel_Year]' />
          <map key='[Travel_month (v_photovisit_rating)]' value='[v_photovisit_rating].[Travel_month]' />
          <map key='[Travel_month]' value='[v_photographyvsnonall].[Travel_month]' />
          <map key='[Traveller_Country (v_frqcountry)]' value='[v_frqcountry].[Traveller_Country]' />
          <map key='[Traveller_Country (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Traveller_Country]' />
          <map key='[Traveller_Country (v_photovisit_rating)]' value='[v_photovisit_rating].[Traveller_Country]' />
          <map key='[Traveller_Country]' value='[v_countrydate].[Traveller_Country]' />
          <map key='[Traveller_ID (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Traveller_ID]' />
          <map key='[Traveller_ID (v_photovisit_rating)]' value='[v_photovisit_rating].[Traveller_ID]' />
          <map key='[Traveller_ID]' value='[v_countrydate].[Traveller_ID]' />
          <map key='[activity]' value='[v_photovisit_rating].[activity]' />
          <map key='[inputID]' value='[v_countrydate].[inputID]' />
          <map key='[location_Type (v_photographyvsnonall)]' value='[v_photographyvsnonall].[location_Type]' />
          <map key='[location_Type]' value='[v_photovisit_rating].[location_Type]' />
          <map key='[month (v_photographyvsnonall)]' value='[v_photographyvsnonall].[month]' />
          <map key='[month (v_photovisit_rating)]' value='[v_photovisit_rating].[month]' />
          <map key='[month]' value='[v_countrydate].[month]' />
          <map key='[rating (v_photographyvsnonall)]' value='[v_photographyvsnonall].[rating]' />
          <map key='[rating]' value='[v_photovisit_rating].[rating]' />
          <map key='[sentiment_comments (v_frqcountry)]' value='[v_frqcountry].[sentiment_comments]' />
          <map key='[sentiment_comments (v_photographyvsnonall)]' value='[v_photographyvsnonall].[sentiment_comments]' />
          <map key='[sentiment_comments]' value='[v_photovisit_rating].[sentiment_comments]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>inputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[inputID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>inputID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Travel_Date]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Month</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photography]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Photography</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location_Type (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>location_Type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_comments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sentiment_comments (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>sentiment_comments</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photography (v_frqcountry)]</local-name>
            <parent-name>[v_frqcountry]</parent-name>
            <remote-alias>Photography</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_frqcountry_7CF9E0B5DBD94D7C8C079B931C72D837]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_comments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sentiment_comments (v_frqcountry)]</local-name>
            <parent-name>[v_frqcountry]</parent-name>
            <remote-alias>sentiment_comments</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_frqcountry_7CF9E0B5DBD94D7C8C079B931C72D837]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (v_frqcountry)]</local-name>
            <parent-name>[v_frqcountry]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_frqcountry_7CF9E0B5DBD94D7C8C079B931C72D837]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_frqcountry)]</local-name>
            <parent-name>[v_frqcountry]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_frqcountry_7CF9E0B5DBD94D7C8C079B931C72D837]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CountryCount]</local-name>
            <parent-name>[v_frqcountry]</parent-name>
            <remote-alias>CountryCount</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[v_frqcountry_7CF9E0B5DBD94D7C8C079B931C72D837]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photography (v_twocatstats)]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>Photography</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_75CA33B722EC46A3B140AAD50ED57027]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_twocatstats)]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_75CA33B722EC46A3B140AAD50ED57027]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TravelMean</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TravelMean]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>TravelMean</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>9</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_75CA33B722EC46A3B140AAD50ED57027]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TravelMax</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TravelMax]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>TravelMax</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>9</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_75CA33B722EC46A3B140AAD50ED57027]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TravelMin</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TravelMin]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>TravelMin</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>9</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_75CA33B722EC46A3B140AAD50ED57027]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[activity]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>activity</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>18</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location_Type]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>location_Type</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_comments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sentiment_comments]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>sentiment_comments</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Z-scor' datatype='real' name='[Calculation_3191363324673548296]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([rating (v_photographyvsnonall)])-WINDOW_AVG(SUM([rating (v_photographyvsnonall)])))/WINDOW_STDEV(SUM([rating (v_photographyvsnonall)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country Count' datatype='integer' name='[CountryCount]' role='measure' type='quantitative' />
      <column caption='InputID (v photovisit rating)' datatype='integer' name='[InputID (v_photovisit_rating)]' role='dimension' type='ordinal' />
      <column caption='Input ID1' datatype='integer' name='[InputID]' role='dimension' type='ordinal' />
      <column caption='Photography (v frqcountry)' datatype='string' name='[Photography (v_frqcountry)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Photography (v twocatstats)' datatype='string' name='[Photography (v_twocatstats)]' role='dimension' type='nominal' />
      <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
          <alias key='&quot;photography&quot;' value='Photography Holiday' />
        </aliases>
      </column>
      <column datatype='real' name='[TravelMax]' role='measure' type='quantitative' />
      <column datatype='real' name='[TravelMean]' role='measure' type='quantitative' />
      <column datatype='real' name='[TravelMin]' role='measure' type='quantitative' />
      <column caption='Travel Date' datatype='string' name='[Travel_Date]' role='dimension' type='nominal' />
      <column caption='Travel Month' datatype='integer' name='[Travel_Month]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v frqcountry)' datatype='integer' name='[Travel_Year (v_frqcountry)]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photovisit rating)' datatype='integer' name='[Travel_Year (v_photovisit_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v twocatstats)' datatype='integer' name='[Travel_Year (v_twocatstats)]' role='dimension' type='quantitative' />
      <column caption='Travel Year' datatype='integer' name='[Travel_Year]' role='dimension' type='quantitative' />
      <column caption='Travel month (v photovisit rating)' datatype='integer' name='[Travel_month (v_photovisit_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel month' datatype='integer' name='[Travel_month]' role='dimension' type='quantitative' />
      <column caption='Traveller Country (v frqcountry)' datatype='string' name='[Traveller_Country (v_frqcountry)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Traveller_Country (v_photographyvsnonall)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Traveller Country (v photovisit rating)' datatype='string' name='[Traveller_Country (v_photovisit_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller Country' datatype='string' name='[Traveller_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Afghanistan&quot;' value='&quot;Afghanistan&quot;' />
          <semantic-value key='&quot;Australia&quot;' value='&quot;Australia&quot;' />
          <semantic-value key='&quot;Austria&quot;' value='&quot;Austria&quot;' />
          <semantic-value key='&quot;Bahrain&quot;' value='&quot;Bahrain&quot;' />
          <semantic-value key='&quot;Bangladesh&quot;' value='&quot;Bangladesh&quot;' />
          <semantic-value key='&quot;Belarus&quot;' value='&quot;Belarus&quot;' />
          <semantic-value key='&quot;Belgium&quot;' value='&quot;Belgium&quot;' />
          <semantic-value key='&quot;Brazil&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Bulgaria&quot;' value='&quot;Bulgaria&quot;' />
          <semantic-value key='&quot;Cambodia&quot;' value='&quot;Cambodia&quot;' />
          <semantic-value key='&quot;Canada&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;China&quot;' value='&quot;China&quot;' />
          <semantic-value key='&quot;Croatia&quot;' value='&quot;Croatia&quot;' />
          <semantic-value key='&quot;Cyprus&quot;' value='&quot;Cyprus&quot;' />
          <semantic-value key='&quot;Czech Republic&quot;' value='&quot;Czechia&quot;' />
          <semantic-value key='&quot;Denmark&quot;' value='&quot;Denmark&quot;' />
          <semantic-value key='&quot;Egypt&quot;' value='&quot;Egypt&quot;' />
          <semantic-value key='&quot;Ethiopia&quot;' value='&quot;Ethiopia&quot;' />
          <semantic-value key='&quot;Finland&quot;' value='&quot;Finland&quot;' />
          <semantic-value key='&quot;France&quot;' value='&quot;France&quot;' />
          <semantic-value key='&quot;Germany&quot;' value='&quot;Germany&quot;' />
          <semantic-value key='&quot;Greece&quot;' value='&quot;Greece&quot;' />
          <semantic-value key='&quot;Hong Kong&quot;' value='&quot;Hong Kong&quot;' />
          <semantic-value key='&quot;Hungary&quot;' value='&quot;Hungary&quot;' />
          <semantic-value key='&quot;India&quot;' value='&quot;India&quot;' />
          <semantic-value key='&quot;Indonesia&quot;' value='&quot;Indonesia&quot;' />
          <semantic-value key='&quot;Ireland&quot;' value='&quot;Ireland&quot;' />
          <semantic-value key='&quot;Jordan&quot;' value='&quot;Jordan&quot;' />
          <semantic-value key='&quot;Kuwait&quot;' value='&quot;Kuwait&quot;' />
          <semantic-value key='&quot;Lebanon&quot;' value='&quot;Lebanon&quot;' />
          <semantic-value key='&quot;Malaysia&quot;' value='&quot;Malaysia&quot;' />
          <semantic-value key='&quot;Malta&quot;' value='&quot;Malta&quot;' />
          <semantic-value key='&quot;Qatar&quot;' value='&quot;Qatar&quot;' />
          <semantic-value key='&quot;Romania&quot;' value='&quot;Romania&quot;' />
          <semantic-value key='&quot;United States&quot;' value='&quot;USA&quot;' />
        </semantic-values>
      </column>
      <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID (v photovisit rating)' datatype='integer' name='[Traveller_ID (v_photovisit_rating)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID' datatype='integer' name='[Traveller_ID]' role='dimension' type='ordinal' />
      <column caption='v_countrydate' datatype='table' name='[__tableau_internal_object_id__].[v_countrydate_98771871190540D39E6CEF22D122B18C]' role='measure' type='quantitative' />
      <column caption='v_frqcountry' datatype='table' name='[__tableau_internal_object_id__].[v_frqcountry_7CF9E0B5DBD94D7C8C079B931C72D837]' role='measure' type='quantitative' />
      <column caption='v_photographyvsnonall' datatype='table' name='[__tableau_internal_object_id__].[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]' role='measure' type='quantitative' />
      <column caption='v_photovisit_rating' datatype='table' name='[__tableau_internal_object_id__].[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]' role='measure' type='quantitative' />
      <column caption='v_twocatstats' datatype='table' name='[__tableau_internal_object_id__].[v_twocatstats_75CA33B722EC46A3B140AAD50ED57027]' role='measure' type='quantitative' />
      <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
      <column caption='Input ID' datatype='integer' name='[inputID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[location_Type (v_photographyvsnonall)]' role='dimension' type='nominal' />
      <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
      <column caption='Month (V Photographyvsnonall)' datatype='string' name='[month (v_photographyvsnonall)]' role='dimension' type='nominal' />
      <column caption='Month (V Photovisit Rating)' datatype='string' name='[month (v_photovisit_rating)]' role='dimension' type='nominal' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Rating (V Photographyvsnonall)' datatype='integer' name='[rating (v_photographyvsnonall)]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Rating' datatype='integer' name='[rating]' role='dimension' type='ordinal' />
      <column datatype='string' name='[sentiment_comments (v_frqcountry)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
      <column-instance column='[TravelMax]' derivation='Avg' name='[avg:TravelMax:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMean]' derivation='Avg' name='[avg:TravelMean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMin]' derivation='Avg' name='[avg:TravelMin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CountryCount]' derivation='Count' name='[cnt:CountryCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Photography]' derivation='Count' name='[cnt:Photography:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMax]' derivation='Count' name='[cnt:TravelMax:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMean]' derivation='Count' name='[cnt:TravelMean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CountryCount]' derivation='CountD' name='[ctd:CountryCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cum:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Sum' name='[cum:sum:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[CountryCount]' derivation='None' name='[none:CountryCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
      <column-instance column='[TravelMax]' derivation='None' name='[none:TravelMax:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMean]' derivation='None' name='[none:TravelMean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMin]' derivation='None' name='[none:TravelMin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Traveller_Country (v_frqcountry)]' derivation='None' name='[none:Traveller_Country (v_frqcountry):nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country (v_photographyvsnonall)]' derivation='None' name='[none:Traveller_Country (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country]' derivation='None' name='[none:Traveller_Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
      <column-instance column='[location_Type (v_photographyvsnonall)]' derivation='None' name='[none:location_Type (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
      <column-instance column='[rating]' derivation='None' name='[none:rating:ok]' pivot='key' type='ordinal' />
      <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Photography]' derivation='Count' name='[pcto:cnt:Photography:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[CountryCount]' derivation='Sum' name='[sum:CountryCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMax]' derivation='Sum' name='[sum:TravelMax:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMean]' derivation='Sum' name='[sum:TravelMean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMin]' derivation='Sum' name='[sum:TravelMin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rating]' derivation='Sum' name='[sum:rating:ok]' pivot='key' type='ordinal' />
      <column-instance column='[TravelMean]' derivation='Sum' name='[win:sum:TravelMean:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:TravelMax:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:CountryCount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:TravelMax:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[ctd:CountryCount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:CountryCount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:TravelMax:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:CountryCount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:TravelMax:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cum:cnt:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cum:sum:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:TravelMin:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:TravelMin:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Photography:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:TravelMin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:TravelMean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:TravelMean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:TravelMean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:TravelMean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[win:sum:TravelMean:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pays-Bas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Schweiz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Skye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cayman Island&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldvies&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mariana Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niederlande&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Near Prague&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reunion Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stewart Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini (Swaziland)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Beruwala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Polonnaruwa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katukitula&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nuwara Eliya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nilaveli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sigiriya&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Colombo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Galle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tissamaharama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ampara&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Deniyaya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kalutara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ahangama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Koslanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ella&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Weligatta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arugam Bay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peradeniya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalametiya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trincomalee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haputale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Unawatuna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kalkudah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Habarana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saliyapura&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Anuradhapura&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bentota&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pinnawala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kandy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mirissa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hikkaduwa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jaffna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Embilipitiya&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Pussellawa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ambalangoda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Negombo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:rating:ok]' type='palette'>
            <map to='#499894'>
              <bucket>12</bucket>
            </map>
            <map to='#499894'>
              <bucket>51</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>30</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>207</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6249</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>41</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1977</bucket>
            </map>
            <map to='#79706e'>
              <bucket>16</bucket>
            </map>
            <map to='#79706e'>
              <bucket>72</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>13</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>52</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>9</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>44</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>24</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>164</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>3</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>34</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>477</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>21</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>114</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>45</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>18</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>77</bucket>
            </map>
            <map to='#d37295'>
              <bucket>19</bucket>
            </map>
            <map to='#d37295'>
              <bucket>79</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>22</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>126</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>27</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>194</bucket>
            </map>
            <map to='#e15759'>
              <bucket>14</bucket>
            </map>
            <map to='#e15759'>
              <bucket>60</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>48</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>4</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>35</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>683</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>20</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>93</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>15</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>61</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>5</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>38</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>691</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location_Type (v_photographyvsnonall):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Religious Sites&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beaches&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Historic Sites&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waterfalls&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Museums&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bodies of Water&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;National Parks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zoological Gardens&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nature &amp; Wildlife Areas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Farms&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gardens&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Photography:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;No photography&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Photography&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;photography&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country (v_frqcountry):nk]' palette='tableau-20' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:rating:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:activity:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Beach_Water_Sports&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Relaxing&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Historical_Sites&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;wildlife_nature&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romantic_holiday&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hiking_climbing&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Religious&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Biking_cycling&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Sightseeing&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:sentiment_comments:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Negative&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Positive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neutral&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country (v_photographyvsnonall):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stewart Island&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Skye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldvies&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cayman Island&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mariana Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Schweiz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Near Prague&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini (Swaziland)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='v_countrydate' id='v_countrydate_98771871190540D39E6CEF22D122B18C'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
            </properties>
          </object>
          <object caption='v_frqcountry' id='v_frqcountry_7CF9E0B5DBD94D7C8C079B931C72D837'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_frqcountry' table='[v_frqcountry]' type='table' />
            </properties>
          </object>
          <object caption='v_photographyvsnonall' id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
            </properties>
          </object>
          <object caption='v_photovisit_rating' id='v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photovisit_rating' table='[v_photovisit_rating]' type='table' />
            </properties>
          </object>
          <object caption='v_twocatstats' id='v_twocatstats_75CA33B722EC46A3B140AAD50ED57027'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_twocatstats' table='[v_twocatstats]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Photography]' />
              <expression op='[Photography (v_frqcountry)]' />
            </expression>
            <first-end-point object-id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696' />
            <second-end-point object-id='v_frqcountry_7CF9E0B5DBD94D7C8C079B931C72D837' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID (v_photovisit_rating)]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Photography]' />
              <expression op='[Photography (v_twocatstats)]' />
            </expression>
            <first-end-point object-id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696' />
            <second-end-point object-id='v_twocatstats_75CA33B722EC46A3B140AAD50ED57027' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_2075C5A994FF4C969707987DA2B9EC36]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Frq city' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Traveller Country (v frqcountry)' />
        <param name='target' value='Frq city' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2_B85DF04D49BF485CA7C60155D3FFA2F9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Traveller Country (v frqcountry)' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='5* Cities'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Rating' datatype='integer' name='[rating]' role='dimension' type='ordinal' />
            <column-instance column='[rating]' derivation='Sum' name='[sum:rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]'>
            <groupfilter function='member' level='[none:rating:ok]' member='5' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{8AE6B6A8-396E-4D3F-B028-7BC3FEFD306B}' />
    </worksheet>
    <worksheet name='Frq city'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Country Count' datatype='integer' name='[CountryCount]' role='measure' type='quantitative' />
            <column caption='Travel Year (v frqcountry)' datatype='integer' name='[Travel_Year (v_frqcountry)]' role='dimension' type='quantitative' />
            <column caption='Traveller Country (v frqcountry)' datatype='string' name='[Traveller_Country (v_frqcountry)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Travel_Year (v_frqcountry)]' derivation='None' name='[none:Travel_Year (v_frqcountry):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_Country (v_frqcountry)]' derivation='None' name='[none:Traveller_Country (v_frqcountry):nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='None' name='[none:sentiment_comments (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[sentiment_comments (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column-instance column='[CountryCount]' derivation='Sum' name='[sum:CountryCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_frqcountry):qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([CountryCount])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Traveller_Country (v_frqcountry):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]'>
            <groupfilter function='member' level='[none:sentiment_comments (v_photographyvsnonall):nk]' member='&quot;Positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_frqcountry):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#ff00004b' />
            <format attr='text-orientation' id='refline0' value='0' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='vertical-align' id='refline0' value='top' />
          </style-rule>
          <style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]' id='legend-color' value='8' />
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]' id='legend-color' value='right' />
            <format attr='text-align' value='right' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:CountryCount:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_frqcountry):qk]</cols>
      </table>
      <simple-id uuid='{93E7BE5A-2D49-47E4-89D8-19A9C636E294}' />
    </worksheet>
    <worksheet name='Line Chart Forcasting'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
              <calculation class='tableau' formula='2020.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' forecast-column-base='[cnt:Traveller_ID (v_photographyvsnonall):qk]' forecast-column-type='forecast-value' name='[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_photographyvsnonall)]' derivation='None' name='[none:Travel_Year (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='color' id='refline0' value='#ff0000' />
            <format attr='stroke-color' id='refline0' value='#ff00004b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Covid 19' label-type='custom' probability='95' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{87A7AAF9-8AA3-4318-BFA5-BB2477C400F5}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column datatype='string' name='[Traveller_Country (v_photographyvsnonall)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_Country (v_photographyvsnonall)]' derivation='None' name='[none:Traveller_Country (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Photography:nk]' member='&quot;No photography&quot;' />
              <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' />
              <groupfilter function='member' level='[none:Photography:nk]' member='&quot;Photography&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([activity])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bermuda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bolivia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Brunei Darussalam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cape Verde&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cayman Island&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Channel Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Curaçao&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Eswatini (Swaziland)&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Isle of Skye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Liechtenstein&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malawi&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Maldvies&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mariana Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Monaco&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Palestinian Territories&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Republic of Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Samoa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Schweiz&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Seychelles&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Somalia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;South America&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Stewart Island&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Taiwan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Venezuela&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Vietnam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Yemen&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' direction='DESC' using='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]' />
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]' field-type='quantitative' max='32470957.744618062' min='-25253355.795198381' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]' field-type='quantitative' max='19428705.25777036' min='-19037322.781934395' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' field-type='quantitative' max='419' max-size='1' min='0' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' id='legend-color' value='right' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DB828CB9-B2E3-4F74-A932-614B90B54ACE}' />
    </worksheet>
    <worksheet name='Non vs Poto'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</cols>
      </table>
      <simple-id uuid='{6A50E07A-6C64-4E2D-A8D6-C7B847FDFC3F}' />
    </worksheet>
    <worksheet name='Photo Activity'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photovisit rating)' datatype='integer' name='[Traveller_ID (v_photovisit_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photovisit_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photovisit_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photovisit_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photovisit_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photovisit_rating):qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='65' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='-90' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' id='legend-color' value='center' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photovisit_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photovisit_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photovisit_rating):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</cols>
      </table>
      <simple-id uuid='{8ACD1209-7334-4E56-857C-B5BB9F8D0C52}' />
    </worksheet>
    <worksheet name='Rating pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[rating]' derivation='Count' name='[cnt:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Rating' datatype='integer' name='[rating]' role='dimension' type='ordinal' />
            <column-instance column='[rating]' derivation='Sum' name='[sum:rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]'>
            <groupfilter function='member' level='[none:rating:ok]' member='5' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <wedge-size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:rating:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7AB4EE68-1BAC-4E59-B2E4-2B1F6D160702}' />
    </worksheet>
    <worksheet name='SIA'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column-instance column='[sentiment_comments]' derivation='Count' name='[cnt:sentiment_comments:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
              <wedge-size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2E56FC8B-EDFB-414D-AB93-5A9226D14142}' />
    </worksheet>
    <worksheet name='SIA Positve Cities'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[sentiment_comments]' derivation='Count' name='[cnt:sentiment_comments:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]'>
            <groupfilter function='member' level='[none:sentiment_comments:nk]' member='&quot;Positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{AA5E5BF6-9CC4-48A1-A971-6D7CB28B6C6D}' />
    </worksheet>
    <worksheet name='SIA Type of visit'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column-instance column='[sentiment_comments]' derivation='Count' name='[cnt:sentiment_comments:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location_Type (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
            <column-instance column='[location_Type (v_photographyvsnonall)]' derivation='None' name='[none:location_Type (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[location_Type]' derivation='None' name='[none:location_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:sentiment_comments (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[sentiment_comments (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Beaches&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Bodies of Water&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Farms&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Gardens&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Historic Sites&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Museums&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;National Parks&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Nature &amp; Wildlife Areas&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Religious Sites&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Waterfalls&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Zoological Gardens&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]'>
            <groupfilter function='member' level='[none:sentiment_comments:nk]' member='&quot;Positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:sentiment_comments (v_photographyvsnonall):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</cols>
      </table>
      <simple-id uuid='{EF528593-29D6-41CC-B9C9-46FD7FABCCC7}' />
    </worksheet>
    <worksheet name='SIA countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column datatype='string' name='[Traveller_Country (v_photographyvsnonall)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Photography]' derivation='Count' name='[cnt:Photography:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='Count' name='[cnt:sentiment_comments (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_Country (v_photographyvsnonall)]' derivation='None' name='[none:Traveller_Country (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='None' name='[none:sentiment_comments (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column caption='Rating (V Photographyvsnonall)' datatype='integer' name='[rating (v_photographyvsnonall)]' role='measure' type='quantitative' />
            <column datatype='string' name='[sentiment_comments (v_photographyvsnonall)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]'>
            <groupfilter count='35' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([rating (v_photographyvsnonall)])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='%null%' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Curaçao&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;England&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Vietnam&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]'>
            <groupfilter function='member' level='[none:sentiment_comments (v_photographyvsnonall):nk]' member='&quot;Positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2eada</color>
                <color>#f3e3c3</color>
                <color>#f5dcab</color>
                <color>#f6d593</color>
                <color>#f8ce7c</color>
                <color>#f9c763</color>
                <color>#fac04b</color>
                <color>#fcb832</color>
                <color>#fdb119</color>
                <color>#ffaa00</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
              <lod column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]' />
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</cols>
      </table>
      <simple-id uuid='{4DE53B2F-6305-4D8B-BC96-67ABFB2EFBDE}' />
    </worksheet>
    <worksheet name='SIA type'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='Count' name='[cnt:sentiment_comments (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location_Type (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[location_Type (v_photographyvsnonall)]' derivation='None' name='[none:location_Type (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:sentiment_comments (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[sentiment_comments (v_photographyvsnonall)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]' />
              <wedge-size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:sentiment_comments (v_photographyvsnonall):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{38D1FCF9-5FD7-4A6E-83D8-A3BD7B8DFDAA}' />
    </worksheet>
    <worksheet name='Sheet 15'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Country Count' datatype='integer' name='[CountryCount]' role='measure' type='quantitative' />
            <column caption='Traveller Country (v frqcountry)' datatype='string' name='[Traveller_Country (v_frqcountry)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Traveller_Country (v_frqcountry)]' derivation='None' name='[none:Traveller_Country (v_frqcountry):nk]' pivot='key' type='nominal' />
            <column-instance column='[CountryCount]' derivation='Sum' name='[sum:CountryCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:CountryCount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:CountryCount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='180' />
                <format attr='maxwidth' value='180' />
                <format attr='minheight' value='622' />
                <format attr='maxheight' value='622' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:CountryCount:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]</cols>
      </table>
      <simple-id uuid='{AEF26B1E-1002-4FD2-BDF8-B3507923DA6F}' />
    </worksheet>
    <worksheet name='Sheet 16'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography (v twocatstats)' datatype='string' name='[Photography (v_twocatstats)]' role='dimension' type='nominal' />
            <column caption='Travel Year (v twocatstats)' datatype='integer' name='[Travel_Year (v_twocatstats)]' role='dimension' type='quantitative' />
            <column-instance column='[Photography (v_twocatstats)]' derivation='None' name='[none:Photography (v_twocatstats):nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_twocatstats)]' derivation='None' name='[none:Travel_Year (v_twocatstats):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='302' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_twocatstats):qk]</cols>
      </table>
      <simple-id uuid='{226A9F59-9FAB-49BA-82E6-2AE8BAD8A0C1}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A58EDB08-AD47-409E-AD1E-DC0A82A0F9E9}' />
    </worksheet>
    <worksheet name='Stat'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography (v twocatstats)' datatype='string' name='[Photography (v_twocatstats)]' role='dimension' type='nominal' />
            <column datatype='real' name='[TravelMean]' role='measure' type='quantitative' />
            <column caption='Travel Year (v twocatstats)' datatype='integer' name='[Travel_Year (v_twocatstats)]' role='dimension' type='quantitative' />
            <column-instance column='[Photography (v_twocatstats)]' derivation='None' name='[none:Photography (v_twocatstats):nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_twocatstats)]' derivation='None' name='[none:Travel_Year (v_twocatstats):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TravelMean]' derivation='Sum' name='[sum:TravelMean:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:TravelMean:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_twocatstats):qk]</cols>
      </table>
      <simple-id uuid='{B4F9E845-590C-4317-AE30-26D0E4BFAC9D}' />
    </worksheet>
    <worksheet name='visit buy month'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column caption='Month (V Photographyvsnonall)' datatype='string' name='[month (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[month (v_photographyvsnonall)]' derivation='None' name='[none:month (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#f9a655' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photographyvsnonall):nk]</cols>
      </table>
      <simple-id uuid='{926ADA61-A842-4E77-9E74-95CFABBF94A5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='827' maxwidth='1369' minheight='827' minwidth='1369' preset-index='16' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
          <calculation class='tableau' formula='2020.' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98066' id='7' param='horz' type-v2='layout-flow' w='98832' x='584' y='967'>
            <zone h='98066' id='5' type-v2='layout-basic' w='86414' x='584' y='967'>
              <zone h='49031' id='48' name='Map' w='51717' x='584' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49035' id='56' name='Photo Activity' w='51717' x='584' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49033' id='60' name='Line Chart Forcasting' w='34697' x='52301' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49033' id='79' name='Rating pie' w='34697' x='52301' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='170' h='98066' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='12418' x='86998' y='967'>
              <zone h='6287' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='12418' x='86998' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15235' id='49' name='Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' type-v2='size' w='12418' x='86998' y='7254'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='27327' id='50' name='Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' type-v2='color' w='12418' x='86998' y='22489'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24909' id='57' name='Photo Activity' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='12418' x='86998' y='49816'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5562' id='80' name='Rating pie' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' type-v2='size' w='12418' x='86998' y='74725'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='86' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98066' id='85' param='vert' type-v2='layout-flow' w='98832' x='584' y='967'>
                <zone fixed-size='280' h='49031' id='48' is-fixed='true' name='Map' w='51717' x='584' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15235' id='49' name='Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' type-v2='size' w='12418' x='86998' y='7254'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='27327' id='50' name='Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' type-v2='color' w='12418' x='86998' y='22489'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49033' id='60' is-fixed='true' name='Line Chart Forcasting' w='34697' x='52301' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6287' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='12418' x='86998' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49035' id='56' is-fixed='true' name='Photo Activity' w='51717' x='584' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='24909' id='57' name='Photo Activity' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='12418' x='86998' y='49816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49033' id='79' is-fixed='true' name='Rating pie' w='34697' x='52301' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5562' id='80' name='Rating pie' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' type-v2='size' w='12418' x='86998' y='74725'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8CCA8090-640E-4B2E-82F7-02AE726BECC5}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='827' maxwidth='1369' minheight='827' minwidth='1369' preset-index='16' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98066' id='7' param='horz' type-v2='layout-flow' w='98832' x='584' y='967'>
            <zone h='98066' id='5' type-v2='layout-basic' w='87948' x='584' y='967'>
              <zone h='38751' id='16' name='SIA Type of visit' w='64792' x='23740' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='59315' id='55' name='SIA Positve Cities' w='61505' x='584' y='39718'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38751' id='56' name='SIA' w='23156' x='584' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='59315' id='59' is-scaled='1' param='C:/Github_proj/EcoCapture-Analytics/Analysis/Screenshot 2025-01-18 231438.jpg' type-v2='bitmap' w='26443' x='62089' y='39718'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='149' h='98066' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10884' x='88532' y='967'>
              <zone h='2660' id='17' name='SIA Type of visit' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10884' x='88532' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='2660' id='18' name='SIA Type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10884' x='88532' y='3627'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10399' id='57' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='10884' x='88532' y='6287'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5562' id='58' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' type-v2='size' w='10884' x='88532' y='16686'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='83' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98066' id='82' param='vert' type-v2='layout-flow' w='98832' x='584' y='967'>
                <zone fixed-size='280' h='38751' id='56' is-fixed='true' name='SIA' w='23156' x='584' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10399' id='57' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='10884' x='88532' y='6287'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5562' id='58' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' type-v2='size' w='10884' x='88532' y='16686'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38751' id='16' is-fixed='true' name='SIA Type of visit' w='64792' x='23740' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2660' id='17' name='SIA Type of visit' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10884' x='88532' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2660' id='18' name='SIA Type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10884' x='88532' y='3627'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59315' id='55' is-fixed='true' name='SIA Positve Cities' w='61505' x='584' y='39718'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59315' id='59' is-fixed='true' is-scaled='1' param='C:/Github_proj/EcoCapture-Analytics/Analysis/Screenshot 2025-01-18 231438.jpg' type-v2='bitmap' w='26443' x='62089' y='39718'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{148B74DC-060A-48C0-8A9E-8CA4F401E31E}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
          <calculation class='tableau' formula='2020.' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='9' param='horz' type-v2='layout-flow' w='98858' x='571' y='1000'>
            <zone h='98000' id='7' type-v2='layout-basic' w='87429' x='571' y='1000'>
              <zone h='50659' id='3' name='visit buy month' w='32500' x='55500' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50659' id='5' name='Non vs Poto' w='16500' x='571' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47341' id='32' name='SIA countries' w='37214' x='50786' y='51659'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47341' id='34' name='Frq city' w='50215' x='571' y='51659'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50659' id='38' name='Stat' w='38429' x='17071' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='11429' x='88000' y='1000'>
              <zone h='6500' id='12' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11429' x='88000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='33' name='SIA countries' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]' type-v2='color' w='11429' x='88000' y='7500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28000' id='35' name='Frq city' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]' type-v2='color' w='11429' x='88000' y='15625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8250' id='39' name='Stat' pane-specification-id='4' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]' type-v2='color' w='11429' x='88000' y='43625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='43' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='42' param='vert' type-v2='layout-flow' w='98858' x='571' y='1000'>
                <zone fixed-size='280' h='50659' id='5' is-fixed='true' name='Non vs Poto' w='16500' x='571' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50659' id='38' is-fixed='true' name='Stat' w='38429' x='17071' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='39' name='Stat' pane-specification-id='4' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]' type-v2='color' w='11429' x='88000' y='43625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50659' id='3' is-fixed='true' name='visit buy month' w='32500' x='55500' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='12' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11429' x='88000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47341' id='34' is-fixed='true' name='Frq city' w='50215' x='571' y='51659'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='28000' id='35' name='Frq city' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]' type-v2='color' w='11429' x='88000' y='15625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47341' id='32' is-fixed='true' name='SIA countries' w='37214' x='50786' y='51659'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='33' name='SIA countries' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]' type-v2='color' w='11429' x='88000' y='7500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1A80F195-FFE0-4D70-9B23-D0F132D84CF2}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Line Chart Forcasting'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
                    <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
                    <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[fPIL:cnt:Traveller_ID (v_photographyvsnonall):qk]</field>
                    <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[fPIU:cnt:Traveller_ID (v_photographyvsnonall):qk]</field>
                    <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]</field>
                    <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Photography&quot;</value>
                  <value>2014</value>
                  <value>%null%</value>
                  <value>%null%</value>
                  <value>44</value>
                  <value>&quot;Actual&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Photo Activity'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Rating pie'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{46844394-C8DC-47C5-8AB6-F61F276BEB8A}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='SIA'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SIA Positve Cities'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SIA Type of visit'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{79E10B69-7BD1-4F8B-8BCB-3874D47C0A61}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Frq city'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Non vs Poto'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SIA countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Stat'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:TravelMean:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='visit buy month'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='38' />
      <simple-id uuid='{91E32204-93F8-4CFF-AAD0-18D32233E187}' />
    </window>
    <window class='worksheet' maximized='true' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{352790A8-0E1E-4075-9D85-3F7C13DD202D}' />
    </window>
    <window class='worksheet' name='Line Chart Forcasting'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E4C7457-FEF1-485D-A6DB-FB8B09F1C85B}' />
    </window>
    <window class='worksheet' name='Photo Activity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{614D0002-C6CC-45DD-B3C3-55C172326677}' />
    </window>
    <window class='worksheet' name='Rating pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:InputID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F11A9256-BDCD-4620-9D17-A973F9712E45}' />
    </window>
    <window class='worksheet' name='Non vs Poto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B892FE8-53E8-4FB3-909E-CFD8384703C4}' />
    </window>
    <window class='worksheet' name='SIA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDDD4D80-DDFD-40AB-ABC9-B13F899C78B8}' />
    </window>
    <window class='worksheet' name='SIA Positve Cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B208DBA9-1D01-42F0-91B9-4290B0E2FB9D}' />
    </window>
    <window class='worksheet' name='visit buy month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_month:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photography_rating):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photovisit_rating):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5ED166A1-4843-4683-888B-4722DFCC388E}' />
    </window>
    <window class='worksheet' name='SIA Type of visit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{396FB502-1C76-4CC7-B7CB-7EF9A5E14013}' />
    </window>
    <window class='worksheet' name='Stat'>
      <cards>
        <edge name='left'>
          <strip size='108'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Calculation_3191363324667273216:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_twocatstats):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[usr:Calculation_3191363324668567554:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95C1AC77-0FF8-46EF-A265-09594A86B84D}' />
    </window>
    <window class='worksheet' name='5* Cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photovisit_rating):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90413D93-B792-4F33-BBC1-794A4C561A46}' />
    </window>
    <window class='worksheet' name='SIA countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C880C5F-A5AF-4AAF-85F2-6516170E3278}' />
    </window>
    <window class='worksheet' name='SIA type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C46270CD-548A-4EC4-8D4F-A646CCA311AA}' />
    </window>
    <window class='worksheet' name='Frq city'>
      <cards>
        <edge name='left'>
          <strip size='194'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='150'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_frqcountry):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C85E0752-E638-4646-8B76-A812B7EC5E38}' />
    </window>
    <window class='worksheet' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_frqcountry):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BB2767F-55E3-4617-AF12-45C1E0C45ED8}' />
    </window>
    <window class='worksheet' name='Sheet 16'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_frqcountry):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_frqcountry):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_twocatstats):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B9E3B7E-AC37-4F11-99FC-F4783A09C476}' />
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E9C45F67-31E5-48DA-9189-8EFE85F6B4FF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='5* Cities' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29SYwcWZqg95m5mZvvW+wMBhlBBtfMZO5bV7LYtXT1VAOlbjXmMOiZwgCD
      GYwAXXTRQbcWdNBNFwkCNAdBJwkzcxC6u0pTUz1V1ZXVlZmVZCbJ5L4mI8jYI3x3c9tNh8hn
      6RF091g8GIzFPiCRDHez58/c3//ev73/Sb7v+4SEHFLkl92BkJCXSSgAIYeaUABCDjWhAIQc
      akIBCDnUrBGAh3ev8my+jO/7fPab32K8rF6FhGwDo7rEzFIVgOWlJbq5N11L58rlz1FaX1wq
      1onUHjCSO8X9u1Ocu+Rw7+pVXDXJ6SMprj9aIh5P8OaFc0gv8klCQraBUVtmoZ5hdCCD3tSR
      5qZ5NLOEqiU4NzHEV7cfMjg6zvjoIF98foXz731n7QogSTIR4N69R5w+dwrfc7Fdjzs3b1Iu
      LzB88lXk6jJ19yU9YUjIJpmZfUZpeZmx069g1Mt8/ukfcJD54splAAzHJ67KawVAlmXOnRjk
      1tMaGS2CVVlgrmwQi2r4vs+dG1dZMn0SkZfyTCEhXZEkmcf3bnH/8TSyLCPJEWRJQpYjjB0f
      Q/J9Xn31VQBOjQ/zj598hrTZSPDioy+pZ1/hRL/2Qh8iJGQ32bQAhIQcREI3aMihJvAC+b6P
      ZVkvsy8hIdsiGo0iSdvzS65xg0qSRDQa3ZFOhYTsBo7j4Hkekcj2PDPKxpeEdKPVhNruLBTy
      8ggFoANiYHca1OL9ZrOJbdvIskwsFkNV1V3rY0jvhAKwDt/38X0f0zSDQR6LxZBlec01pmni
      OA62bSNJEp7n0Ww2kSSJSCQSrgb7hFAA1uF5HrquY9t28JppmqTT6UDPdF0Xz/NwXTcQGEGz
      2SSVSu16v0PW4nsuhmWjaRpyl8koFIBv8H0fwzDWzPxicEciEVzXpdFoEI1GsSwLWZZx3dWc
      EOE8iEQigZB4nockST2vBL7vh6vJFrGaNa5eu4GqxbAdeP2t14kp7Y3kUABYHWSe52FZFp7n
      rZnRZVkmmUziOA6u69JsNgGCwS/uN00TRVGQZTlQj7LZbM/92sjIDo3w54nG4yj41Ot1Tp3v
      PPghFABgdbau1WrE43FM0wQI1BtFUbBte1MxEsdxkCQJWZZJJBJdB2Q3I9vzPDzPC1YZsQqJ
      1WX9vYaxmrgej8e38NQHGQlFUTBrDRzX63rloY8EC13edV0Mw0CW5WDmlSSJZDL53KrQDd/3
      iUajHeMpom3LstB1PVC51s/ksiwH/1dVdY2fe71qJfoXZrUIIhw/0s/U1NcsLle7XnmoBUDM
      2JFIBEVRcBwH3/dxHAdFUUin08iyjKJsfqHcKJho2za6rgczvPAYtQ7oVgHYjEcpGo1iGEaw
      WoRAPJOnv69ANpts+77vuTR0/XCqQK7rIkkSruti2/Zzxqv4vyRJVKvVNfr+RqiqusZlup5I
      JBIM1lQq1fXazSBJq8t9JpPBMAxUVUXTwoxdo1Ymmh4gHW8/GRnNBo8fTx+uFaDV2BUztaqq
      SJJEPB4nmUwGs3EsFgvu20njUqg00WgU27Z3ZMYWK0U8Ht/SanWQiaWzJFQP025vA9imQTKd
      O1wCYFkWlmUFM6QwLiVJwvd9bNvGcRxkWSYajQaDdSuDVBiwnRAzthCCzQqXiD10wzRN6vV6
      qAoB3jffgW07bd/X4kkSMfXwqEDCSBQrgBj8hmEQj8exbRtVVUmn08C3hqbw7/u+j67rm/qc
      jdQaMUtvZvB7nhd4eVpXpdbPsywL27YDF22xWFyzorUiDH5FUXYkTrFXsQ0D21dIJdqrQFo8
      yXA8eXgEQJIkNE3DsiwMwyASiaCqKvF4PBi0uq4Hrk+R06MoSjBgXdcN3KSdECtAt+zEzQ46
      3/dpNBpomhaoaq24rkulUglctGIl6/YZjuNgmibRaBTf94nFYgdSCNR4DLdZp2m1XwEEh0YA
      RJQ3Ho8HxqdYFcTKkEqlAvdnuwispmkbCoAsyz0btgKhjonB39onz/MwTTOwZ1rdoNFoFEVR
      1kS0169oQkAP4uAHMBsNKs065ZUqjBQ6XndoBMC27cDXH4/HA8+OMESFV0jM4NFo9LnA0kYD
      WxjPOzGoRGpGa0DNNM1gZarVaoFqtF7fd12XUqmELMvE4/HgmVOpVJC4B2w7h34/kMgVGM7l
      yebTXa/bdwLgum7gIxdsJh1ARGd1XadarRKJRIL0ZcdxUFU1cE+6rrvGGBZtCgPWcTovq1sd
      /J1UFt/3g2cVfzcaDWKxWGCsd0IIt+d5NBqN4N8i1aPRaOC6Lqqqks1m1zzf+j7s1xXCsU20
      dD+DfQdMANb/IOIHtW07WPpbffFCvUkkEsHfwmg0DINMJhOoE/F4nEajEagLjUYD3/fRNC34
      3Gg02nHwbcUFKT6z2WwSj8efWzlEFNp13SAZT8QsxMy/FXRdp9lsrpksTNNkZWUFgEwmE9gF
      mzHk9zpKNM7C9AOu+DLf/eCNjoXc9p0ArNeD6/V64J0R+rBY5lOpVDCri3QC8SOLxDUhIK25
      P4lEAt/3qdVqa9ymQLD6tHMzCn19I1zXZXl5OViJyuUyfX19JJPJwOMkBqHneZRKpaD/ra9v
      9vsCOvZZrBaVSmXNCuf7Ptlsdt8G1exmHTWVZ+LYaNfr9p0A1Gq1QD8XensrQnVYn7wmUpjF
      TC9SHprNZpDpKVIUhNoTj8dpNpvBLC1JUmBLtM6Q0Wg00NU3ozKIHKBIJBJ4phqNBqZpks/n
      g361BsrE80Sj0S0N/s2qMaLN1u9zvfDvH1xuXr0Oamx19e5y5b5b5xRFoV6vU61WAz1dzPid
      glDCLZlMruaF6LqOYRjPDTTXddE0LXB9it1ewi6A51Uw4UoVAmGaZqCStcP3fSqVypr7hLAl
      EgkajQbVajVYuVoT3YQAi3a6JcAd7uS4CK+99SYp1Uc32v8Ogn0nAMlkklwuF7gyN/JkiGXd
      dV3q9fpzM2LrQFJVNRjsre5FYVsAaxLdRMJcax+EbdFu8IlgmhCmbDYbqGHC8G59v/U+eD4a
      3OrCFf91GvjbEYj9Oft/g+/jAU8efU239XLfCYDwZQt/e+ugECqIGOBiYLUOFCEQ64lGo6RS
      KRKJRCBYwjhtVXeEHQHPDxBhuObz+TUGpehLs9kM9Pl0Oo1hGEHfRXp0J1p9+eLvTtetH+yt
      r3UTgtaJoZdaO3sBx7Z5+uQJ/cMjXQf5vrMBBELtER4ZSZICQ1G4/AStM6osyxSdJeJ+koj/
      bTqA8JELlaRWq+E4DplMZo3ASJIUuFPbrT7d7AAxwD3PC1QsRVFIpVIb5vqsD3Z1Mmo3op1N
      kMlkiEQigcs0FosFNs9+RY4onHnlVfoLB8wN2ookSeRyucCAzGQygRcmlUqxtLQEEHhPYFUY
      Pin9mvOpNxiNjAdtCTuhdaC1boFsTV0Wqs9msM0mbnUOOZ4PEuuEQCYSCYrF4qYGcmuEuldU
      VSWZTAYrqKZp1Go1UqlU8P3t58EPoGgqpeUSx8e7X7fvVKBWxIwdi8XIZrNrErw0TWNwcHCN
      egSrAvDD/J8zqowH7QjDVOQCAYEKI/zn61MgNvL4+L6Psfw1xn/4Kfb//V9j/vt/RqQ6RSKR
      QFEUotEo1WqVer0eGMytKlxrSkXrZ23G09TazvrrFUUhl8sRi8UCb5p4RrH67ffBD2BUq0gR
      j5//7L/QbTfHvhYAMVOLAbU+eKOqKvl8PrhWIHkSvrd2JrVtm0qlwsrKSlABolV/b0092Aye
      52F/+r8hrdxD8j2k2ize7/8XXNcNAm6VSmXN6tS6C0wIgHC9irwf0zSD4FinwSpUtlbjWqBp
      2nNbPB3HQdO0A5UakR4YpLSwyPvfeedg2gCCbhFLYZSKNAKhRrQminmeh6qqgc1gWRbNZnON
      R0WSJBzHoV6vt01JbofneVB5uvbFyjSWZVGv14nH46iquioo36wAwk0r+tHalohkC7tHuIDF
      c4hBrmnaGpetaZqBUAE0Gg0sy6JQKASvqap64LJC68sL9I2MYJh+1zjAvhaAzfxgIiGs0WgE
      g6RVLRIbYWBV7XFdl1qttub+WGw1oCJycDaT8hCJRGDsj2D5TvCaP/ZhMJuLQJiI/oqCXKIy
      RWsqR6vrVUSbhcu01RWsKMqaFaI1rtFsNoMUEeHuFfcJ4TpImDak0ylyqfYTlm3qlGrG/haA
      zaKqauC5aS1Y1bp6iKBXayoFrHpuhL4sgmKbEQBJkoi9/28wfA+e/h4Kpyid+ufUlpeDdGSR
      b6SqKplMJuiP2Ksgy3KwcX992+K51ucqtaox1Wo18IyJVG5N0wI7ZKO9A/uZRqPG1NQsk2ff
      bPu+rERxrMrhEAD4dmC0GpYAiiwhSSBJ0aA6hAiEeZ4XVIYQm0cErT78zsjI7/5b3Lf+9aoa
      Y9tk+lZzbUSagVBPRG6ScJFmMhmWl5eD1UlUpxAb+i3LCtQ7x3ECoRKeHVGicX2lulwuBxAk
      Dx5UCrk0hUKGJ9ML9L96/Ln3Tb3OzMzs4RGA9bOd7/soskTu0b8H36My+c/wIRicorpCPp9v
      O0M+fvyY/v5+SqUSw8PDVCoVXNelUPh288XMzAypVIrl5WVyuRx9fX0AwYxcKpWIRqNB7SFY
      Hejz8/NBbpHoi+M4LC8vk0wmURQlCNC1JrC1pk4IP34kEkHXdSRJ4ujRo0QiESzLCjxmB5VY
      Ok+jWuf8hVzb9xPpHO+++/bhEQBN04JAj0DCQ7Ib4Hv4vhdkQQo9OZfLdRwk1WqVXC7HrVu3
      +PTTTxkcHKRUKpFMJvnqq69455130HWd1157jc8//5w///M/5+///u/RNI16vR7k9aRSqSAg
      Vq1WmZiY4OjRo3ieRywWCwZr6z0ihaI1LqDIMr7n4bds4hfxilgsFqwswug+yLM/uFy/cgUt
      U0CRN3AZ+998W8IYPEhfzHrfva7ra1yCkiShsuptsVl9bjF4RLJaK62pD3Nzc3zyySdMTk6S
      SqUoFovBvuJ6vR7M6pOTk1Sr1cBusCyLn/3sZ5w/fx7XdRkaGqJWqzE+Ph4Im9DThTpTqVRI
      JBLB6iTLMplMZm1g7MYNvMUlpO9/L/BcieuEESxmf2HTHARai5u1Yullvrh6ixPn32Ao3744
      FhxwAXj48CGJRCLY/dVoNIJ/C4rFIp7n8fjxYy5cuBDo5YZhPOfybC12K8qPbBXf96lWq4Ft
      0Q6RLSqismITvxBo27ZJJBLB+77vI/s+uC7uNx4lYWQnEolAGMW+iIOk+nQSgOr8Ez69eR/H
      SfDjf/JRx1jAgVaBZmZmGB4eZnp6mnq9zsjICDdv3mR0dJT5+XmOHDmC67oMDg5i2za//OUv
      OXv2LP/4j/9IX18fx44d4+rVq0xMTDA5Obnlas+NRoP5+XmazSZDQ0PMzc1x4cKFDduRZZlU
      KkXTMInIUrATTFVVcH183cbCpCmtpmmIvKJkMklkXSKgENLWwNphIJ4f5MMPhsikuhcM3teR
      4I1IJpNcvXqVTCbDiRMn8DyPsbExLMtiYGAg2HSeSCSo1WqMjY1RLBaJRqOMjY1hGAbDw8Ok
      Uinm5+e39Nm+73Pv3j3K5TKyLNNsNrl3796mqkwnEgnqpsPvZj2KlkyhUCCbzeJ5HnOXv+ar
      //gp07+6QyqZDMq8iKBda6wjEokEPv6DkuKwGXzfx7VNvvzD73n0dKlr/tSBWQHaZTmeOnWK
      U6dOber+0dFvt8598MEHO9If0zSpVCo4jsPo6Cj9/f2bPkMsIvmMpCTSWoRMZjXxbmBggFnr
      IfjgWA6qGuXYsWMUi0UASqUS8XicQqGApmmBCndYBr7AMRvcuHWPeCrNyvxTjo4U0DqcEXBg
      bIB2AlCpVLreUy6XMQwjqAo3PDzc9fpW1aXdxhWBSFcQ8QNhrLYG2YTPf32OfyQSCTbuCDds
      67kA5eUSi/dnyB7tY+DoUGAbLCwsBLP/2NhY4OYURbAOqhB0sgFsy6CmW+RzmYObCtHKdn7g
      mzdvBtsjP/zwwy3d2y19QNd1ZmZmAoNbCITwKjmOQzKZDPYaw6p3yHEcUqkU6XR6TTU4cYAH
      gByNMPTKGJIkUa/XgdUUjnw+T61Wo1ar0Wg0goAXfKsOHR5sfvvr39I/kGY+O8H5yZGOVx5o
      G2AjRJnAI0eOcOvWrQ2v32wufiwWo7+/HyDYeywCWiJfxzAMDMOgXq/TaDSCEogiZ6k1BcL3
      fe7fv8/c3BwLCwtMT0/z6aefsri4yIMHD4J8of7+/qC6hLhPGMiHa3+wj6aoVBsWmrpBndZd
      6tGe5KOPPgoipxvNkL7vUyqVNrVbSpZl+vv7g/wiWN11BQQ7yRzHIRqNYppmcAaZUI3K5fIa
      mwRWZ/GZmZng341GgwcPHnDnzh1OnDhBJpOh0WgE+yLEhv92BXIPPjKJZIyG7ZBIds/ePTA2
      QDu2O+u5rsvS0qr3oF6vB+kG4kDssbGxTenV7T5/dnY2CIyJFOR6vR7safA8j6GhoTXpya7r
      rvFCTU1NBfuOZ2ZmeOutt5BlmcXpR9z49d9x6Z//t9QbDWRZZnBwcI0NAgfLKO5kAxi1MlYk
      QaZDdWjBgRaArdCaK1SpVFhaWgoisa15+gKRIh2LxTatX/u+z8LCAtVqlXg8HmyGKZVKgc4+
      MDDw3GZ7UdGiE9FolFgsRr1Wo1pcon/kKI1GIyj7LpLmWkutiGoWIvVjv9JJAMz6Mv/v3/yS
      97/3p0wc6et4/6FWgVppnRVF+rRpmm2NXeFdEQWt+vr6NiUEkiRRKBSCTSkiVVlEq7sdrgfw
      ySefcPbsWW7duhVkiV68eDFYjVLpNNo3rs90Oh2sKiItIplMYts2c3NzwTGuYi/CQYsTGNUa
      Nb1OaaXeVQD2r+i/QOLxeKDnN5vNtnV+gnTqb9KYN4tIshOJbqLtWq0W7FeA9uqTyBdKp9OM
      jIxQLBZZXFxc0yeRQtGa7y+ERex+GxkZoa+vL5j911ec2P+4PJldYmxsjOGRfNcrQwFogyiT
      0rqB3TCMtpvMRVLaZhHR2tbN+8IAFqtI62kvrczPzzM/P4+u6+RyOU6fPs3Q0NBzfW/d8CP2
      CDSbTYrFYpBPJDbHtF57cFYAH6PZRFWj+Bvs2QhVoA4oikJfX19wdrDIqGxVidbvKtsM4pQZ
      kZYs9vt6nhfsPSiVSoHXCL4t7f7RRx+taevkyZPB+51wHIdarYbnuRjVR3h2AS0xGGyX7HTv
      /t4tpnDhtXN8du02RqN9IQPftZlfLocC0AkxuKPR6JpyKa1Go0hZ3gqiLEmlUgkKYhmGEahF
      IrrcmjIhVJut0Fo2HmDx4X9k6sa/Q41meeUH/ztqbDUNu3UFa7UF9ufA/5aIGqVZq6Kl2gcs
      F+bmsGwvVIE2QzweD8quiPo5/f39pFKpLbclBrMIwom/Rd6OyATt1TMjzhMQ1It3wPewzRJm
      Yxb4tpBva1mWA4MkE8Gl3nhelQRQIhIrlWq4AnTD91cP0xDeGZE92msNHSFMsVgsCIi1nlG8
      E1UaWkumAIye/5e4TpN4Zpx03wX45rPWV7He7zO/wNLLPJkt8soH7QNhfcNHKQyNhgLQjdYE
      NrFNUpblTZdF7IQsy+TzeXRdR9M0crncjs++rWXjNU0jNfIafcP/K7reXOPx2apqtV/wvQhj
      xwaplBocHXh+/4X4XUMB6IIIHAn6+/t3pGis8DKJgrwvatZNJpNBQp1wdSqKGhT+9X1/zSF8
      gtYN+vsVRYvxyusfcHS4cwwAQi9QV5rNZlAjdKtR34140YNLuFjXvyaqUYuN+OsHvygj32g0
      tuzi3TuYPJtZoaZXScTjDOQ722r7V8RfMK1lEcXZAVs5BG8v03reWLvZf/bvfo9kdj9gem/j
      cu/Ofaxv4ivd2He/6EbRyp2csUTAajvuzr3K+urX679PXddJnDjS0X24P4jxx39yCS2ZRI0c
      sHTo1aCO13bpjkQiPRuore0JD81emfnbzdhbRdf1NeXY17fveR7K8QEM28L23G25el8+Pp/+
      l/9EM1Hg3XfeZaS/cxGCvfHLboE7d+4EO55SqRQLCwscO3aMTz/9lEuXLu2YAMCqLz0aja4p
      Yf4ydeKdEICnT59y79490ul0sPnftm3i8Tie5/G3f/u3/OAHPwhSJc6ePbtDvd9NIvzRpYt8
      eu0mtbpxsATg2rVrHD16lHq9TqlUYmJigt/+9reMjY3t6OcI1UfU4my36uw2O6GGCQ/U9PR0
      kPat6zr9/f2cPn2a999/ny+++IJEIkE6nd6nAgDReIK4FiOV7q7K7TsBePfddxkYGKBYLHLu
      3DnS6TQTExNMTU09V8mtV3K5HOVyuWtJ9J2YlXeTwcFB+vv7OX78OAsLC4yPjwcuUdd1WVlZ
      4b333qNare5T9WeV2elpUrksjUoD+jprBftuQ0y1Wu1oCO9EkGo9e0H12Ulaz0nYiEgksueF
      oNOGmPnpxyzWLCYnT5LQOgf79t0KsNsclIG/Wf7whz+sbq9cXOTixYt7XgA6EY/4TM/MMjR8
      pKsAHAzfXsiOIYrpvvfeeywsLLzs7mwbJZGkNDtFqdY+GU4QCsAmES7Cg4zv+8zPz1MoFLh9
      +3aw32A/osaSnD87QbPZvRTlvlOB1of3W3lR6oqwj/ZKPGA9rVFr6P49bBTX+PGPfwzAmTNn
      9rf65zk0DJ8TJ7sXIt6bv2gXugnAi0BUU1h/WN2LRuwX6JR/1Lq10vO8YAtlNBoNTr0UWx6F
      K1eUdWlNkDuoWIaB63voDQMGMh2v23cC8DIQQaEXSeuxraLihNg22Xq6oxAGsVl/Pc1mMxCG
      bucaCw/P+jPTDgYWD6ZWuPj+BW5NdT/bORSADgidX9TR6bWtVtaXIbEsKzi5RRTGbb1WbGQ3
      DANN04LK070gTp4RyX47men68omSjLl8fu0hr731TtsrDL3G3FJl/8UBdgvf92k2m5imGaRD
      tyuQ1e1+x3GCs4Vb9xQLgRKlS7Zz0sxOI3aota4y+4FOcYBu1MsruEoCvXbIN8WLLY+tm85b
      z91yXXeNarKVdm3b7lrNDdh0QGo3EAd1y7JMNps9YCrRWlK5PvRamWKxdDgEoDWPp/WH9X0/
      qPggNockEolAxYhEIkHm5GaLRokiV3tpcG+Fg5L2vRGJdI5XXskdbAEQ6oVt25imGdT3kWV5
      zSHVohw5rKZaiHtb2cwSKzw3+3Xwi2NVD/Lsv54DJwBi0IvB2Kpfi4MqgDUuxPX3t0McONdJ
      EITa06tx+jIRk8Jh4kAJgChnvr7URzs2c1hdK47jUKlUSKfTbSsptHpr9iuH0QFyIBQ+obOb
      prmpwd8L9Xr9ORVHlC/f76kSnucF/x2cQrnd2XcrgGmaz1VkNk0TXdd35fPFKiPUBUVRaDQa
      e8KV2Svi4D9RqFdUxDvI7DsBsG2bxjenn4j/tqrO9Epr6sFBonX1FHZUKAB7FLFUh4T0woGw
      AUJCtksoACGHmlAAQg41oQCEHGpCAQg51IQCEHKoCQUg5FATCkDIoWZNIEwc4bmXEekHIbvD
      Xh8PvRYrCLZEhoQcRkIVKORQEwpAyKEmFICQQ00oACGHmjUCcOPLz7ly5QpXb9zlyy8ut71h
      sWPFYJ9PfvOfKTXX7pZaWFgEYHlpidbk5UpxGctxWFxY3nbnQ0JasRplPvvsD3x16x6u1+rb
      8TCaq96s9aVqIn/913/91+KP23fv8p3vfMT9uzexmzWKpQrLlSZGeYH7Dx/joPC7X/1nPCWB
      0yhy9/5DTE8hn01h6yWeLZQoVZr0ZxQuf3Ed0zL4zW/+gUS6gGHUaJaWkZN5ph49wDNNbM/k
      l7/4BzLZGAvFBjSL1P0YydjBPL085MVSW/qaamSAfmmFeTNOaeYhs8sVFK/C3/zNPzB0dJRq
      uYTZqDE1PUXTltauAK7R4MoXVxgYOYYaS/HGW2/RKM3zbGGFd999l2dPHjF+cpIL50/zeGaR
      9959j5npRwDcv3kd3VN5/Og+j27c4ezb7zF5cpLJU6c4fWKM5eUl+goZ7t6+TbGqU11ZJpHv
      59TkaSbGTzA79YC7j56ST8deypcXcjC4e+0zPru7xPhQGtt2uPfVl/ipAqcmzzDcn2Nmbo6p
      x485PnmOmccP1gpAujDAO2+/w/nTJ4gnEkhALJ4gm4hy+fJlcgNHySSiXLt9n4FMnM8vXyZb
      GAJ8mnKaH136kLdOj5IeHeXm5c+Zml0kis39x0+Jx+IkcsPU5h5y7OQZorE4sqRiGUVmFkuc
      Gs1S9RKo8uEqyxGys5x9432OD8R4+vVDvl6okUuncH2ZWnWRcq0BQESJEo2uFhzeG4Ew3+Xy
      J7/nxIX36UvvbvnzkIOD5zq4voQSkTBMG8dsIqsasVgMQ68hqzEiEkiAokaxbWuPCEBIyEsi
      dIOGHGpCAQg51IQCEHKoCfOKd5ln969x7ZnBH799mtmn0+hKhrSicGS0j6XFFaamnnD+tdeJ
      awrxRJLQJ/ZiCY3gXeaXP/8bFioWo0f6ODGYpSjleHL5MygMM5iN0TSb9GcTVJ0o3/3wnVAA
      XjChAOwqPisrRRTJp95o4CsaRrNJPpWkbjmk4xp6rUKtXkLNHmdyrP9ld/jA01UAHMtCjkY3
      NBQ8zzs0J4uEHCy6jlq9UmUzZ52Ei0jIfqWtAPiexYPbd7h+8x5h+dmQg0x7L5CkosVjWHaz
      JzdRsVjk448/ZmBggIWFBQqFAq7r8oMf/KCHVkNCdo6241uSJByrQTSeplflxvd9isUivu+j
      qirxeLzHFkNCdo62AuB5JnPPFnDVVE+NJ5NJRkdHOXnyJNPT04yMjLzwI4xCQrZCRy/Q3Nd3
      +dmvrvAv//W/YKOqK91OTwwJ2ct0VPF1w+LUudNbtgF83+fy5cu4rkutVuPNN9/ENE0+//xz
      xsbGMAwDXdcZHx/n5MmTYZGrkJdKRzeoaVpYtXrgBvVci4cPHlCrVnjweJrS0lvmrJQAABQN
      SURBVDxP5xafu0+SJDKZDLZt43keU1NTjI6OMj4+jqqqJBIJotEod+/e5e7duy/quUJCNkXb
      6df3LO7efUQ8lQ+M4PLcDHXHw18qkddkFps2Ccl/7lhN3/dZWloin89j2zZHjx6lWCwG/6/X
      65w/f55SqQSwb09VD9k7iMMSt0NHN+j586eYr9qI7empfAG1OoOMx1zZIJeO0rRXP9j3/TU2
      wMWLF9s2Ozg4GPx7aGhoWx0OCdlJOrpBfd/HajRwgCgQTWZ55Xy2a2OGXuf/+Z/+uy134p/+
      9/8z6cLAlu8LCemVjhaoD2Ryua1tGPBX92WGhOwX2o7vRnmZ+ZVKmIobcuBpKwDJXD/DhQy1
      ajXMBQo50HTUcGLxOBHZZXbmeVdnSMhBoaMAxONxRk+c5vjoYKdLQkL2Pe3Tof1V//6Te/ex
      wlz/kANMWwFYmp1mZmGFbD7F44dTu92nkJBdo60bdODIMdRYHCWeIZ0Ii9WGHFzarwCP73Dr
      yTyf/cPH7O0zAkNCeqOtAKiJFHa9hKyuLVRbKZVwbIPZuUWatTLLpequdDIk5EXRVgWKxuKo
      kQhSUgskxLUN7t5+wODYEFHPY9psEsWjkE0FyXCu626rE67rhklxIdtmx5PhkvkBJk86DA0P
      B6/VymUc18KyLCo1g2Q6iu6sTYZztrkpJhKJhPsCQl4KHUddeeYBv/n0K/7pX/4pKpAbGOY7
      A8OdLg8J2Zd0FAA5pmFX98YBdk+ePOHBgwcMDAxQqVQwTZPJyUlOnDjxsrsWss9pqzjViwvM
      Ljc5fuLIbvenLclkkmPHjpHL5fA8D03TePLkycvuVsgBoMN+AJmILONLeyMfdGFhgUajgaIo
      DA4OUq1WOXfu3JbbefjwISsrK6iqSiaTYWFhgfPnz5PP519Ar0P2Ax2N4ITyJbduL/PuRXjZ
      h5a++uqrO9LO0NAQuq7jui7z8/NMTU0xNjYWCsAhpqMNkE3niQ1IvKw4sGEY3Lp1i4mJCe7e
      vcsHH3zA7du3cRwH27ZJp9NUKhWOHz/O8PDmjPPr16+vHphmGGQyGUZGRjDNrYX6fN9nenqa
      o0ePcuvWLY4cOcLs7CyvvfYa0h5ZMUM2T0cBiKcL9CWbOLycFSAWixGLxbhz5w6maeI4Dvl8
      ntu3b7O0tMT4+DgrKyssLi5y6dIlMpnMhm1+9NFHO9K35eVlVFXl5s2bVCoVpqenw5Vkn9Ix
      elApLzI/W+q5NOJ20XWde/fukcvlcByHYrHI4uJiYBBns1lef/11UqlU12pzrusyNTWF7/uB
      4Tw7O4thGNy4cYNiscjDhw+pVjcf1X769Clzc3MkEgkkSSKVSpFIJHp95JCXQMcVQEv2cWzM
      fWmHiCUSCf7yL/8SgFdeeQWgrapz7Nixru3Ytk2xWERRFK5du8b4+DiGYbC0tIRt2/ziF78g
      Ho+TSqX4/ve/v2GFO0mS+Iu/+AsA3n777e08WsgeokNtUA+7UYFYcrf7s8rUM7h2a2v3ZNLw
      vT967mXLsrh58yYTExOsrKywvLzM7OwsrutSLBZ5/fXXURSFL774glKpRH9/+1NZXNfF9/0g
      6i1JEvV6HUVRsCwLTdNQFAVJkjZVJtKyLD755BPeeustbt++jaIolMtlfvjDH27tuUN6oq0A
      TF+/yqIjkYx++7bn2kxNP2NkZIillSqFdJSGLTPYl9v5XpkmrJS2dk+HjTuZTIaf/vSnwLc2
      QDtb4MyZM12bn5ubY2VlBc/zGBoaor+/n5///Od8+OGHXL58ORCACxcuMDo6umF3o9EoAwMD
      ZDIZ0uk0hUKBkZGRDe8L2VnaCkCqb5C3jowQA8Rc5rkecU3m0ZM5CrEIz4omGj5ePrPjyXCy
      521Z9fJ9H3ddQp115w7ml1e31E5kaIjED58/vyCTyTAzM8PQ0BD1ej3Q+1dWVpiYmGB0dJTr
      16/zq1/9ir/6q7/a8HNM02RqagpZlpmfnyeXyzE0NLStpMBarRasSqqqHrq8qh1PhlM1lbln
      sxwdGiTyzZdp1otMzZUZ7suwUK6TfpHJcNt4GEmSnvvh9SdT1P7TL7bUjnb+HJl/8qfPvd5o
      NEilUriui6qqSJLE2bNnGR8fx/M8FEXh0qVLrKysbGoAKorCn/3ZnwFsK6jXytzcHE+ePEHX
      db7//e9TKBS23Ibv+1y/fp2RkRGePHnCe++9dyjcum1/qUQ2xddf/pZH91P88EeXUIBkYYT3
      C6tL9PHd7OEewK7eoE+r0teqodizjPcD9SVkwGPVpTYQB6v4hEhigkjs+VQS3/f55JNPGBoa
      YnR0lN/97ndMTk6iaRoPHjzg5MmTHDlyZEvl5lVV5e233+bXv/419+7d48MPP9zyM66srHDn
      zh1GRkZ49uwZb7zxBpqmbXzjPqf9ChBLkc+kWVxZLY14uBbU52k++79w6re3dE/i2L8lMvwX
      z73ueR4rKytEo1EUReHMmTPUajVc16XZbHLt2jUsy+LkyZOb/qzR0VESiQQXL16kr69vS/0U
      CE/YjRs3cF0X27YPrwAAnH3lPJnlOgf/K9h90uk0qqqiaRpXr15lfHycp0+f8sYbb7C4uLhl
      O0DEII4ePbrtPiWTSX7yk59s+/79Sofy6Cb/39/9gnRhiPHJ8VAIdpBIJML3vve94G/h+Tl/
      /vyavzfizp07FItFPvzwQ27evEm5XKZWqxGNrp7nc+LEiU2tIr7vY5ommqZRKpXIZrNYlgUQ
      uHW3alTrus5nn33GxYsXUdXt5xE8e/aMpaUl3nzzzW23sRHts0FljVdfPUPdihAefLQz1HST
      /+Hf/WpL9/RlEvyP/+qP274XjUYpFou4rksymSSdTqPrOktLS5imyZUrV8jlchuqRHfu3GF+
      fp7vfve7XLlyhXw+j2mauK5LvV7n1Vdf5fjxrVl9Dx8+xLZtdF0nm+1eUbwbjx49YmDgxVYN
      77whJjzza0fxPJ+ni1srImDZnd3KyWSS4eFh6vU6y8vLpFIpdF3n9ddfx/M8pqenSaU2PuTw
      0aNH6LqOYRjE43EikQie53H+/HmuXbvGxx9/HMRRNsv4+DgLCwt4Xm+VZY8cOcLdu3c5d+7c
      C/NIdRSAvr4+Fh48e2m5QCHt0a0GlmsRy2qcyk4CcObC6TXXRJCZODtO09NpNnU0RSOuts9V
      +slPfkKz2cRxHIaHhxkcHGR2dpZkMsmlS5coFotb7mMmk+FP/uRPtv5w6zh16hSnTp3quZ1u
      dDkfwMex7VAA9hj/5x/+Dz75+uMt3fPjc/8VP333X6157av5Wbz10fNUgq/1OuQy3K98G4mf
      n5sBYLKvn1T0eYvQ933u379PPp9ncHCQqakp8vk8pVIJ13XJZDJomkY6ne7aT9/3KZfL5HI5
      TNOk2WySy+VoNpvYtk0ymQwCfjtFRwFYXFjE6ZJlWSuv0HBkhvvDFOD9yH/46ir2FlWU/+a9
      PyJVaC8A9XqdarVKLpfj8uXLfOc736FSqVAqlSiVSkxMTPD66693bX95eZmrV69y+vRpYrEY
      H3/8MW+++WZg5J86dYq33357Rw9bbxtytZt10vk+IrFYRwkpVRuYjbAwVshqFH5lZQVYTRU3
      TZOnT59y8+ZNLly4wPDwMNPT0xu24/s+mqYFRriiKNy/f596vc4777xDqVTi+vXrO9r3tuO7
      PDtNyU0Q9V1saO8GdUx0JzSUQ1YF4Ec/+lHwt3C/vvfeewB88MEHm2pnYGAAx3EoFAoYhsEH
      H3wQ7NqTJInx8fEdP5C9rQD0nziHO/uMsbfe6hgDOHZi1TgRKcLC4o9ntpEdKklrPQaRCMS3
      uBlT02D9kh7TkLe4S0tKp5/3XigZULYWYfXl2Np2JCikt/ZM2ZT2XF+SapJ8fGu5PnE18Vw7
      aS2Gs8XkRXnd7+T7Pvd/c2NLbQBMvH+aaPLb78JvFvFWHgMwALD4jCSQBJynzwJXvLjDBiRF
      Qx5+DVgVwO3aBZLv93YAgMgC3W42Xiue5+2ZdvZSX3aqnb3Ul51sZ/0xvVuhZwEQHegugT53
      v7pFeniQ0cHOJ85s1I5tNJh6OoMUTXLi+GjHQ/w2aqe0vMDiSpm+wRH68+33Em/mmUrLC9QM
      iWNHO595vFE7rm2wtLxMtm+YeLRzxHWjdqrFJeaXi2QLQwz1t1+FxU/drZ1KcZFS3eX4sZFt
      f7+eZzM3s0CmUCCd7LxVdKN26uUVZpdWSGX7ODLYeQXe+LfqzI7seNz4w30MvUFD716BYaN2
      HLOJh8+z6dmuh/dt1E69VsOxXZaLnSvfbeYLXZybx/G7e1I2ase1LZZnntI0uuf/bNROo1bD
      dTwWlpa6trFRO08fP0bv4v3bTF8kJDzPZWl+kW5PtVE7er2G53nMzXd+ps20041d2/IraSq5
      9MaRya5tyBFkJca7777eU4qGokbJF/o4dWKip/5kC32UV3orH1laWUT3NHp1bUdUlXQuz/kz
      m88ibUdlqUytWe+pDc+1uHf3PpbXWyZxRFFJpLJcOP/igmG7luk80N+H0TR6akOSwLYsXLeX
      ELuP73tYltVzkK+p10lmtp/rApAr9FHUI6QT0R5a8QEfy7Q67QzdNGfffhO7p+nFxzRtRo8e
      IZPpZcLzkfAxTQvvBUZjd7Xow1ZKj7TDkyJEZZ6PYG4JH1VRqevNng8C15s2lt7bbKlocWyj
      hu329kySrCL5Lm4P341t6jz6eoqGrvfQF/BcE8v2KJe3/3v7vo8cjROPKj2vjt3YFQGwrSbl
      qkE81ltitWc2+frpFItLlW234Tous/MLuM0GVg9Ti22apDNJ0rmtbz9c0x/LxLZsmmZ3vbs7
      MjEtQqWuE+lhtNi2y9jRYfyehoWEFs8y0JdldHT75fR9z6VWreF5Lm5Pk0N3dkUAZFnBbtbw
      5d40rng6x8jgEH19G1eB64QkSQwPDaKl0qjy9geLqmmYTZOV+SmKte2rdpIcIapFiSq9BXgc
      26JRrWH1oB7Ozc6yXKphG40eeuJTXF6irjexrO2f+iNHVGIKNHQdo0tWbK/sigBEFAWraaAb
      zZ7aMfUai8tLVKvbX6LliEKtViWdSvWsAsWSCXLZDH4vNonvI+FRLJV76osvKWTSiZ6e6fjE
      BJOTk/QnExjbVqUkBoYGkCQp2FizXVK5ApLv4zq9tdONXTKCJfJDgxQGO/vLN4dM/0A/ao+z
      pSzJW46CrsdqGqiqihpL05fbbllEl+ln8xh6neHk9g1GxzapN5qosQRKZPtzmqJGUVSoGCaO
      D9uXJglZWo0c94JtW+T7B5H9fb4CAEj4GE2jq/9+wzYkiXQm26NR5JHL9xHpQf0BsGyTRl3H
      3SAO0B2ZVCrOidNncK3tH0irqBqyp/Pk4RTNHtSORrXMs2fP8FIZkj18PZ5r0Wg6pFK91Us1
      Gw1KK0tI6s5lf65nlwRA5uTpMzjVCr0sZsXlRfSmRTS6/X2mtmnSMAx6DYCnMlme3X/AXE9x
      AImhkaMUChmqxe2rQJ5r46Bx+twkMXX7i3oyk0NfWWKxXOkhuORTKlZJpeOUilus7reOgdFj
      nD49QWmheyCsF3ZJAHxmpp/iROSedK5cLgeSQiK+fZ+5qsVxLQOjUcfuwQvUqJYZPXOGI4Xt
      lSEROJZBQ3cZGe2cIrIRteUFPFVhfr6I0uPKJkUk/J4c7xIDw0c4MTGBqfdiTAOShCzLKMqL
      G6a7JgBTDx5Sd/0eBMCjXGtQLy2xUtq+GxRg7Pg4I2MDlBa2386zmTnsWhm7R8+WJHncuv4V
      cnT7Qp0ZGGGkf4g33zzbs89cUmPEld4a8VyTSqVOvMeS8TOP7vHll9d4urj1bZmbZVcE4OmT
      xyQK/YwN92IEy2RTcRKpOF9dv0MvZlFEUUklNRr17XulTk5OMn72PMO53tI7HNOk+PQptcb2
      lUNJjhCPx4nH4z0ZnrZpks3nyOZ7i22AxMrSHEqsN90919+HEk1y+uRYj/3pzK54gYZHRkFe
      6lnvjiQyZFMWH310sifJnZl6zHKxTCK/fbVDeEx6JRKN8+bF75COv+yT2FZjG8tLywwf7X7m
      wkaYpomiRlF7LNJbWloikc6Q7Smloju7sgI06nVs28YwezGBfep1HbPZwHV78NABsXicZCZP
      sgdbYqcoLc1y686DngJYO0k6laDYo4ppNIosLFWpN3pJqfDJ9A0RlfwXWphhVwRAUSI0DQu9
      0UvejMfCzDRaOkut1ptxVS5XSCSSDA2+2KJLmyGdyeJVFjGtvSEAhmFhmb0lLWZyA6QSGoV8
      b4mCfJO06L7AbLhdUYFS2TzZSg0/0suMG+H862/tQG98CoUC5bqxB0q++FRqJq98+BH92Zd1
      Hue3OLZJQzfQegjKwTdp67KP20NhLNexqdbrNJtmzzGbbuzKClApruD6EO2x2rDY0NFbXRif
      ZtPEajZ5gTlWm+5LrVZDb9SxnBcX7dwskYhCJhnFl3qzR3zP4etHj5mdXdh+XxSVdDpDPp/t
      OWWlG7siAIlkCstoIkkv68i9b7FNE8OoslTW6dHbtwNIpNMJKuVqjyneO9QbOYLv+cQTva1G
      kqQwONRPqocNUGa9zKNHj5mbnaOq7/NcIFWL4nsu1WrtxZwptqW+aORyg0TjvaQf7xzZ/AD9
      w8MszJVI9hAM2wls0yTd14/r9zYsfM9GVmLks90rwXVDUlSyuRw+EtoLDITtWjJcMpmg4bz8
      Wc6xLBZnZ1ELL98ABolYPAZY6I3eMmV3AssymHk6y8ixHs8AkiQkpJ5sgGgsxcnJyd76sQl2
      bUvkkbHxPXPmlKIoRHrImtxJLL3Kk5kVjo+/uGDPZpEkCUVVey5VIkkR4jGFWq1BLv2Sjtrd
      JP8/pkMR34OzME8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      3KwuLgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      UDEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Frq city' width='192'>
      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
      82wVUP4VAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Line Chart Forcasting' width='192'>
      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
      IoPkp+iK2gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO19yXMk95Xel5VZmbUX1ia6STZ71WihSNG2ZFEKzcT4ItnhLUIK66BxhHWd
      mIN9883/iCMcoaPt8EUXOSzb0lCL1WRYI5MSW6TYC9nd7AYahdpzz/Sh+D38KpG1oFAFFFD5
      RTDABgqFrMzf27/3ntbpdOJ8Po8MGVYRRj6fh2VZZ30dGTKcCXJnfQEZMpwlMgHIsNLIBCDD
      SsM46wvIMB5hGML3ffi+jziOEYYhLMtCLpdDPp+HrutnfYnnGpkALCl42DudDuI4HvqZ4zgA
      AMuyUC6Xz+LyLgwyAZgT4jgWLW0Yg9uqaRpyueN5mVEUwbZtABAt73me/NuyLERRhFwuhyiK
      4DgOCoXCfD/MCiETgDnA9314nocoiuD7PvL5PIIgAADk83mUSiVomgZN00a+RxzHCIIA/X4f
      YRgCAAzDQBRF8hpN0+A4zpBFMAxDBGXc+2dIh+Y4TpzVAWZHFEXo9XrwfR+6rsvhJSzLgu/7
      MAwD5XJ55CGN41jcHs/zYBgGXNcVQZqEfD6ParV64s+zasgswIwIwxCapsnh5/eScF1XDnYu
      l0OxWDwiBBQe27ahaRp834frusdyn7Jq/mzIBGAGxHGMfr+PKIqg6zo0TTsSqPJ1/H4ul4Pr
      uigWi5LZieMYpmnCdV0AQKFQQK/XE/9edX9UJN2dYrF47FgjwwDZXTsG4jiG53lot9uIokjc
      lUmHn4e1Wq0iDEO0220RIM/zYJomPM+D4zgwTXOs22NZFkzTlH8Xi0UJktMsUIbxyCzAMdDv
      98WlmSbgpGWwLAuWZUHTNLRaLYkV4jiG4zjyXp7njc3o0DL0er2hfzuOI7WBOI7RbrdhmiYK
      hcJSBsZxHIv1pGt4VteZCcAUoDYvFosIggC+76c+MNUS8OcsVhmGIT+npqbmVn+POf40qG5R
      LpeDaZrodDrynp7nIZfLIQxDiSeWMUXKQw/gzAt5mQs0BeI4Rrfblf/P5XJDB5oaTXV7iCAI
      5FBGUTQ3TUfNDwyEzHEcuK4rNQQAUo9YJqj3gfdqVKwz7fuxBjOLC5gJwBTo9XrwPA+e56Fc
      Lg+ZbJpyBqJJc14oFJDP59HpdNDtdhdm6pmJIur1+pkLABUCA366fI7jDFE86NKNApVLGnRd
      h+M46HQ6sG175OtGIROACVBvvuM4yOVyKJVKAAaHm3SE5AEEBhq4WCyi1+uJlTiJthsF/m1N
      01CpVFCtVueWFUqzatPCdV2xVHyPQqEghcFut4tcLjeRzjEpRmDSYJZ7mwnABERRhCAIJD/f
      7/clfclsTLfbPXLzNU1DuVwWTXcaYKWYqdl5IAxDuK4L13VFkxMU6lGwLAuu60oBkBQOJhLq
      9Tp0XT+RsLL6rmnaTBZv+ZzEJYFa2VWzFcza+L6PKIpQLBZHan9d1xHHMSqViqQ9FwXSIQqF
      wokOlHrAoyhCv98XBcDs19ramgjYOEFLBuG8H8ViUa75pAjDUIqAvu8LX2paBZBZgBEwDAOa
      pkHXdXGDyOfhwVf9W0LXdZTLZXnImqbBNM2F++O8vpMe/m63KxSMTqeDcrmMcrksn1E9XJP4
      TQCOxEW8xnm5aLquw7IsBEGAMAyPrWgyC6CAN9E0TXlgvMH0ZTVNk/SlYRhDKdFSqSQpT/Vg
      0EwvEtSsJ3F9KNwsyFHAdV1HoVBAHMdLl1ZlOthxHLFUuVwOQRBMpXQyC6AgjmPYtj2Ui6cZ
      50HnDS4UCkO0ZwBDr+H7dbtdtFqtmQPJaaFWh08CCjv9dDXwH0fmO2uUSiUR2jAM0e12p8oK
      rbQF4INmFdUwDFiWJWk5Fmny+bzw8unSdDqdIy4AqdC6rktOfp65/3E4jt87CmqFW/289K2X
      9fADA2tcqVTkmbKvwjTNscW2lbYATJ+pBS1gkKqjOe31etKGmM/nUS6Xoeu6BHQqGIgGQYBe
      r3dqhx9A6vUcF5qmIZ/Po1gsihvHoJpu3zILAQApOvJzkB4yCitrAVg5DIJA/FpN01AsFkWL
      GIYhB0DTNOHb+74v+X2CVoIpSNM0Ty39CUBSjPwcsyKXywk1W2W7ttttyWwtO0ql0lCQPU4A
      Vs4C0EfM5/OSLeCBoUVQefuFQkH8YTI/mRpUOfhqyi+Xy6FSqaBYLKJcLp9KRXYch+i4oPZX
      MzjnqWmKVqDdbo/kbRErZQE8z0O/3xdXJlmBpLlM3jA1b00uEDk3PBzJ9yLnReXmLBLsIpvH
      QWX6N5/PiyZl9XtZoVLP4zhGq9VCGIaSvRolBCtjAeI4FpdF0zQEQSA3jf4t/WhaCWZBDg4O
      JB1IXpAaAJPLryKNF7QoGIaBarV6JP06K+gKniaXyPO8uWXL6NrGcYxmswnP82DbdmrvxspY
      ALI5yZG3bVu0tm3b0mVl27Zkcej3x3EsWR2m28IwFMtg2/YRzcusEgCpDbCSPO+UaBiGou3m
      hXkWq0aBTUUsYJ2kf4EJB9/30e12hwqXpKqQfqE+q5URAN5cHmbP8xCGIer1utwkZnps25Ys
      kKZpKJVKCMNQNBRvIK3EqAJUPp+X9wcOq8Ldbneu3VusX5imeW5aI8mrItWkXC7PVMtgTNbr
      9YR7pLpDLO4RvV5vqNC5MgKQz+eFvEXzyHI/v6frOkzTRLlcFspuEARwHEe0fb/fl0wJ3R4y
      HNOQPJCsqk6iAB8XrNqqD3dZEQSBWORKpTLTSJc4jtHpdOTAq/FW2sHn+yefx8oIAHDIQ6lU
      KtJBxTRooVAQDaQSqkhjoADQZJ8kxcke4HmmSdWAdZkRRZG4KLNqfSouDhNIIo3CrdZ4VGG7
      8AJATR8EwVDFl/4ig8ckmOKk30gWJK1CFEXye8cNFpk5mpcAMEVLnv0yg/euWCzO7PLYtj10
      +NXPTN8/Lc6qVCqraQHo5ti2LRaApfM0qJ1M1NasHajMzpMctnllWPjAT0qDPg2obZyzUDcY
      6KouZPLwq19VkKiYLOSthABQIzAT4DjOEWIX06TlchlRFKHdbiOOYwmKeVMNw0C32x2yIryp
      hULhWJXSUZpqWrAxh33Hy6796U4mK7XJ1wBHfXXXdaUZSbWc09w/VvDb7ba4inEco1QqXXwB
      oAtEWJYlUxPU8eKdTmeok4qan8QqBq+k3VqWJRMZ+J6sIE8DdjCdxA2iADKGWWZQwUyqKquE
      QxYdGXON8vnHQdO0oXmrrPkAA3fswgsAix/kjTMXr05WJo9GpTWr2QXDMFCr1eTAsVJK8Hc5
      5GpaK8A06kk097LO/kmCh3iS9uc4+M3NTRk/6Xne2Al848Ci5qhrWm6ncQ5gSow9utS4bFBn
      hZCHm3l+5vZJAFM5/gw6+f6cdMDpzse9rpPAtu0zn/4wDVgAHNetxWfCLjwWH7vdLvr9/kLo
      GBdeACzLQrValXEmaSV+HmhVIxcKBdRqNbEYPPDMJLFSzN/nV9/30Wq1hkztKBQKBVQqlZmF
      gNXaaYVuXpglbmF8NGqUZBRFUmikUmHfNXBYOJs3LqwAqLlg+sjUuGxzVNmcKi+ID0Gdz0/L
      wYIahSXtYTLGUKuSaSAjddZuLrVKvWhQIzuOg16vd2x/XHUjRykH1U9nQ84iqCND17Wwd14Q
      GLzGcZxK/mLQS8JbMt1mGAYMw5CgNcki7Ha78H3/SIqUeXZd11Gr1eC6rhTFgIFlUDUUhYA/
      S4M6XHeWWICfsVarHev3jgOyWnlfeM1ra2vCb5r2ug3DwPr6OoBD/lRaD8MoX38RgnDuBECd
      wRNFEWq1mmRe6IerMzf5Wk51o1ZXzWsS1MhsgucEZs/zYFmWUCaYNmXQyyINcNhgPg58DTvQ
      jgsK+iKaVOjOtdttCUbJu7EsC8+ePUO/38f6+vrYnD5Tz8lrtCxLUs200Pl8XizLtPfjpKnk
      cycA6mFzXVfMscrNUW9Iu90W1ycIAhloVa1W5QEYhiF8FD5sABIUl0ol2LYN3/cRBIEInO/7
      6HQ6otUYMPPhMZ03CnQLZm1mIW9p3lkg1koo9AcHB2I5dV2H7/uwLAtxHOPg4EC206g8JD4D
      BrbqpAZyrxi/cOhWqVQSt5HxGl0vFeqhVy3nLIJw7gRALWjxKw8mf07wRqkPg1MfyuWy+KQA
      ZNPL2tqa9AUwG0F/nw+CSy3og6sHsFgsSgAHDOoLDHTTDqrruuh2u1NrcdYuFln55T1rNpsI
      ggD1el0ablQtzdf6vo9ms4lKpSL3o9VqwbIsSTM3m80hyjJHuxP9fn8oNlCnXSe1/Ciezyyf
      89wJAA8kMBzoTroJydcx68PWRi6529/fF5NOhigLOOo18GGpM/05YaJUKqHdbgMYmHIejjTW
      Iwtt0/jSp7UWVdM0EfBKpSIa2XEc5PN5WJaFbrd7JInASRkUAtM00e/3hfymIi1wV90eKplF
      9lWfWwFQMS54VANcFqhYBGPuHzjqb6oaTnWJVGvB61ADXDbPqHEA0e12USwWj1SKj1MLmKbd
      Uf3Ms4JNJeoI+CRthNaHzf98Dmp2zLbtiZPaktfJmUuTxp2fpICoCuO5E4Akxh1+cnm4LQUY
      xBCsNo763WRGgl9pwjVNQ71eF19YBedpEvRjVYFTMU3rJDVxWsFLnW2kJgBmjQ3ieLBhhpYx
      6VKqX4GB8tjY2JCMWBzHaDQaCMNQUpiTrHPyOtXPkXZ96teTCsG5FwBgOCiiZqL24HRjpj6p
      3SfdODV+UB883RhmhAgW05IPO4oicVvSAmLLskYGwWSujsv00Ae3bVusVRRF4qocF7xHyb+3
      ubkJADg4ODjij3MkTBzHePbsGYDD+zvu8Kuv4f+r7mXaZx31frNahAshAMBR7UTzTc3EAVej
      KAjJzIL6Vf1/1gM4MrxSqUiPcL/fP8JZoeYfpZFVdmLy59M0pquzMfm3Z02Nsg7CbZbqvWHw
      m3aPWKVVA9ZpAtO01xznEKddC//+uPdR/+65qwSnHV6m2tSMDV8LHBKipr0pyX/zgeq6Lk3V
      6qFgX+va2hpqtRqq1erQg5hUNT3JlndWrDnTM5/PS5HqOGDqk+6h+rmLxSJc10Wr1ZLv86um
      aTg4OAAAWQQyK9Tnpiq0cdZk1HPjtav/peHcWYC0g6IWnfhhVd963EOha6Rqj1FQ6RNMoZK8
      pWod0zRRLBaFwDWOF8SsiXrwgEPNPg0Mw0C9Xp/ZDSALk8MA1ExTtVpFoVA44vqwNsIx8SeZ
      f6Tedx745GeZx26FtGd77gSAB5xleCKZpQAOO4jSwIXV01gHYHAQVLeAPHU+LJX6wLmUTOVN
      YjEahiFuDK9jFprzJAuX9nOS0EjzVg8aC21q6pl/Rx0/ftJqbFpAm3RJVdrKSf5WEufOBaJm
      p0syKoOiukWqCY3jWAo0cS5Cz+9Ayw13jCXBGaFJqOt9NG0wU4j0XXaKkYU6CXz/af3n42Ic
      VYG5dioW/nvUoC3ep42NjblfZ5rrcpx6z3Fx7ixArVZDv9+XaqLrujL+btobZds2njlP8LeN
      n6AXdnG1eANv1v4RtCg9GJ3Uv5o04cCAglGpVCQTM8k9YXzBgF0tMp0G0vxvFqIYVDPGCMNQ
      4g616j0rVCWWVERpln2eOHcCwGFTwCHjstFoSE6eZnlS+u13nTtoB00AwP3+B7he/Bx2ci8D
      OOo6TeOKpGVA1CA46VungVybpHu3SNCKsRjoeZ4wYUlHKJVK2NjYkGCeh35/f38uh5L3O22U
      Oe9hWsp01r+tKqxzJwDqYeRkB7of5NSobgmrk0dx9EaPurmcujYus5LGW+/3+zAMQ5q5pxlb
      MmsKcxKYrkwTLhLU1ECa2R9eM5UNeVfJ90hye5KfadJhVS043zuZ0ZmUEZoF5y4GSII5dnZ+
      qa2Ko3LCURThy5WvomrUoWsGrhVvYyf/UmqKFRhQAyYxNpNzbnjg9vf3paw/72lw04Ipzna7
      faRYx6r21taWsDr5c6ZW6Zbkcjl0u92R92JUfUX9b5RlU4VkVCw2KaU5LVRhOncWIA1MJVID
      qWV81ZdUNfgWXsC/3Pkr+LEHC0XEUQxNH64bqOj1etJEnzZSBTicJJF8SDTxHMk4a87/JGCG
      RyXvqT9jP3OlUpF8Pq2p53l49uyZVKaTrYlqzj6ZTk5TROrPk0XA5H1NK1DO+vnTvnfuLQDB
      EeGlUmmIg6Kaz0ePHuH+/fvSE2DpBVSMGvLGgC/EuTFprg41eqfTwf7+firtgUS7UQ+K/Pqz
      AA8zhTt5jbxuMl83NzclC0SukWEYaLfb0iGWHBOvCj6HUDFrp2bs1MOfrNfwPfk7/H/VgvDv
      jUqDj/r8add6ISwAkcvlpAqb5vc3m028/vrr+NGPfoRXX30VT58+xYsvvogPP/wQV69eRb/f
      x9OnT/HVr34VV65cSf0bFIRGo4FcLoe1tTXk83mZQz8O5MUXi8XUMX2LQBzH+PTTTwepXLiI
      3/mP6LUfQ3v5Tehf+Odot1qDOoRVkFZHpm5Jr+j1emg2m9L4wyA5SRPnQnEiqf2T1o9WSa2U
      s9OuWq1KipbNN2qMwL/D2GOSdWCdJZmkuFACwJtcqVRkHCJwaDqDIMB7772HYrGIZrOJV199
      Fffv34dhGMJ15/hyTRtMhkhWOJPVSY5MHNfCl/wdHpyTTISYFiyu5bQY+B//HrlnvwMAxA/+
      Nx7f+wMeWG9Ay+Xw0rUb2Ny5ImuFmPakxq3Vamg2mzInlXEB3U0KczKAT0tn8nUHBwcoFAoo
      FotDnX6WZWFvb0/Sz8mKuNoSO2pekPo9zmFNrfHMdFeXGBx+FcfxEXrB1772NQDA66+/Lt+7
      evXqkfegVqIZT3MZqEnYI0tKRfI1/Jr0bbvdrjTZLxLMKum9p8Duu4ffB1Dd+z/AS28gjiLs
      PnmEjRcui4tEwQYOtSwr4fzsQRCIhp5GkHko6faQRZr08/P5PLa2tuTfXEyiVqr5+jRLr1ob
      ngXWjVRcOAsAHGogdYBqMj0XRREePnyIS5cuodPpoFqtwnEcofwSHDqVNsGND8DzvCMLL5JB
      cLI+cJzpcSeFruvY2NiAr7vwc3kgPHQ3gtwhtcNQCm+6rqPf7w9pXnUvGl29SqUiCmLUwGDG
      FbQm7FvgM5lUt6Eb1el0hHekZpWSyQbXdeXQl8tliSv482S94cIJQFoBKyn59PXff/992LaN
      nZ0daJqGN998cygboXJgklkKVWNx2YMaZCVNMB+cYRgol8vSrL9oUItra1fgv/ZXiP/uP0GL
      I8RWDcFr/wbFfhm6YeDFazdFU5Lnw0NHJVAqlcRlUT8vM2RMLvC+eJ6HXq8nzTxcNkKXZFol
      wPEpQRAIVZvDBzg2kZaF/dKsC9GF432g8NGqXTgBIDRNw8bGBlqtlhSimP7rdruwbRuvvfYa
      3nnnHQDpbZEMprkgg9oq2RhOJF0eDuCiuec4FQ7NIl3ipKMN6Y9PQuEbfw33+l8gaj1GtPl5
      VKx1/Nlnh54HiEUxTdOk95dp0o2NjdTeBWpa7hJWMzqcrgcczmTi/08LNQ4wTVOYqaVSSQJy
      BsI88KVSSa7TcRzZ/cZnIjvJHMeJz9MO2OMiCAI8efIEhUJBeDmu66LRaEjDNzUSbyY1ofog
      2QxSKpWE3akWtsYFYrquY2trSzQei0lhGKJSqZy40T0IAuzv74ugpVkWfiZgcFjS/PZRc4a6
      3S5arZYwaEnVVusJTI1yFDnjI03Tpp6YPS3IlXIcB9VqNZVCoSIZiLOwmcvlLq4FIHRdR6lU
      GhqvzbK/6kemaXXeMF3XpaGd06LJnecY7zSfv9PpIJfLCaUYgGSpyuXy0KrWkyCOY/z+97+X
      ycvUen/605/w+uuvwzRNfPrppzLgKwxDbGxsoNvtYn19Hbu7u9jZ2cG7776LmzdvwnVdmKaJ
      ZrOJK1euYH19HfV6Xbrs6F6sr69LqpT/qfeiVCrJUjr2R5yEOEeB4pxRwzCEDDkOSUHnSMqV
      GI8ODC/IANIpx8nKpfo9pgS5KINazfd9Ody0BuwRYOaCgXSz2RRaNd2EeTI+e70e+v2+zDXy
      fR8vvPAC3nrrLWxvb6NWq0kFOwxDNJtNWJaFJ0+ewHVdvP3229je3sb9+/eRz+exvb2NUqmE
      breLcrksLgU/I3+uWtA0C7izs4NCoSAjFkmw40GeBnEcy9Q/NiLRUrH4qE6w4O8kwWtQqeoX
      3gWK4xjPnz8fSoONyk2rabpktoDpQebEqY0ILr1jgMXJZtS6pmkOzcKcJ4IgwNOnTyVQ5fWy
      sg0M3L56vS6fiZ8zCAL85Cc/wde//nVo2oAXZNu2uDLA4OA0Gg3U63XJvV++fFmEifet1WrJ
      AAJgkHzY2NhAHA8myHFShOpCqjHBqKQA3amkq8jXU6gmuZK8H6qbuBICsLu7K77rOFCzFO0n
      KO7egRZ6cDdfhb3+KiLFatRqNUl98n1pihmMmaaJzc3NI7yYRSAIgoUS7Q4ODoaWW1QqlSEB
      ISgoHApWLpextbUlLiOFgFkazv9h4xL7OjjhgrEIK7/qwGI1Fcq/TReW9980TdH4dDeTVmcl
      XKBk1mLUawDAinqoPPgxtGjgqxYf/S/ERgn9ynV5D7WkTqFiqhM4bIkkTiPdOQ6ffPIJ3n33
      XXz729/GJ598gsePH4u2f/DgAf78z/889UAT7GfI5/NC8eZYdv67WCxKvNNsNqFpGvb29hCG
      Ia5cuSK/s7e3B8/zUCwW0Wq1ZEsnp1FwsgZrDCy2qcvIk4cfGM4wAZAULF3NUfuTV0IA1Ari
      qAwJke9/KocfGFRM852HiMvX5PcZyDE2UDW8YRiSLlwWkB8VRRF+85vfIJ/P43Of+xziOMaD
      Bw/w6quvjhUAwzCwubmJWq0mhD42w2jaYEYSx6LEcSwBL/lOvu/LISSfiO/LxnoKTrvdFkvD
      BqEk+3acq0TQAtB1HfnZjnMjzyvK5XLqfEpCtRChWUOMwcEnQqsur+NX/k4y/3xaJLfjoN1u
      Y3t7Gx999BG+//3v48mTJ/jwww9x69Yt/OAHP5iYptze3pa0YT6fF3dLZXGqSsayLPR6PUka
      qEE/q+rkDzFTxMO+s7MjKWhSTJLafhTU5AZ/J60+wp9VKpWLHwMAkCBs0rg9TdOg53Ko7v0a
      1t7fAXGEoHoV7av/GH502GWWJggs1qyvr5+6y6M2tqeBLgwFVZ0srfJ6mMpkUZAuha7raLfb
      kjpWp0gQao82K7S0hJVKRfz+3d1dCb7VtUksVtJv5zVsbW0dqcLzugnJ2rkuwv/3LrS1OnD9
      OpBSm+Hraa1XQgCAAa+H+wDGaWhmf4ywDy0OERhVhJ9p+aRWUQUBGGg+1cQvE2zbHkq9djqd
      IZJfq9XC2toaNjY2Uvk8yc9PgWF6klVgdXJeEASS8VHZnkxJt1otuR6+jgLGjBmzRrquH5lG
      rbq1mqbB/8//Bd7P/xYwDBT/5q8R37iRei/U578SLhAA2cLC0SUMqjjWEBim8nZsDfl8Eb//
      3e/w2muvSeqMOWf1kNA9OI3R5bOCtQpyZ9QmE2rDUfQEtWAIDA/tKhQK6Ha7QyPl1SYY1b1M
      vg/nIan3k/EC2ai1Wg3tdhu1Wu2I5U1ST8Jnu4MLDgLEjQPgxtF6wJF+6JPe2PMCTdNkuNVb
      b72FF198EU+ePEGn08Hm5ibef/99fOlLX0Kj0UC1WsX+/j5eeeUVtNtt/PSnP8WtW7fw8ccf
      w7Zt3L59G48ePcKlS5eQz+dx+/ZtrK2tLZ3vDxzm0NnmyF0IqsZVffh2uy1BMw8l05RpAqLr
      OnZ3d1EoHDbU0NKwCJjW9kgBYaDKa2UNgnQFvi+FaRTnKY5jWP/in8GNI+S2tpF77cvwEzR2
      tbbDa1m+J7ZgUNPduXMHALCzs4Nut4udnR188MEH+OMf/4hnz57JMjzyW1qtFu7cuSNV3bff
      fht7e3t47733hghfywamA4HDDTnU1uqB5PhDz/PQbDalzkFKR7vdxv7+vrg2ZGaSNEhaiDqz
      qVqtDtFPmDBQDyC5UuxJZkBOi0tLpVKoVVDY8vk89GvXUP53/xbFf/0D6J8NSmDlnVBdsDiO
      VycGUMEhr/MCl+8tI/r9PprNprh540azNJtNrK2tDX2PNGYAshQwiUajITRp8pAIZlt6vd4R
      t6v1WTsmg2JSK3K53NBibJW6oc5+4vu/9957MsbxypUr8H1fAn2mQSmUTF1TAJbzqZ0h1LQm
      /01NNArzILTNG1EUwXEc2b01zSrVtGG8k7Y1apomdAcKFrk/rI5XKpVBL4AfwtA0xHEkgsHZ
      qbzvLK6xKqxy/FmD6fV64hKxwPWFL3wBP/7xj3Hv3j0Rrnq9jg8++AA//OEPARzSWdTnlQlA
      Ao8fP8YvfvELvPHGG9C0QbPH7u4uvvOd74z8HQZuywQyNuM4lhGHk65xFkFmbEX6A0EWLgA0
      Wl3c+TRAw4lQzmt445KBqg4pkqkBreM4h5SHGHh+9wm8novNmy9AKxmyRJtuna7rqFaruHv3
      Lr71rW9J/0K5XMbe3t6RwcRHmLuZCzQMz/Pw4Ycf4ubNm3jy5InEAuPSm6VSaakEgGlJUpF1
      XUer1ZLDMsoFarfbQ3uPkxjlAtXrdfR6vZHW4v1GhD81D6ux28Uc/vJGRdwyznDiiPZcLoeC
      VcDv/9sdND9+DgDI6Tm89q/eROmFmlwrq8WTrBt7L5IwTTOzAElEUYTbt2/j4cOHaLfbuH37
      9liaAHD2XJ8k1ECUgsmGILoXaYe8Uqng4OBA+h7YBzEJtm2jUqkMLdUeup4gMT8pjBFDGyK3
      qb66ruvo7bbk8ANAFEZ4/H/v4+a3vzzE7+l0OqjVatjd3YVt21IUbLfb2NrawrVr14bSr7w2
      y7IGi0Smv60XB2zhS0JdtH316lUZtqUimRKM41hSduoCjbMC15KqHW4EqQcclaIyI8mrpz/P
      Hl/SFDgmMTkVjvl6y7IkC5QUgBcrOp72IkSf3fIrFR2B7wHFw7+vaYdtjJ7nwWmM5e8AABAK
      SURBVNNGx1xRFGFra2toh/H29jbu3r2Le/fu4aWXXkK1WkWj0RABYKzAjfSsPaykAIzK2LBb
      Kpn/povIgVhp605ZaKJgRVEkI1pOEzysyZZHtWrKHgWOZmFqNDnZgX486dae5x2ZnKG+f6FQ
      kL3H6t/eKQH/8HIeu70QawUdL1b1VFeKvnupVIIGDfWXNtF6tD/4mZ7D5a+8gjgetKUy40Ta
      xePHj/HBBx/g6tWraLfb8pkAyNBf8o2G/uYqxgCjEMeDER7dblceIq2ApmloNpvodDp4+eWX
      U9ejksPOobj1el1GeZzWGBQAspVdBS1Ukr/T6/Vk3Lz6M1bLiTiOh3p+k6CwaNpgZxhTnrQY
      bMhRt+eMQ6vVgme72Lv7BH7fxfqNSzDXijL+UsiLn02tDoJAlBczPaxIs7CmUqqJlbQAo6Bq
      IC55pj8ZhiH29/dHbm4UctVn5vby5cvy/dOE53nSi5w8ZGze4TUZhpHqso2quI6jIR8cHEjh
      iRx+3gse+nw+PzbI5nsxo5QvmLjylWtDP2fBjBaEvQONRgO6ruP58+dCn+YeA9M0j7iD8pky
      CzAaatXy4OBA+m6r1ao0iPCgLwscxxloz88YltT65OnzcHLbC2nJaoGK3Vr8PdIp1H5munps
      R3QcB8ViEZubm+IOqhPgpo2PoihCo9HAgwcPAAAvv/wyfvnLX+LWrVvSVrq9vX3kQPN67t+/
      L33aHGZsmiZu3LiRKniZBRgDlS6wvr6OarWKfr8vJn7apu7ThOu6+PTTT+WAkFWpaZr0xLJh
      hXUO1SoAGJr0ABxaBLoXSXA4gKZpeP78ubg4hUJhZCfWJHQ6HXieh/fffx/b29vSvN9sNvHd
      7373yOv5N0qlEizLkipzpVIZyi4lkQnAlGDqrV6vo1qtYnd3N9VNCMNQZpJalpWaRlykW1Sp
      VHD58mXRfMxsqauX+v2++M61Wk0OqdoXYdv2UKCaluN3HEdmqKpC1G63ce3aNfk9cv+n/dy6
      ruPGjRvSMXbv3j3cunULjUYD169fH/u7ZOVy3D1rF2nJiJXlAs0DnOxWrValkKNpmjSFr62t
      SS6enJRcLifzdRaJOI6xv78v05e73a64H2EYCtuVm3WS605ZNOPsIs/zZNWTOgeJc0HZwsjP
      SR6P2lDDZppJ4M7icaDfn4ZWqyWFMdd1ZXhW2tTqjAt0ArCQwgkGalMIsx8cM6j2DT969AhX
      rlyZegn2LNA0DWtrazIBj1qR18UAmVkr1Z93HEdaSEk3oKtH+rIqwM1m80hNhZvlOVuU0zGm
      xcOHD6FpGl5++WX8+te/xvb2NrrdLjY3N7G3tydTvtOg67pwkNLSwcn7tJwc3nMCNmyUy2Wx
      BACGWJH9fl8EgAFoo9FAp9MRV2QRMAwD29vbeOGFF4aCT/rytVoNW1tb4qKRhEYtzkkPPPws
      VJHywENfr9fFzVIFne4WD+FxcOXKFanJ1Ot17O7u4g9/+MMQQzQJavRyuYxWq4VWqzXy3jLT
      tDKT4U4DZIyqY7857gOApCZZVHJdV2bkVKvViXSLWWCaJra3t6VKa5qmbLRRG9pJeVZHwQOH
      MzTVYFit9qrbWTjOhG4fBWaWJSAPHz7Exx9/jFxusJRva2sL29vbiKIIH330EV555ZUjLhC3
      75TLZZSKBfzuf/4Yzaef4Mbf+yb+7B98Uz5DGIa4d+8ecrkcLl26lMUA8wCpA0l3gGm49fV1
      iReYjSCZS9d1rK2tDR7GGXKK4jjG3t4eWq2WWCsKSlogH8cxms3mYPeA0saoDtBi4es4n4td
      YQBEKJNIy8CRQtFut/Ho3Tv47X//r4PXGgb+6d/8B9S3XhA3lRXwS5cuZRbgOFDJVCps25aB
      T+qBUZdvcIoxA2aOKWRqkdmKsxQCcmW49SUMw5GxSq/XE1qE8Go+syC0arPQQGg5Zvk90zQH
      a15Tfs6MEN0yABd7P8BpgRqLB8XzPNi2PVT9VH3wUYei3W7LnjJORTsLMGinezMqfUiXh7wi
      amTLsmSA7WmDQnjr738T/dYBms8e4fpXvo71S5dlxD3B1GgmAMfAuIfKLiWmDict1k4DB+xy
      wCypGYvMGBHMHDUaDSHxTXKNmWnJ5XKy2fG4GZ+TgsO3VOR0A1/8i38icYrKflUnW2QWYE5g
      ypMHlf7zcbegEFxoDUAmOIziIM0THOvIKQ+jKt3sAmOLIjDQqNyCc5q4e/cu9vf3ZTIHoV4H
      i3jq98iLygTghNA0Ddvb28LAZFZkFppEmuYkQ5U9tIsE+3uZoeJaITIp1QOkZpGI07BUSXBI
      16NHj/DOO+9I4a9Wq+FXv/oVvvGNb0h6lyMb9/f3sb6+ju9973uZAMwDlmVJjlzTNBEEcolG
      +dIqJrkNp+VW0I3jJLkoilAqlWQ2DzDIbjFwV+ftsz5wmi4Qq9GFQgGf//znYds2Pv74Y+i6
      ji9+8YtDK1Yty8LNmzfx8OFDbGxsZHWAeYGZC45NJw+FGjGKorEZnkkHplAozJQZmRWc46l2
      vXmeJ5aNqU4Akllh37G6i+00cP369SF+EC0wuUQcrqViZ2cHwGfFulO70gsOZkSY6uSENFZT
      2Zg9aljruPcd18i+CCQrqAzGfd+HbdtDw7ZYRCMpLgl11expQNMG49objQbu3LmDMAzx29/+
      duREucwCzAk87HQd1O8zIKaFUMcSTsKkBpJ5I63vl6NVOPqd+9FINiP9Ofl5GL/EcTzVXKJ5
      oV6v49mzZ+h2u/jZz34m20DTkFmAOYIsRaYwkzvJkt1Sywh1kbTaKMN+WrVphgU9ZlnUzxwE
      gfCdThNhGOLnP//5ECmOizfSkFEhFgBqvidPngztzSXYnzuNZt/c3DzVSROdTgfPnz8XASXJ
      jL4+awTsumKOvV6vo1KpSEDcaDQkbtjY2FhYXHCSMZeVSiVzgRYBBsVq8zb5NZ7nIQiCIwci
      mVIEDptYThMksKl+e6/Xk3EpHGUIQJijW1tbR+IUdcHdIgWYDf2zII7jzAVaFFTOPQ82i1rJ
      A6H246pIm2KwaDANSqjzOUmR5jYXLslIXidnJQE4k9Ewk0D6SqfTySzAImEYhnRXqTMwTdOE
      67pD2wvVmZXk0k8zlW0RKBaLcBwHnucdyeIwLmDbZ61Wk8o3wTZIAKeaEp0GHMEoa6DO+Hou
      NDhUi3uvOJ+fWlNtVeQowmq1emR+/2lDDWaBYQIf2yI5Oib5c+CQHcq+6GWCun8MyARgYaCL
      oO4PVkcT8nuu60rBbH19/cxHKxJq7MHrpVtHSrdt27h8+fIRCgQpFUlBWgYkKRyZACwIdAPU
      1KGq0dnyx55c+tnLArXRX9d1aZ5XD5DaWZb2+8uI5Hj05RLPCwRuT+ThUHPqHM6rdkwdZ2zI
      aYABPOf10yJwj5jjOKeeop0H1KYkIBOAhSFZ7KI7wFI9p7OxJ/e06Q6TQJYrV5QSaiBPusd5
      A0e7RFGUCcCikOxnVd2gKIpkYnEQBFhfX18q94fgcg0VLHpxCfZ5hGq1shhgAaBWZ/N1Uksy
      LmBAuawL9gDIUjkedg64PW+ujwrWZjRtRfcDLBoklDE7MrSTShkXQldiWcE2Sf6/+v3zDBb7
      dF3PBGDeYMM41walgb7/suXI03Be3ZxxYDoayILghUBtaidYCAMGGug8uxAXCZkFWADoN6tg
      HwA7w867G3FRkAnAAqDm/4HDoU0cIZJheZA9jTlD3U2lolQqLXXAu6rIBGDO4Nz8oXL7gjnx
      GWZHJgBzBotbaisgm+UzLB+ypzJHkCHp+76M4igWi6k7cTMsBzIBmDO4A4Auj+u6MuYww/Ih
      E4A5w3VdBEEwFPAuI89nGZGkKp8GMgGYM5gFIlQqcYbJSNtGuUhkAjBnmKYprYJpa1LPQsud
      F3CI2GkiE4A5gg+wUqnAtm0RBBUcjZIJwXIgs81zBjekcx4om92JrB6wXMgswJxBujP7Zrvd
      7tD60Flw0t/PMBqZBZgzOCSXK3j6/T4KhcKJaBAZcW5xyGaDLhDU2tkBXl5kFmCByA7+8iOL
      ATKsNDIByLDSyAQgw0ojE4AMK41MADKsNDIByLDSyNKgZwAyHtN6hzOcLjIBOCWwKEaCXKFQ
      yA7/EiATgFNCEASyUzdrkJk/4jhGGIbH7r3IBOAUEMextEVyMO6qQe2DWITlC8NQuvE4nDi5
      dISkQvV7mQCcArhVHYAsb14lhGGITqcjU6ZP0iUXRRE8z5OtlZzA57qu3GOCA8lM05Rp3UEQ
      yN/P5XKZACwS1PxqY8wqtUdyCQX7IoDDydmlUunY9yIMQ9i2LdY0bbdy8u9TMNTXdrvdweE3
      jIwNukjwoTebTQAD9+cki53PCzgbybZt8c3ToOu6LNs2DAO6rqcuB+fe4V6vN/e+iNVRR2cA
      PlyCPuhFigGiKBoa9ut5Hvr9/pHhwGkIw1CEg6lhdYYqJ+ype33njUwAFgA+tHK5PHQQZs1U
      LCN83xeXhHuDoyhCt9s90ft6nic+fq1Wg+/7C50Ucf6fxBJBzXSEYYggCNDr9eTnXDl61nAc
      B/l8Xq6FVonanGMd1SwKt1lSiPv9vmhv13URhuHcF370er2FDxXLBGAB8H1fNsWooC97mlOi
      KZS+7wMYuBoMCimQPMgUgDQ/m838TDMmwb3I84LqHi0SmQDMETxoPGxpB+U0m9u55zeZHuR1
      MEuT/H4a+JkuGjIBGIPj9vSywDPusJymAPT7/Qt7cOeFTABSwAnPDFgrlcpEIZC1m4YBwzBG
      HrzTMOu0Qtnhn4xMABJg4Yaa2vd98eVZeSwUCkcEwnEcaJom4xBHHb5FZTRU9yvN5cmQjgst
      AMkc9bTQdX3ooKo0Bn4tFouwLAtxHMvht20bjuPANE2ZC5T23osAh3BlOB4utAA4joMwDFEq
      lcT1UEcTpgkGMyPjNDXL+VEUwTCMIaoDBWIU5pkBUmOUbAfBbLhQAsADwa+e5yGKIrRaLXlN
      LpcTq0BOvlqYmjZXz20wZ42DgwMUi8WxQpdhNC6EAKikp0lBpuqWkBRVq9Uk4F1ksWoRy/Lo
      emWYDedSANRUIg/9rIFfFEXCIw/DEKZpLixTQ6pAuVyeCyc+2zVwcpw7NihZhtTkp5FWXARK
      pRIsy5qZGBfHMVqt1lSkswyjce4sAMeNn3ewSDVNjSGJTOvPD1lX9hnC9/2ZgtcgCNBsNi+E
      IjhrZAJwxrBt+whpbhwYR2RWYD44dy7QRQSLZ+P6BJjpYpdVhvkgswBLgm63K3WLNJCDnx3+
      +SKzAEsCtZuqVCrBdV3EcQzLspDP57NC14KQCcASQo0JRq1bzTAfZC5QhpVGJgAZVhqZAGRY
      aWQCkGGlkQlAhpVGJgAZVhqZAGRYaWQCkGGlkQlAhpVGJgAZVhqZAGRYaWQCkGGlkQlAhpVG
      JgAZVhqZAGRYaWQCkGGlkQlAhpVGJgAZVhqZAGRYaWQCkGGlkQlAhpWGcd72SEVRlI0EzDA3
      /H/BRmtVqGkSmgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Non vs Poto' width='183'>
      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
      XL58GYmJiSgtLQUA4zjNz6fcv38/vLy8YG9vD0dHR5w/fx46nQ7Hjh2DXC5v+0k8ndWZGHjN
      baq9kwRycnLohRdeIIlEQv3796eIiAiqrq4mosYTE15//XUiItLr9ZSQkEDOzs4EgIYOHUqJ
      iYlkMBiorKyMVq1aRXK5nAC0GIeI6Pr16xQZGWl8XI1G87vX3HzIaxN8yKtYeFnChMVxM2Fx
      3ExYHDcTFsfNhGXZ0xNg5mn+Ryk9PYVOS/vsDZPLvOdmwjLvuA0a3M3PwLebP0ZkgrL5RpRn
      JWDt6ghErIzEf6VeweOPZFQiweT2GlxK/AS7r+i6ZdrMPJh13PeO78Duq0PgH7EAE1tsPIod
      Jx2wbP3/IH7zR3ixIglJ5zWtjqNSJuOgdTAWT7Dq8jkz82HWcQ8PeA8fBE+GUz9pi21FZy/g
      mQXz4WYvBawcMe2NANRcyEOLvFVKpBxxwNLg8Wg5ChOZWcfdnqoHcjw7ukmucnc8Z1kB02PE
      VLiYfBgOQfPhymX3Ob303RIttNr+6N+v6XUSSEvvoxSAMwBkb0NENtDPayU2tlK2Wq1udeSa
      mpoumC/rDs1/dr00bhvY2NShTgPAGHgDDI7D4Pjo4pQViA8fi6wt67Dv6vMIGW8aeGsHSKnV
      atjZ2XXhvFlXav6z67XLkoEOlfj1huHxFZX/h8v6wTA9ulcGn+WLUZeaCKUKrI/ptXG7+k7G
      rUNpKKw2ALpSnEk5CrvJHujX/IaySQh9exgO78oC9923mPWyRJkQgW3Zjy9nZwPAFKyID8ek
      4QH408xEbFq7EuWG/hg7+12s8GqRNgBA6jwHoc9uxJYMF0TPceZ3TfoIPlmhCT5Z4TH+8ztj
      ZozjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmw
      OG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvj
      ZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4m
      LI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCav3xm24g39s/RiRKyMQsXottmZc
      h8q4UYmEBGWTG2twKfET7L6i6/55sh7TS+M24Grq/+LKCyux4et4xH8ZjakV3yLpvKbVW6uU
      yThoHYzFE6y6eZ6sJ/XSuMtQVD0Jc6c5oZ8UgJUDJi1+DTYX89Aib5USKUccsDR4PKQ9MFPW
      c3pp3IMgbziLoxceoHGhoYOqgmBZexd3TW6nwsXkw3AImg9XLrvPsezpCTyZfvBatgw349Yj
      6psa1Ev7w3GMOwY+sETVo5tkb0NENtDPayU2tlK2Wq1udeSampqumzbrUs1/dr00bgCyCQj+
      j40INl5xCYmflWD4o4tTViA+fCyytqzDvqvPI2S8aeC2trYthlSr1bCzs+vCSbOu1Pxn10uX
      JS0ZruTj2jMuGGpyrQw+yxejLjURSlUbd2TC6rVxa+/dRonq4Yq79Azik27B758mtHzRKJuE
      0LeH4fCuLHDffUuvXZbY1P+M72K/wM2aeljbjcK0sPcRMLz120qd5yD02Y3YkuGC6DnO/K5J
      H2FBRNTTkzAXarW61bV4XzT/o5SenkKnpX32hsnlXrssYawjHDcTFsfNhMVxM2Fx3ExYHDcT
      FsfNhMVxM2Fx3ExYHDcTFsfNhMVxM2Fx3ExYHDcTFsfNhMVxM2Fx3ExYHDcTFsfNhMVxM2Fx
      3ExYHDcTFsfNhMVxM2Fx3ExYHDcT1v8DIWZMWEhQOIgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Photo Activity' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Rating pie' width='192'>
      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
      tVwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SIA' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAANiklEQVR4nO3da1Bc533H8d+57DkLLAhduAkk0BUkYTmSkYwvce3WdSa+pHYyTju+jGNn
      4knrSabTJDN52xd90Y47bd06aTN2Z5y0vozj1Epix/a4jiTrhmVdQYhFQkgCcVlguSws7OWc
      py/UaCSDELArnj3n+X1eMbDs/l/sd/fcjyaEECBSlC57ACKZGAApjQGQ0hgAKY0BkNIYACmN
      AZDSGAApjQGQ0hgAKY0BkNIYACmNAZDSGAApjQGQ0hgAKY0BkNIYACmNAZDSGAApjQGQ0hgA
      KY0BkNIYACmNAZDSGAApjQGQ0hgAKY0BkNIYACmNAZDSGAApjQGQ0hgAKY0BkNIYACmNAZDS
      GAApjQGQ0hgAKY0BkNIYACmNAZDSGAApjQGQ0kzZAxDF43EMDQ3Btm2UlpZO+3sikYDruggG
      g9A0LauvrQkhRFafkWieIpEImpqasHTpUvT09GDdunXo7e1FdXU1zp49i3g8jtraWhQXFyMQ
      CODIkSOor6/Hxo0bM35tLgKRdIZhoK6uDpcuXUI0GsXIyAhGR0fR2dmJSCSCqqoqJJNJOI6D
      oaEhRCIRuK6bldfmNwBllRACSSeJpJOE46aRclKYTMUxNWXAQiFC+RZMQ4ep67AtAwHTmPYc
      Y2NjaG5uRmNjIwxj+t+ziQHQgjmug6GJQbQPtKE/1oee0W70jfVgeDKKeDKOlJOEwOW3V3Jw
      M1KDWwEAhq4hYBoI5VlYsSQfq0qLULE8hKqSIqyvXIbiwiAMfXEWThgAzZkrXEQnhtDa34LT
      fS0IR1rRH+u78iafzdUBzMY0dFSVFGJzTQnq15Th1rUrECrIy8b4M2IANCshBMYTMXze1YR9
      53ajfSAMx03P+3nmGsAXPV28Bw9tyUeg7mFoqxthBLIbAzeD0oxc4eLMQBjvt+7CyZ7jSKSn
      Fn0GE2ls008i3T6KVPuH+EVJHfLW34+HtzyKklBZVjaJMgC6hitctPSewG9PvYuW3hNSZ6k0
      BlFqjAIAorqJz5wkUu0fYPfZj9GwuhGPbHkMNcvWZhQCAyAAlxd1Wvua8frR19A51CF7HADA
      drv9ys+HrRBS2uUV47SbxqHz+9B0fj9urdyOJxuexcqiygWFwAAUJ4TA4MQA3jr6Cxw4/6ns
      ca7Q4KLBCgMAHAAH7KJpjxEQOH7pCFp6T+Crm76GR7c+jrx5riMwAIU5roP3W3fh3eZfYjIV
      lz3ONcqNKFaZEQBAhxlEv2ld97FpN43fnPoV9nfuxdM7nsPO1XfM+duAAShqcDyCl/f9E8KR
      07JHmVGDFYauXd5AuX+GT/+ZROOD+Jc9/4Avr70Pz+z8DvKt/Bv+DwNQjBACR7o/w6sHf4rR
      qRHZ41yHwFbr8npITNNxzArN678/Pfd7dEY78MLdf4PqZTWzPpbHAikk7aTwxtHX8M+7/z6H
      3/zAMn0M6wI9AICjVgiJBewV7h65iL/94MfYc/Z/Z30cvwEUkUgn8LMD/4aDObSiez23Wh2w
      tDRcAIfswgU/z1R6Cj87+DIGJwbw2NZvQtemh8QAFDCeiOGlvS9K364/NwI77DYAQJdho9MM
      ZvZswsU7J95ELBHDUw3PwtSvfcszAJ8bjkfx4id/h85obmzbv5FCLY6NZhcAoMkOQWTpBJiP
      2t7DRGIc37njBVhXbVHiOoCPjSdiePH33nnzA8CmwEUE9RSmoOFwBos/M9nfuQf/2fTvSF91
      LBMD8KlEegr/uvcfc2av7lw1/P/iz0mrAGN69hdQ9nZ8greP/TdccfmEGgbgQ2knhVcO/gTN
      vcdljzIvedoUbrHOwQVwMMuf/lf77al38d6pdwFwHcB3hBB4+/gb2N+5V/Yo81YXuIhCfRIR
      3UQ4cOOdWAslIPDWsf9CWWEFvwH85lj353i/dZfsMRZkm3UGAHDQLoKT5as/fJErXLx66KcM
      wE+iE0N45dBP4AhH9ijzFkAat1jnkIKGz+357fldqFhijAH4RdpN4z8OvISRyWHZoyzIGrMX
      K/RRhAN5iBjXP/At2xiAT3zS/hGaPbGja2Y77NOABhy4iSu/M2EAPjAcj+KdE2/KHmPBdDjY
      Zp3BmGagxSpY5NcmT7u81ed1xBJjskdZsEpjECXGKA7bISRmOF7nZmIAHtc+0Ia9HZ/IHiMj
      260zgOaiaZEXfwAG4GlCiGv2anqTQIPdhouGjS7DXvRXZwAe1j7QhtP9p2SPkZEyfRirzAj2
      BYuyduDbfDAAD/t1yztzuipbLttutyOhA8fnedZXtjAAj7oQ7cTx7iOyx8jYVqsDJwMFGNdv
      7kVwr4cBeNQHp3/j+U//Yj2GjYEu7A/O7aT3m4EBeFAyncSRrs9kj5GxrYEODJkazmV41lcm
      GIAHHes+jPHkuOwxMrbDbluUA99mwwA8RgiBT8/tlj1GxvK1Kay1uvC5pJXfP2AAHhNPTuBk
      j7dOdJnJpsAFdFomojfhrK/5YAAe09rfgrSbkj1Gxnbap7EvWARIXPwBGIDntPa1yB4hYxZS
      qAxeRFuWb3axEAzAQ4QQaOv3fgB1gQtoC+pXLncuk/wJaM7GkzFcHL4ge4yM3WJ3zHi5cxkY
      gIecGzzr+Z1fOlwU5XchYgRkjwKAAXhKX6xX9ggZW2P2IJwvpBz4NhMG4CG9o5dkj5CxTcEz
      OL7IZ33NhgF4hBDCB98AAgj1Luhy5zdL7kxCsxIQ6I/1yR4jIxXGEDoKcmsfBgPwCFe4iE2N
      yh4jI0V5Peia5V5fMjAAjxBCYErCzaqzaSCYzJmV3z9gAB6RdtOePvdXg0BxwUXZY0zDADxi
      KjUpe4SM2NYYBoJJ2WNMw6tDe0TSScgeISNuQT+QW0s/APgN4BmWhEuGZJWRvvFjJGAAHlGQ
      QzuP/IQBeISuGQjkyPEzfsIAPELTAFviyeN+xQA8QtN0LAkWyx7DdxiAR+iajrLCctlj+A4D
      8JDyopWyR/AdBuAhK4sqZY/gOwzAQ6qKV8sewXcYgIdUL6uBbXp8h1iOYQAeYhk21i3fIHsM
      X2EAHqJpGjaV18sew1cYgMdsKmMA2cQAPGZjaR3yeVxQ1jAAjzF1E7dX3yl7DN9gAB7UWH2X
      7BF8gwF40ObyW7CioET2GL7AADzI0A3cueYe2WP4AgPwqK/UPcTzA7KAAXjU0vxluHvNvbLH
      8DwG4GEPbXkUpuRbDHkdA/CwlUsqcTu3CGWEAXjcN279C9hev2KERAzA48qLKvBI/ddlj+FZ
      DMAHHtz8NVTwZJkFYQA+EAzk4YnbnoGWYxee9QIG4BPbq3bgjzc8IHsMz2EAPqFpGp7Y/gxq
      lq2VPYqnMAAfybPy8d27vo+gKf8G1F5QuWQVA/Cb1Utr8Oztz0PPgZtQ57JgIA9/dfdfMwA/
      unvtvfj61j9HTl6PPAdYhoXvffkHWLN8HQPwI03T8OjWx/FA7Vdlj5JzDM3At25/HtuqGgBw
      HcC3dE3HUzue42HTV9Gg4fFtT+Le9fdf+R2PpPIxUzfx/B0vQIOG/Z17ZI8jla7pePxLT+CR
      LY9d83tNCCEkzUSLxHEdvHn053ivdZfsUaQw9QC+3fhd/NH6P5n2NwagCCEEdjX/Em+feAPC
      w3ebnC/btPH9e350ZZn/ixiAYg527sMrh17GpMfvOjkXpaEyfO+eH2LdiutfTY8BKEYIgb6x
      Hry090VcGO6UPc5N01h9F77d+JcosEOzPo4BKCrlJPH6kdfwYdv7APzzFrDNIJ5qeBb3bfjT
      Oe0MZAAKE0Kgta8ZPz/8KrpGLsgeJ2NfqrwNT+94DuWFK+d8ZCwDIKScJD5q+x3+5+RbiKfi
      sseZt9JQOZ5s+BZuW7Vz3oeAMAACcPnbIBofwq9OvIkD5z9FIp37d6YvtIvwQN2DeHDznyEv
      sLADABkATTMcj+KjtvfwcfuHmEiOyx5nmrLCcnyl7mHcs+6+jC8UzADoukYnR7D77Mc4dH4/
      Lg6fh5C4smzqAWwoqcV9G+7Hzuo7YRlWVp6XAdANua6D7tEu7Du3B00XDmBgvH9RXtfUTVQV
      r8Jda+/FjlWNKAmVZv20TwZA85Jykugd60Vbfwta+1pwZjCM4Xg0K89t6iZKC8tRV7oZm8rq
      sbG0FsvzS6DrN++YTQZAGUk5SQxODCIS68Ol0S70jfWiP9aH0akRTKbiSDkppN00HNeBoRsI
      6AHYgSBsw8byghUoKyzHyiVVKCssR0VRJYrzlsLQjUWbnwHQjJqbm2FZFmpra6/8LpFIXPk0
      NgxjTp/Mjusg5aTguGkYugnLtHLqbDUeDk0zmpycxMDAAHp7e1FcXIxIJIKKigqcOnUK69ev
      RygUQn5+PsLhMGpqarBhw8zH2xi6saif6POVOylSTkkmk6ivr8fIyAiGh4cRDocRi8VQVVWF
      RCIB13XR3d2NcDiMiYkJ2eMuGBeBSGn8BiClMQBSGgMgpTEAUhoDIKUxAFIaAyClMQBSGgMg
      pTEAUhoDIKUxAFIaAyClMQBSGgMgpTEAUhoDIKUxAFIaAyClMQBSGgMgpTEAUhoDIKUxAFIa
      AyClMQBSGgMgpTEAUhoDIKUxAFIaAyClMQBSGgMgpTEAUhoDIKUxAFIaAyClMQBSGgMgpTEA
      UhoDIKUxAFIaAyCl/R/CqzyrqUVcnAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SIA Positve Cities' width='192'>
      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
      c+QTzjVty+azJ/4qjxbcUDI+yc+njn2G6bTrBxHyRfjo1CcpxiYAkOxhniF7wLZtbNtGliUM
      3cBGwu/3YVkWsixjGAaK4kOScGymYWBaNqrqd22mgWHaBPps21mTJMmxWaaJbpioqn/rvjKW
      ZaLrXpttWXR1HVVVB2x+VYVtm23R7er4/SpgO/ftdrv4/CpSn03vdlH8fiRwbXoXRfEjSV6b
      rPiQnW3hNoZhOluUJUlCkkDv6kiy4mz/liTQdR0kGZ+iDH2uW08dvdtF2rrHzuvJcp9t2PW2
      8iJJ0oCt9zy3352OZYPqv/M7GfbuLNNANy0CqtqzSZKns7Af784yTZBl5L68DHt3/fSn0/Xu
      3c8COXv/bYvnnn2Wi+/2Phu0fePy6jxvv32JpmY4tu9/50W++9pbnnRvvvoKL37vdY/t1s0b
      vHvlqsd2850f8CfPfw/L7kt3+Q2+8cIrtHXLsd2+donnX3iJatsteLM3r/LtF59jra47tvnb
      M3zvpW8wX9Uc2+riHN956VvMlmqOrbK2yIsvPs/MUtmxtaqrPPfCS1yfXXJsZqvMN55/has3
      brsPv1vjmy99n+s3bjoFD73JN557iXevXNsqrBIYGt969gXeee+q+1wtk2effZa3L7ufY6JT
      4U+f+w5XrvVdr1vnz557mctXr7s2o803n32Rd9+71nc9nW89/xLXb9zoe3c233ruea7fuO55
      1q+8+ByvvfmO9/lfv8qVazc8trd+8B2e/+5rHtt7b/45f/riq47NtgzW19dZXF71vuP33uSb
      L3ybVrf/3b3DCy++SKXllpm5mWu88uKzrNbcd9fV2rz79kXmV0qObW1pjldefJbZtU3HVisv
      c31mjlbHPbe9ucazz7+M8pWvfOUr7BOhUIBcYZxwMABAo1ZlYWmNQiFPKBzGv1XTpTNZUqkU
      kXDIOVf2BRgvFohGwo5NazfRbZlsOuWmC0SYKuaIRsKOU4qNRCyeJJ9N9dlkcoUxMskYcp/z
      Sio/Ri6dQJEkbNvCr/iJpbPk0yl8stSrXRSFRCpDLpPq5dm2QVJIplNkM2nUbV9oCVLpHPlc
      Bv+2TZZJpdIk43FCocB2ptFbG2QLE0TCwe0fTD6TIpXOEgyo7u+zLfLjk0S2zwXCoQD5sXFC
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='SIA Type of visit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SIA countries' width='192'>
      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
      FicyEND7rrTqZVa3dl9bxui28SUmuJgbd2Mzh7b+qOONhlC9XLgwx+5emcjA+4xGwlRKRdrd
      b/5sHKPF1y92zqYC1Is7rK1vU6uUqHa+/aTcxdapNA1Cfh/eE9iy+2Wer65jdl/v635bmrUK
      LcPBHMxB+g50mnV80TRR35ubkmVZJNNpPOo3G396xyT5mZqeQhsMYraahGIJfJ5v3skpqpeZ
      ieTZnANEx7I0DJW52RyewDGMAKqG0W4yOT2DrZx0n6GweGGWcPTV9vo3YW7h+A6XANA7LfYL
      FWZm515fUAj8gSAc7JTxTbce0ls1HF+cyOHRXI6FrfpQ9A72t1jUWC3u0rGV774kUvKOcWwe
      P3mM6osMZdC+Lzi23YsfKAo+77vbLKDdrLG+uc38xcsEfRo4Fnv7Bcx2FeLTzLwhDvAyeqdF
      uVo/myPAWWJ9a5urV66zsbX9fVdlJKqm4Tum+M2rcIwWS89Waek6HxwG0RS1t4PeWJKA3/f6
      G4zAg85uoS5HgPedcmGPeqtLIpV1lyGeR8TBxmGqJ9DPB/r2N6Na2mN5dUsqgOT9R9gm9+9/
      STLmRUtfZib5HeMhQtDVu9iWcTa9QJKzhaJ5uX71Eh3bTyr6zc2dUZTy++znS3IOIDkd5PeL
      lPdWCY3PM/ddRwBFITc7D7wnu0NLJK9FCLyhEBcvXkLzHq/RIk0gyamgWilj4hvKBToOpAJI
      TgXjmUxvPcBxJnchFUByGlAU6uUynmCIb5hF8UakAkjee4RtYKGwv72D8+bi3wgZB5C89xwe
      jdUprFMNznx3L9AA0gskef9xTPb39/H4EsyOHe/5ZXIEkJxr5BxAcq75/5TD2sT2HifNAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SIA type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 15' width='192'>
      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
    </thumbnail>
    <thumbnail height='79' name='Sheet 16' width='192'>
      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
      6s5mIuqwGAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Stat' width='192'>
      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
      RsYWgM2W5v8DEt194uEcUZIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='visit buy month' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
