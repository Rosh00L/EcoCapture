<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1211.0901                               -->
<workbook original-version='18.1' source-build='2024.3.2 (20243.24.1211.0901)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFiltersHamburgerUI />
    <CustomReferenceLineTooltips />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <ParameterDefaultValues />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Non_Photo_max_perDiff2018' datatype='real' datatype-customized='true' name='[Covid 19 Year (copy)]' param-domain-type='list' role='measure' source-field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Percent2018]' type='quantitative' value='22.800000000000001'>
        <calculation class='tableau' formula='22.800000000000001' />
      </column>
      <column caption='Non_Photo_min_perDiff2023' datatype='real' datatype-customized='true' name='[Non_Photo_max_perDiff2018 (copy)_1510957715805691906]' param-domain-type='list' role='measure' source-field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[PerDff]' type='quantitative' value='-22.0'>
        <calculation class='tableau' formula='-22.0' />
      </column>
      <column caption='Photo_max_perDiff2018' datatype='real' datatype-customized='true' name='[Non_Photo_max_perDiff2018 (copy)_1510957715806212099]' param-domain-type='list' role='measure' source-field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Percent2018]' type='quantitative' value='23.100000000000001'>
        <calculation class='tableau' formula='23.100000000000001' />
      </column>
      <column caption='Photo_min_perDiff2023' datatype='real' datatype-customized='true' name='[Non_Photo_min_perDiff2023 (copy)_1510957715806420996]' param-domain-type='list' role='measure' source-field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[PerDff]' type='quantitative' value='-21.600000000000001'>
        <calculation class='tableau' formula='-21.600000000000001' />
      </column>
      <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
        <calculation class='tableau' formula='2020.' />
      </column>
    </datasource>
    <datasource caption='v_countrydate+ (ecocapture)' inline='true' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.040164612je0re1ch3d4c10oumvj'>
            <connection class='mysql' dbname='ecocapture' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_frqcountry' table='[v_frqcountry]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_twocatsdiff' table='[v_twocatsdiff]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_twocatstats' table='[v_twocatstats]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photovisit_rating' table='[v_photovisit_rating]' type='table' />
        </relation>
        <cols>
          <map key='[City]' value='[v_photovisit_rating].[City]' />
          <map key='[CountryCount]' value='[v_frqcountry].[CountryCount]' />
          <map key='[InputID (v_photovisit_rating)]' value='[v_photovisit_rating].[InputID]' />
          <map key='[InputID]' value='[v_photographyvsnonall].[InputID]' />
          <map key='[PerDff]' value='[v_twocatsdiff].[PerDff]' />
          <map key='[Percent2018]' value='[v_twocatsdiff].[Percent2018]' />
          <map key='[Percent2023]' value='[v_twocatsdiff].[Percent2023]' />
          <map key='[Photography (v_frqcountry)]' value='[v_frqcountry].[Photography]' />
          <map key='[Photography (v_twocatsdiff)]' value='[v_twocatsdiff].[Photography]' />
          <map key='[Photography (v_twocatstats)]' value='[v_twocatstats].[Photography]' />
          <map key='[Photography]' value='[v_photographyvsnonall].[Photography]' />
          <map key='[TravelMax]' value='[v_twocatstats].[TravelMax]' />
          <map key='[TravelMean]' value='[v_twocatstats].[TravelMean]' />
          <map key='[TravelMin]' value='[v_twocatstats].[TravelMin]' />
          <map key='[Travel_Date]' value='[v_countrydate].[Travel_Date]' />
          <map key='[Travel_Month]' value='[v_countrydate].[Travel_Month]' />
          <map key='[Travel_Year (v_frqcountry)]' value='[v_frqcountry].[Travel_Year]' />
          <map key='[Travel_Year (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Travel_Year]' />
          <map key='[Travel_Year (v_photovisit_rating)]' value='[v_photovisit_rating].[Travel_Year]' />
          <map key='[Travel_Year (v_twocatsdiff)]' value='[v_twocatsdiff].[Travel_Year]' />
          <map key='[Travel_Year (v_twocatstats)]' value='[v_twocatstats].[Travel_Year]' />
          <map key='[Travel_Year]' value='[v_countrydate].[Travel_Year]' />
          <map key='[Travel_month (v_photovisit_rating)]' value='[v_photovisit_rating].[Travel_month]' />
          <map key='[Travel_month]' value='[v_photographyvsnonall].[Travel_month]' />
          <map key='[Traveller_Country (v_frqcountry)]' value='[v_frqcountry].[Traveller_Country]' />
          <map key='[Traveller_Country (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Traveller_Country]' />
          <map key='[Traveller_Country (v_photovisit_rating)]' value='[v_photovisit_rating].[Traveller_Country]' />
          <map key='[Traveller_Country]' value='[v_countrydate].[Traveller_Country]' />
          <map key='[Traveller_ID (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Traveller_ID]' />
          <map key='[Traveller_ID (v_photovisit_rating)]' value='[v_photovisit_rating].[Traveller_ID]' />
          <map key='[Traveller_ID]' value='[v_countrydate].[Traveller_ID]' />
          <map key='[_allcount]' value='[v_twocatsdiff].[_allcount]' />
          <map key='[activity]' value='[v_photovisit_rating].[activity]' />
          <map key='[inputID]' value='[v_countrydate].[inputID]' />
          <map key='[location_Type (v_photographyvsnonall)]' value='[v_photographyvsnonall].[location_Type]' />
          <map key='[location_Type]' value='[v_photovisit_rating].[location_Type]' />
          <map key='[month (v_photographyvsnonall)]' value='[v_photographyvsnonall].[month]' />
          <map key='[month (v_photovisit_rating)]' value='[v_photovisit_rating].[month]' />
          <map key='[month]' value='[v_countrydate].[month]' />
          <map key='[rating (v_photographyvsnonall)]' value='[v_photographyvsnonall].[rating]' />
          <map key='[rating]' value='[v_photovisit_rating].[rating]' />
          <map key='[sentiment_comments (v_frqcountry)]' value='[v_frqcountry].[sentiment_comments]' />
          <map key='[sentiment_comments (v_photographyvsnonall)]' value='[v_photographyvsnonall].[sentiment_comments]' />
          <map key='[sentiment_comments]' value='[v_photovisit_rating].[sentiment_comments]' />
          <map key='[tot2018]' value='[v_twocatsdiff].[tot2018]' />
          <map key='[tot2023]' value='[v_twocatsdiff].[tot2023]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>inputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[inputID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>inputID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Travel_Date]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Month</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photography]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Photography</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location_Type (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>location_Type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_comments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sentiment_comments (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>sentiment_comments</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photography (v_frqcountry)]</local-name>
            <parent-name>[v_frqcountry]</parent-name>
            <remote-alias>Photography</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_frqcountry_7CF9E0B5DBD94D7C8C079B931C72D837]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_comments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sentiment_comments (v_frqcountry)]</local-name>
            <parent-name>[v_frqcountry]</parent-name>
            <remote-alias>sentiment_comments</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_frqcountry_7CF9E0B5DBD94D7C8C079B931C72D837]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (v_frqcountry)]</local-name>
            <parent-name>[v_frqcountry]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_frqcountry_7CF9E0B5DBD94D7C8C079B931C72D837]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_frqcountry)]</local-name>
            <parent-name>[v_frqcountry]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_frqcountry_7CF9E0B5DBD94D7C8C079B931C72D837]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CountryCount]</local-name>
            <parent-name>[v_frqcountry]</parent-name>
            <remote-alias>CountryCount</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[v_frqcountry_7CF9E0B5DBD94D7C8C079B931C72D837]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photography (v_twocatsdiff)]</local-name>
            <parent-name>[v_twocatsdiff]</parent-name>
            <remote-alias>Photography</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_twocatsdiff_CD9B3BB2EBF344FD8F6124496659A450]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_twocatsdiff)]</local-name>
            <parent-name>[v_twocatsdiff]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_twocatsdiff_CD9B3BB2EBF344FD8F6124496659A450]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tot2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tot2018]</local-name>
            <parent-name>[v_twocatsdiff]</parent-name>
            <remote-alias>tot2018</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[v_twocatsdiff_CD9B3BB2EBF344FD8F6124496659A450]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tot2023</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tot2023]</local-name>
            <parent-name>[v_twocatsdiff]</parent-name>
            <remote-alias>tot2023</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[v_twocatsdiff_CD9B3BB2EBF344FD8F6124496659A450]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_allcount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[_allcount]</local-name>
            <parent-name>[v_twocatsdiff]</parent-name>
            <remote-alias>_allcount</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[v_twocatsdiff_CD9B3BB2EBF344FD8F6124496659A450]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent2018</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Percent2018]</local-name>
            <parent-name>[v_twocatsdiff]</parent-name>
            <remote-alias>Percent2018</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[v_twocatsdiff_CD9B3BB2EBF344FD8F6124496659A450]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent2023</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Percent2023]</local-name>
            <parent-name>[v_twocatsdiff]</parent-name>
            <remote-alias>Percent2023</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[v_twocatsdiff_CD9B3BB2EBF344FD8F6124496659A450]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PerDff</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PerDff]</local-name>
            <parent-name>[v_twocatsdiff]</parent-name>
            <remote-alias>PerDff</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[v_twocatsdiff_CD9B3BB2EBF344FD8F6124496659A450]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photography (v_twocatstats)]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>Photography</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_75CA33B722EC46A3B140AAD50ED57027]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_twocatstats)]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_75CA33B722EC46A3B140AAD50ED57027]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TravelMean</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TravelMean]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>TravelMean</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>9</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_75CA33B722EC46A3B140AAD50ED57027]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TravelMax</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TravelMax]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>TravelMax</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>9</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_75CA33B722EC46A3B140AAD50ED57027]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TravelMin</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TravelMin]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>TravelMin</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>9</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_75CA33B722EC46A3B140AAD50ED57027]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[activity]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>activity</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>18</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location_Type]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>location_Type</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_comments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sentiment_comments]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>sentiment_comments</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='perDiff2018' datatype='real' name='[Calculation_1510957715795554304]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='If [Per Dff] NOT NULL then #pDiff2018' />
      </column>
      <column caption='Pdiff2018' datatype='boolean' name='[Calculation_1510957715796783105]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Photography (v_twocatsdiff)]=&apos;No photography&apos;&#13;&#10;    then [Parameters].[Covid 19 Year (copy)]=[PerDff]&#13;&#10;END' />
      </column>
      <column caption='Z-scor' datatype='real' name='[Calculation_3191363324673548296]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([rating (v_photographyvsnonall)])-WINDOW_AVG(SUM([rating (v_photographyvsnonall)])))/WINDOW_STDEV(SUM([rating (v_photographyvsnonall)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country Count' datatype='integer' name='[CountryCount]' role='measure' type='quantitative' />
      <column caption='InputID (v photovisit rating)' datatype='integer' name='[InputID (v_photovisit_rating)]' role='dimension' type='ordinal' />
      <column caption='Input ID1' datatype='integer' name='[InputID]' role='dimension' type='ordinal' />
      <column caption='Per Dff' datatype='real' name='[PerDff]' role='measure' type='quantitative' />
      <column caption='Photography (v frqcountry)' datatype='string' name='[Photography (v_frqcountry)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Photography (v twocatsdiff)' datatype='string' name='[Photography (v_twocatsdiff)]' role='dimension' type='nominal' />
      <column caption='Photography (v twocatstats)' datatype='string' name='[Photography (v_twocatstats)]' role='dimension' type='nominal' />
      <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
          <alias key='&quot;photography&quot;' value='Photography Holiday' />
        </aliases>
      </column>
      <column datatype='real' name='[TravelMax]' role='measure' type='quantitative' />
      <column datatype='real' name='[TravelMean]' role='measure' type='quantitative' />
      <column datatype='real' name='[TravelMin]' role='measure' type='quantitative' />
      <column caption='Travel Date' datatype='string' name='[Travel_Date]' role='dimension' type='nominal' />
      <column caption='Travel Month' datatype='integer' name='[Travel_Month]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v frqcountry)' datatype='integer' name='[Travel_Year (v_frqcountry)]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photovisit rating)' datatype='integer' name='[Travel_Year (v_photovisit_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v twocatsdiff)' datatype='integer' name='[Travel_Year (v_twocatsdiff)]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v twocatstats)' datatype='integer' name='[Travel_Year (v_twocatstats)]' role='dimension' type='quantitative' />
      <column caption='Travel Year' datatype='integer' name='[Travel_Year]' role='dimension' type='quantitative' />
      <column caption='Travel month (v photovisit rating)' datatype='integer' name='[Travel_month (v_photovisit_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel month' datatype='integer' name='[Travel_month]' role='dimension' type='quantitative' />
      <column caption='Traveller Country (v frqcountry)' datatype='string' name='[Traveller_Country (v_frqcountry)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Traveller_Country (v_photographyvsnonall)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Traveller Country (v photovisit rating)' datatype='string' name='[Traveller_Country (v_photovisit_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller Country' datatype='string' name='[Traveller_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Afghanistan&quot;' value='&quot;Afghanistan&quot;' />
          <semantic-value key='&quot;Australia&quot;' value='&quot;Australia&quot;' />
          <semantic-value key='&quot;Austria&quot;' value='&quot;Austria&quot;' />
          <semantic-value key='&quot;Bahrain&quot;' value='&quot;Bahrain&quot;' />
          <semantic-value key='&quot;Bangladesh&quot;' value='&quot;Bangladesh&quot;' />
          <semantic-value key='&quot;Belarus&quot;' value='&quot;Belarus&quot;' />
          <semantic-value key='&quot;Belgium&quot;' value='&quot;Belgium&quot;' />
          <semantic-value key='&quot;Brazil&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Bulgaria&quot;' value='&quot;Bulgaria&quot;' />
          <semantic-value key='&quot;Cambodia&quot;' value='&quot;Cambodia&quot;' />
          <semantic-value key='&quot;Canada&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;China&quot;' value='&quot;China&quot;' />
          <semantic-value key='&quot;Croatia&quot;' value='&quot;Croatia&quot;' />
          <semantic-value key='&quot;Cyprus&quot;' value='&quot;Cyprus&quot;' />
          <semantic-value key='&quot;Czech Republic&quot;' value='&quot;Czechia&quot;' />
          <semantic-value key='&quot;Denmark&quot;' value='&quot;Denmark&quot;' />
          <semantic-value key='&quot;Egypt&quot;' value='&quot;Egypt&quot;' />
          <semantic-value key='&quot;Ethiopia&quot;' value='&quot;Ethiopia&quot;' />
          <semantic-value key='&quot;Finland&quot;' value='&quot;Finland&quot;' />
          <semantic-value key='&quot;France&quot;' value='&quot;France&quot;' />
          <semantic-value key='&quot;Germany&quot;' value='&quot;Germany&quot;' />
          <semantic-value key='&quot;Greece&quot;' value='&quot;Greece&quot;' />
          <semantic-value key='&quot;Hong Kong&quot;' value='&quot;Hong Kong&quot;' />
          <semantic-value key='&quot;Hungary&quot;' value='&quot;Hungary&quot;' />
          <semantic-value key='&quot;India&quot;' value='&quot;India&quot;' />
          <semantic-value key='&quot;Indonesia&quot;' value='&quot;Indonesia&quot;' />
          <semantic-value key='&quot;Ireland&quot;' value='&quot;Ireland&quot;' />
          <semantic-value key='&quot;Jordan&quot;' value='&quot;Jordan&quot;' />
          <semantic-value key='&quot;Kuwait&quot;' value='&quot;Kuwait&quot;' />
          <semantic-value key='&quot;Lebanon&quot;' value='&quot;Lebanon&quot;' />
          <semantic-value key='&quot;Malaysia&quot;' value='&quot;Malaysia&quot;' />
          <semantic-value key='&quot;Malta&quot;' value='&quot;Malta&quot;' />
          <semantic-value key='&quot;Qatar&quot;' value='&quot;Qatar&quot;' />
          <semantic-value key='&quot;Romania&quot;' value='&quot;Romania&quot;' />
          <semantic-value key='&quot;United States&quot;' value='&quot;USA&quot;' />
        </semantic-values>
      </column>
      <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID (v photovisit rating)' datatype='integer' name='[Traveller_ID (v_photovisit_rating)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID' datatype='integer' name='[Traveller_ID]' role='dimension' type='ordinal' />
      <column caption='v_countrydate' datatype='table' name='[__tableau_internal_object_id__].[v_countrydate_98771871190540D39E6CEF22D122B18C]' role='measure' type='quantitative' />
      <column caption='v_frqcountry' datatype='table' name='[__tableau_internal_object_id__].[v_frqcountry_7CF9E0B5DBD94D7C8C079B931C72D837]' role='measure' type='quantitative' />
      <column caption='v_photographyvsnonall' datatype='table' name='[__tableau_internal_object_id__].[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]' role='measure' type='quantitative' />
      <column caption='v_photovisit_rating' datatype='table' name='[__tableau_internal_object_id__].[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]' role='measure' type='quantitative' />
      <column caption='v_twocatsdiff' datatype='table' name='[__tableau_internal_object_id__].[v_twocatsdiff_CD9B3BB2EBF344FD8F6124496659A450]' role='measure' type='quantitative' />
      <column caption='v_twocatstats' datatype='table' name='[__tableau_internal_object_id__].[v_twocatstats_75CA33B722EC46A3B140AAD50ED57027]' role='measure' type='quantitative' />
      <column caption='_Allcount' datatype='integer' name='[_allcount]' role='measure' type='quantitative' />
      <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
      <column caption='Input ID' datatype='integer' name='[inputID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[location_Type (v_photographyvsnonall)]' role='dimension' type='nominal' />
      <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
      <column caption='Month (V Photographyvsnonall)' datatype='string' name='[month (v_photographyvsnonall)]' role='dimension' type='nominal' />
      <column caption='Month (V Photovisit Rating)' datatype='string' name='[month (v_photovisit_rating)]' role='dimension' type='nominal' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Rating (V Photographyvsnonall)' datatype='integer' name='[rating (v_photographyvsnonall)]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Rating' datatype='integer' name='[rating]' role='dimension' type='ordinal' />
      <column datatype='string' name='[sentiment_comments (v_frqcountry)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
      <column caption='Tot2018' datatype='integer' name='[tot2018]' role='measure' type='quantitative' />
      <column caption='Tot2023' datatype='integer' name='[tot2023]' role='measure' type='quantitative' />
      <column-instance column='[TravelMax]' derivation='Avg' name='[avg:TravelMax:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMean]' derivation='Avg' name='[avg:TravelMean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMin]' derivation='Avg' name='[avg:TravelMin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CountryCount]' derivation='Count' name='[cnt:CountryCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Photography]' derivation='Count' name='[cnt:Photography:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMax]' derivation='Count' name='[cnt:TravelMax:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMean]' derivation='Count' name='[cnt:TravelMean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CountryCount]' derivation='CountD' name='[ctd:CountryCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cum:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Sum' name='[cum:sum:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[CountryCount]' derivation='None' name='[none:CountryCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
      <column-instance column='[TravelMax]' derivation='None' name='[none:TravelMax:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMean]' derivation='None' name='[none:TravelMean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMin]' derivation='None' name='[none:TravelMin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Traveller_Country (v_frqcountry)]' derivation='None' name='[none:Traveller_Country (v_frqcountry):nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country (v_photographyvsnonall)]' derivation='None' name='[none:Traveller_Country (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country]' derivation='None' name='[none:Traveller_Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
      <column-instance column='[location_Type (v_photographyvsnonall)]' derivation='None' name='[none:location_Type (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
      <column-instance column='[rating]' derivation='None' name='[none:rating:ok]' pivot='key' type='ordinal' />
      <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Avg' name='[pcdf:avg:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk:8]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Photography]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk:9]' pivot='key' type='quantitative'>
        <table-calc diff-options='Fixed' ordering-field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Photography]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>&quot;No photography&quot;</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Photography]' derivation='Count' name='[pcto:cnt:Photography:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[CountryCount]' derivation='Sum' name='[sum:CountryCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMax]' derivation='Sum' name='[sum:TravelMax:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMean]' derivation='Sum' name='[sum:TravelMean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TravelMin]' derivation='Sum' name='[sum:TravelMin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rating]' derivation='Sum' name='[sum:rating:ok]' pivot='key' type='ordinal' />
      <column-instance column='[TravelMean]' derivation='Sum' name='[win:sum:TravelMean:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:TravelMax:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:CountryCount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:TravelMax:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[ctd:CountryCount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:CountryCount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:TravelMax:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:CountryCount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:TravelMax:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cum:cnt:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cum:sum:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcdf:avg:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk:2]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk:4]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk:6]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk:8]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk:9]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:TravelMin:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:TravelMin:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Photography:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:TravelMin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:TravelMean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:TravelMean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:TravelMean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:TravelMean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[win:sum:TravelMean:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pays-Bas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Schweiz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Skye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cayman Island&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldvies&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mariana Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niederlande&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Near Prague&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reunion Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stewart Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini (Swaziland)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Beruwala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Polonnaruwa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katukitula&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nuwara Eliya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nilaveli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sigiriya&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Colombo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Galle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tissamaharama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ampara&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Deniyaya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kalutara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ahangama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Koslanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ella&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Weligatta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arugam Bay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peradeniya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalametiya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trincomalee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haputale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Unawatuna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kalkudah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Habarana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saliyapura&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Anuradhapura&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bentota&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pinnawala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kandy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mirissa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hikkaduwa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jaffna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Embilipitiya&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Pussellawa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ambalangoda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Negombo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:rating:ok]' type='palette'>
            <map to='#499894'>
              <bucket>12</bucket>
            </map>
            <map to='#499894'>
              <bucket>51</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>30</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>207</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6249</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>41</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1977</bucket>
            </map>
            <map to='#79706e'>
              <bucket>16</bucket>
            </map>
            <map to='#79706e'>
              <bucket>72</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>13</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>52</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>9</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>44</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>24</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>164</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>3</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>34</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>477</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>21</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>114</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>45</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>18</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>77</bucket>
            </map>
            <map to='#d37295'>
              <bucket>19</bucket>
            </map>
            <map to='#d37295'>
              <bucket>79</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>22</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>126</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>27</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>194</bucket>
            </map>
            <map to='#e15759'>
              <bucket>14</bucket>
            </map>
            <map to='#e15759'>
              <bucket>60</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>48</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>4</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>35</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>683</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>20</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>93</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>15</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>61</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>5</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>38</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>691</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location_Type (v_photographyvsnonall):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Religious Sites&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beaches&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Historic Sites&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waterfalls&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Museums&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bodies of Water&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;National Parks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zoological Gardens&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nature &amp; Wildlife Areas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Farms&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gardens&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country (v_frqcountry):nk]' palette='tableau-20' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:rating:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:activity:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Beach_Water_Sports&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Relaxing&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Historical_Sites&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;wildlife_nature&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romantic_holiday&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hiking_climbing&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Religious&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Biking_cycling&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Sightseeing&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:sentiment_comments:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Negative&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Positive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neutral&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country (v_photographyvsnonall):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stewart Island&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Skye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldvies&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cayman Island&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mariana Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Schweiz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Near Prague&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini (Swaziland)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Photography:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;No photography&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Photography&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;photography&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Photography (v_twocatsdiff)' />
        <field-sort-custom-order field='Travel_Year (v_twocatsdiff)' />
        <field-sort-custom-order field='tot2018' />
        <field-sort-custom-order field='tot2023' />
        <field-sort-custom-order field='_allcount' />
        <field-sort-custom-order field='Percent2018' />
        <field-sort-custom-order field='Percent2023' />
        <field-sort-custom-order field='PerDff' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Non_Photo_max_perDiff2018' datatype='real' datatype-customized='true' name='[Covid 19 Year (copy)]' param-domain-type='list' role='measure' source-field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Percent2018]' type='quantitative' value='22.800000000000001'>
          <calculation class='tableau' formula='22.800000000000001' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='v_countrydate' id='v_countrydate_98771871190540D39E6CEF22D122B18C'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
            </properties>
          </object>
          <object caption='v_frqcountry' id='v_frqcountry_7CF9E0B5DBD94D7C8C079B931C72D837'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_frqcountry' table='[v_frqcountry]' type='table' />
            </properties>
          </object>
          <object caption='v_photographyvsnonall' id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
            </properties>
          </object>
          <object caption='v_photovisit_rating' id='v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photovisit_rating' table='[v_photovisit_rating]' type='table' />
            </properties>
          </object>
          <object caption='v_twocatsdiff' id='v_twocatsdiff_CD9B3BB2EBF344FD8F6124496659A450'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_twocatsdiff' table='[v_twocatsdiff]' type='table' />
            </properties>
          </object>
          <object caption='v_twocatstats' id='v_twocatstats_75CA33B722EC46A3B140AAD50ED57027'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_twocatstats' table='[v_twocatstats]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Photography]' />
              <expression op='[Photography (v_frqcountry)]' />
            </expression>
            <first-end-point object-id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696' />
            <second-end-point object-id='v_frqcountry_7CF9E0B5DBD94D7C8C079B931C72D837' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID (v_photovisit_rating)]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Photography]' />
              <expression op='[Photography (v_twocatsdiff)]' />
            </expression>
            <first-end-point object-id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696' />
            <second-end-point object-id='v_twocatsdiff_CD9B3BB2EBF344FD8F6124496659A450' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Photography]' />
              <expression op='[Photography (v_twocatstats)]' />
            </expression>
            <first-end-point object-id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696' />
            <second-end-point object-id='v_twocatstats_75CA33B722EC46A3B140AAD50ED57027' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_2075C5A994FF4C969707987DA2B9EC36]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Frq city' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Traveller Country (v frqcountry)' />
        <param name='target' value='Frq city' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2_B85DF04D49BF485CA7C60155D3FFA2F9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Traveller Country (v frqcountry)' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='5* Cities'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Rating' datatype='integer' name='[rating]' role='dimension' type='ordinal' />
            <column-instance column='[rating]' derivation='Sum' name='[sum:rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]'>
            <groupfilter function='member' level='[none:rating:ok]' member='5' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{8AE6B6A8-396E-4D3F-B028-7BC3FEFD306B}' />
    </worksheet>
    <worksheet name='Frq city'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Country Count' datatype='integer' name='[CountryCount]' role='measure' type='quantitative' />
            <column caption='Travel Year (v frqcountry)' datatype='integer' name='[Travel_Year (v_frqcountry)]' role='dimension' type='quantitative' />
            <column caption='Traveller Country (v frqcountry)' datatype='string' name='[Traveller_Country (v_frqcountry)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Travel_Year (v_frqcountry)]' derivation='None' name='[none:Travel_Year (v_frqcountry):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_Country (v_frqcountry)]' derivation='None' name='[none:Traveller_Country (v_frqcountry):nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='None' name='[none:sentiment_comments (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[sentiment_comments (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column-instance column='[CountryCount]' derivation='Sum' name='[sum:CountryCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_frqcountry):qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([CountryCount])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Traveller_Country (v_frqcountry):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]'>
            <groupfilter function='member' level='[none:sentiment_comments (v_photographyvsnonall):nk]' member='&quot;Positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_frqcountry):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#ff00004b' />
            <format attr='text-orientation' id='refline0' value='0' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='vertical-align' id='refline0' value='top' />
          </style-rule>
          <style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]' id='legend-color' value='8' />
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]' id='legend-color' value='right' />
            <format attr='text-align' value='right' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:CountryCount:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_frqcountry):qk]</cols>
      </table>
      <simple-id uuid='{93E7BE5A-2D49-47E4-89D8-19A9C636E294}' />
    </worksheet>
    <worksheet name='Line Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Non_Photo_max_perDiff2018' datatype='real' datatype-customized='true' name='[Covid 19 Year (copy)]' param-domain-type='list' role='measure' source-field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Percent2018]' type='quantitative' value='22.800000000000001'>
              <calculation class='tableau' formula='22.800000000000001' />
            </column>
            <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
              <calculation class='tableau' formula='2020.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column datatype='real' name='[Percent2018]' role='measure' type='quantitative' />
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Traveller_Country (v_photographyvsnonall)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_photographyvsnonall)]' derivation='None' name='[none:Travel_Year (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_Country (v_photographyvsnonall)]' derivation='None' name='[none:Traveller_Country (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Brunei Darussalam&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cape Verde&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cayman Island&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Channel Islands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Curaçao&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Eswatini (Swaziland)&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Isle of Skye&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Maldvies&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mariana Islands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Palestinian Territories&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Papua New Guinea&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Republic of Ireland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Schweiz&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;South America&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Stewart Island&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Turkiye&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[Parameters].[Covid 19 Year (copy)]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='stroke-color' id='refline0' value='#ff00004b' />
            <format attr='vertical-align' id='refline0' value='top' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Covid 19' label-type='custom' probability='95' scope='per-table' tooltip='Covid 19' tooltip-type='custom' value-column='[Parameters].[Parameter 1]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='64'>
            <formatted-text>
              <run>&lt;</run>
              <run>[Parameters].[Covid 19 Year (copy)]</run>
              <run>&gt;%</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2017.9717425431711'>
                  <node-reference>
                    <axis>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2395.0114449213161'>
                  <node-reference>
                    <axis>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-213' y='-2' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='0' text-width='64'>
            <formatted-text>
              <run fontcolor='#787878'>&lt;</run>
              <run fontcolor='#787878'>[Parameters].[Non_Photo_max_perDiff2018 (copy)_1510957715805691906]</run>
              <run fontcolor='#787878'>&gt;%</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2022.8908450704225'>
                  <node-reference>
                    <axis>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='91.218884120171623'>
                  <node-reference>
                    <axis>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-74' y='-169' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='0' text-width='64'>
            <formatted-text>
              <run fontcolor='#787878'>&lt;</run>
              <run fontcolor='#787878'>[Parameters].[Non_Photo_max_perDiff2018 (copy)_1510957715806212099]</run>
              <run fontcolor='#787878'>&gt;%</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2017.9656690140846'>
                  <node-reference>
                    <axis>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='297.92131616595151'>
                  <node-reference>
                    <axis>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-3' y='-176' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='0' text-width='64'>
            <formatted-text>
              <run fontcolor='#787878'>&lt;</run>
              <run fontcolor='#787878'>[Parameters].[Non_Photo_min_perDiff2023 (copy)_1510957715806420996]</run>
              <run fontcolor='#787878'>&gt;%</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2023.0228873239437'>
                  <node-reference>
                    <axis>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='12.296137339055889'>
                  <node-reference>
                    <axis>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='18' y='-109' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{A58EDB08-AD47-409E-AD1E-DC0A82A0F9E9}' />
    </worksheet>
    <worksheet name='Line Chart (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Non_Photo_max_perDiff2018' datatype='real' datatype-customized='true' name='[Covid 19 Year (copy)]' param-domain-type='list' role='measure' source-field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Percent2018]' type='quantitative' value='22.800000000000001'>
              <calculation class='tableau' formula='22.800000000000001' />
            </column>
            <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
              <calculation class='tableau' formula='2020.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column datatype='real' name='[Percent2018]' role='measure' type='quantitative' />
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Traveller_Country (v_photographyvsnonall)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_photographyvsnonall)]' derivation='None' name='[none:Travel_Year (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_Country (v_photographyvsnonall)]' derivation='None' name='[none:Traveller_Country (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Brunei Darussalam&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cape Verde&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cayman Island&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Channel Islands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Curaçao&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Eswatini (Swaziland)&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Isle of Skye&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Maldvies&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mariana Islands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Palestinian Territories&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Papua New Guinea&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Republic of Ireland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Schweiz&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;South America&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Stewart Island&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Turkiye&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[Parameters].[Covid 19 Year (copy)]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='stroke-color' id='refline0' value='#ff00004b' />
            <format attr='vertical-align' id='refline0' value='top' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Covid 19' label-type='custom' probability='95' scope='per-table' tooltip='Covid 19' tooltip-type='custom' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</cols>
        <annotations>
          <annotation class='point' id='5' mark-position='1' pullback='0' text-width='64'>
            <formatted-text>
              <run fontcolor='#787878'>&lt;</run>
              <run fontcolor='#787878'>[Parameters].[Non_Photo_max_perDiff2018 (copy)_1510957715805691906]</run>
              <run fontcolor='#787878'>&gt;%</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2022.8908450704225'>
                  <node-reference>
                    <axis>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='91.218884120171623'>
                  <node-reference>
                    <axis>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='0' y='-201' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='0' text-width='64'>
            <formatted-text>
              <run fontcolor='#787878'>&lt;</run>
              <run fontcolor='#787878'>[Parameters].[Non_Photo_min_perDiff2023 (copy)_1510957715806420996]</run>
              <run fontcolor='#787878'>&gt;%</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2023.0228873239437'>
                  <node-reference>
                    <axis>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='12.296137339055889'>
                  <node-reference>
                    <axis>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-94' y='-138' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{52C191C5-CEBD-4A3E-BC24-6BACFF54CB0B}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000'>International Tourist  Arrivals by Countries</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column datatype='string' name='[Traveller_Country (v_photographyvsnonall)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_Country (v_photographyvsnonall)]' derivation='None' name='[none:Traveller_Country (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Photography:nk]' member='&quot;No photography&quot;' />
              <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' />
              <groupfilter function='member' level='[none:Photography:nk]' member='&quot;Photography&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([activity])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bermuda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bolivia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Brunei Darussalam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cape Verde&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cayman Island&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Channel Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Curaçao&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Eswatini (Swaziland)&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Isle of Skye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Liechtenstein&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malawi&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Maldvies&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mariana Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Monaco&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Palestinian Territories&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Republic of Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Samoa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Schweiz&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Seychelles&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Somalia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;South America&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Stewart Island&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Taiwan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Venezuela&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Vietnam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Yemen&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' direction='DESC' using='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]' />
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]' field-type='quantitative' max='32470957.744618062' min='-25253355.795198381' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]' field-type='quantitative' max='19428705.25777036' min='-19037322.781934395' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' field-type='quantitative' max='419' max-size='1' min='0' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' id='legend-color' value='right' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DB828CB9-B2E3-4F74-A932-614B90B54ACE}' />
    </worksheet>
    <worksheet name='Non vs Poto'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</cols>
      </table>
      <simple-id uuid='{6A50E07A-6C64-4E2D-A8D6-C7B847FDFC3F}' />
    </worksheet>
    <worksheet name='Photo Activity'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photovisit rating)' datatype='integer' name='[Traveller_ID (v_photovisit_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photovisit_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photovisit_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photovisit_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photovisit_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photovisit_rating):qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='65' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='-90' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' id='legend-color' value='center' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photovisit_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photovisit_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photovisit_rating):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</cols>
      </table>
      <simple-id uuid='{8ACD1209-7334-4E56-857C-B5BB9F8D0C52}' />
    </worksheet>
    <worksheet name='Rating pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[rating]' derivation='Count' name='[cnt:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Rating' datatype='integer' name='[rating]' role='dimension' type='ordinal' />
            <column-instance column='[rating]' derivation='Sum' name='[sum:rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]'>
            <groupfilter function='member' level='[none:rating:ok]' member='5' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <wedge-size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:rating:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7AB4EE68-1BAC-4E59-B2E4-2B1F6D160702}' />
    </worksheet>
    <worksheet name='SIA'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column-instance column='[sentiment_comments]' derivation='Count' name='[cnt:sentiment_comments:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
              <wedge-size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2E56FC8B-EDFB-414D-AB93-5A9226D14142}' />
    </worksheet>
    <worksheet name='SIA Positve Cities'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[sentiment_comments]' derivation='Count' name='[cnt:sentiment_comments:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]'>
            <groupfilter function='member' level='[none:sentiment_comments:nk]' member='&quot;Positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{AA5E5BF6-9CC4-48A1-A971-6D7CB28B6C6D}' />
    </worksheet>
    <worksheet name='SIA Type of visit'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column-instance column='[sentiment_comments]' derivation='Count' name='[cnt:sentiment_comments:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location_Type (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
            <column-instance column='[location_Type (v_photographyvsnonall)]' derivation='None' name='[none:location_Type (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[location_Type]' derivation='None' name='[none:location_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:sentiment_comments (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[sentiment_comments (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Beaches&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Bodies of Water&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Farms&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Gardens&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Historic Sites&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Museums&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;National Parks&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Nature &amp; Wildlife Areas&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Religious Sites&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Waterfalls&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Zoological Gardens&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]'>
            <groupfilter function='member' level='[none:sentiment_comments:nk]' member='&quot;Positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:sentiment_comments (v_photographyvsnonall):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</cols>
      </table>
      <simple-id uuid='{EF528593-29D6-41CC-B9C9-46FD7FABCCC7}' />
    </worksheet>
    <worksheet name='SIA countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column datatype='string' name='[Traveller_Country (v_photographyvsnonall)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Photography]' derivation='Count' name='[cnt:Photography:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='Count' name='[cnt:sentiment_comments (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_Country (v_photographyvsnonall)]' derivation='None' name='[none:Traveller_Country (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='None' name='[none:sentiment_comments (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column caption='Rating (V Photographyvsnonall)' datatype='integer' name='[rating (v_photographyvsnonall)]' role='measure' type='quantitative' />
            <column datatype='string' name='[sentiment_comments (v_photographyvsnonall)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]'>
            <groupfilter count='35' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([rating (v_photographyvsnonall)])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='%null%' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Curaçao&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;England&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Vietnam&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]'>
            <groupfilter function='member' level='[none:sentiment_comments (v_photographyvsnonall):nk]' member='&quot;Positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2eada</color>
                <color>#f3e3c3</color>
                <color>#f5dcab</color>
                <color>#f6d593</color>
                <color>#f8ce7c</color>
                <color>#f9c763</color>
                <color>#fac04b</color>
                <color>#fcb832</color>
                <color>#fdb119</color>
                <color>#ffaa00</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
              <lod column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]' />
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</cols>
      </table>
      <simple-id uuid='{4DE53B2F-6305-4D8B-BC96-67ABFB2EFBDE}' />
    </worksheet>
    <worksheet name='SIA type'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='Count' name='[cnt:sentiment_comments (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location_Type (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[location_Type (v_photographyvsnonall)]' derivation='None' name='[none:location_Type (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:sentiment_comments (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[sentiment_comments (v_photographyvsnonall)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]' />
              <wedge-size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:sentiment_comments (v_photographyvsnonall):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{38D1FCF9-5FD7-4A6E-83D8-A3BD7B8DFDAA}' />
    </worksheet>
    <worksheet name='Sheet 15'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Country Count' datatype='integer' name='[CountryCount]' role='measure' type='quantitative' />
            <column caption='Traveller Country (v frqcountry)' datatype='string' name='[Traveller_Country (v_frqcountry)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Traveller_Country (v_frqcountry)]' derivation='None' name='[none:Traveller_Country (v_frqcountry):nk]' pivot='key' type='nominal' />
            <column-instance column='[CountryCount]' derivation='Sum' name='[sum:CountryCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:CountryCount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:CountryCount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='180' />
                <format attr='maxwidth' value='180' />
                <format attr='minheight' value='622' />
                <format attr='maxheight' value='622' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:CountryCount:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]</cols>
      </table>
      <simple-id uuid='{AEF26B1E-1002-4FD2-BDF8-B3507923DA6F}' />
    </worksheet>
    <worksheet name='Sheet 16'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography (v twocatstats)' datatype='string' name='[Photography (v_twocatstats)]' role='dimension' type='nominal' />
            <column caption='Travel Year (v twocatstats)' datatype='integer' name='[Travel_Year (v_twocatstats)]' role='dimension' type='quantitative' />
            <column-instance column='[Photography (v_twocatstats)]' derivation='None' name='[none:Photography (v_twocatstats):nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_twocatstats)]' derivation='None' name='[none:Travel_Year (v_twocatstats):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='302' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_twocatstats):qk]</cols>
      </table>
      <simple-id uuid='{226A9F59-9FAB-49BA-82E6-2AE8BAD8A0C1}' />
    </worksheet>
    <worksheet name='Stat'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography (v twocatstats)' datatype='string' name='[Photography (v_twocatstats)]' role='dimension' type='nominal' />
            <column datatype='real' name='[TravelMean]' role='measure' type='quantitative' />
            <column caption='Travel Year (v twocatstats)' datatype='integer' name='[Travel_Year (v_twocatstats)]' role='dimension' type='quantitative' />
            <column-instance column='[TravelMean]' derivation='Count' name='[cnt:TravelMean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography (v_twocatstats)]' derivation='None' name='[none:Photography (v_twocatstats):nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_twocatstats)]' derivation='None' name='[none:Travel_Year (v_twocatstats):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:TravelMean:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_twocatstats):qk]</cols>
      </table>
      <simple-id uuid='{B4F9E845-590C-4317-AE30-26D0E4BFAC9D}' />
    </worksheet>
    <worksheet name='visit buy month'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column caption='Month (V Photographyvsnonall)' datatype='string' name='[month (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[month (v_photographyvsnonall)]' derivation='None' name='[none:month (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#f9a655' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photographyvsnonall):nk]</cols>
      </table>
      <simple-id uuid='{926ADA61-A842-4E77-9E74-95CFABBF94A5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='827' maxwidth='1369' minheight='827' minwidth='1369' preset-index='16' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
          <calculation class='tableau' formula='2020.' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98066' id='7' param='horz' type-v2='layout-flow' w='98832' x='584' y='967'>
            <zone h='98066' id='5' type-v2='layout-basic' w='86414' x='584' y='967'>
              <zone h='49031' id='48' name='Map' w='45800' x='584' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49035' id='56' name='Photo Activity' w='45800' x='584' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49033' id='79' name='Rating pie' w='40614' x='46384' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49033' id='91' name='Line Chart' w='40614' x='46384' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='170' h='98066' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='12418' x='86998' y='967'>
              <zone h='6287' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='12418' x='86998' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15235' id='49' name='Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' type-v2='size' w='12418' x='86998' y='7254'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='27327' id='50' name='Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' type-v2='color' w='12418' x='86998' y='22489'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24909' id='57' name='Photo Activity' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='12418' x='86998' y='49816'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5562' id='80' name='Rating pie' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' type-v2='size' w='12418' x='86998' y='74725'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7980' id='92' name='Line Chart' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type-v2='color' w='12418' x='86998' y='80287'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='98' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98066' id='97' param='vert' type-v2='layout-flow' w='98832' x='584' y='967'>
                <zone fixed-size='280' h='49031' id='48' is-fixed='true' name='Map' w='45800' x='584' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15235' id='49' name='Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' type-v2='size' w='12418' x='86998' y='7254'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='27327' id='50' name='Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' type-v2='color' w='12418' x='86998' y='22489'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49033' id='91' is-fixed='true' name='Line Chart' w='40614' x='46384' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7980' id='92' name='Line Chart' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type-v2='color' w='12418' x='86998' y='80287'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6287' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='12418' x='86998' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49035' id='56' is-fixed='true' name='Photo Activity' w='45800' x='584' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='24909' id='57' name='Photo Activity' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='12418' x='86998' y='49816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49033' id='79' is-fixed='true' name='Rating pie' w='40614' x='46384' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5562' id='80' name='Rating pie' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' type-v2='size' w='12418' x='86998' y='74725'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8CCA8090-640E-4B2E-82F7-02AE726BECC5}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='827' maxwidth='1369' minheight='827' minwidth='1369' preset-index='16' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98066' id='7' param='horz' type-v2='layout-flow' w='98832' x='584' y='967'>
            <zone h='98066' id='5' type-v2='layout-basic' w='87948' x='584' y='967'>
              <zone h='38751' id='16' name='SIA Type of visit' w='64792' x='23740' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='59315' id='55' name='SIA Positve Cities' w='61505' x='584' y='39718'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38751' id='56' name='SIA' w='23156' x='584' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='59315' id='59' is-scaled='1' param='C:/Github_proj/EcoCapture-Analytics/Analysis/Screenshot 2025-01-18 231438.jpg' type-v2='bitmap' w='26443' x='62089' y='39718'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='149' h='98066' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10884' x='88532' y='967'>
              <zone h='2660' id='17' name='SIA Type of visit' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10884' x='88532' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='2660' id='18' name='SIA Type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10884' x='88532' y='3627'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10399' id='57' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='10884' x='88532' y='6287'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5562' id='58' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' type-v2='size' w='10884' x='88532' y='16686'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='93' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98066' id='92' param='vert' type-v2='layout-flow' w='98832' x='584' y='967'>
                <zone fixed-size='280' h='38751' id='56' is-fixed='true' name='SIA' w='23156' x='584' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10399' id='57' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='10884' x='88532' y='6287'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5562' id='58' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' type-v2='size' w='10884' x='88532' y='16686'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38751' id='16' is-fixed='true' name='SIA Type of visit' w='64792' x='23740' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2660' id='17' name='SIA Type of visit' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10884' x='88532' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2660' id='18' name='SIA Type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10884' x='88532' y='3627'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59315' id='55' is-fixed='true' name='SIA Positve Cities' w='61505' x='584' y='39718'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59315' id='59' is-fixed='true' is-scaled='1' param='C:/Github_proj/EcoCapture-Analytics/Analysis/Screenshot 2025-01-18 231438.jpg' type-v2='bitmap' w='26443' x='62089' y='39718'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{148B74DC-060A-48C0-8A9E-8CA4F401E31E}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
          <calculation class='tableau' formula='2020.' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='9' param='horz' type-v2='layout-flow' w='98858' x='571' y='1000'>
            <zone h='98000' id='7' type-v2='layout-basic' w='87429' x='571' y='1000'>
              <zone h='50659' id='3' name='visit buy month' w='32500' x='55500' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50659' id='5' name='Non vs Poto' w='16500' x='571' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47341' id='32' name='SIA countries' w='37214' x='50786' y='51659'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47341' id='34' name='Frq city' w='50215' x='571' y='51659'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50659' id='38' name='Stat' w='38429' x='17071' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='11429' x='88000' y='1000'>
              <zone h='6500' id='12' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11429' x='88000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='33' name='SIA countries' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]' type-v2='color' w='11429' x='88000' y='7500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28000' id='35' name='Frq city' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]' type-v2='color' w='11429' x='88000' y='15625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8250' id='39' name='Stat' pane-specification-id='4' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]' type-v2='color' w='11429' x='88000' y='43625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='53' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='52' param='vert' type-v2='layout-flow' w='98858' x='571' y='1000'>
                <zone fixed-size='280' h='50659' id='5' is-fixed='true' name='Non vs Poto' w='16500' x='571' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50659' id='38' is-fixed='true' name='Stat' w='38429' x='17071' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='39' name='Stat' pane-specification-id='4' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]' type-v2='color' w='11429' x='88000' y='43625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50659' id='3' is-fixed='true' name='visit buy month' w='32500' x='55500' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='12' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11429' x='88000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47341' id='34' is-fixed='true' name='Frq city' w='50215' x='571' y='51659'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='28000' id='35' name='Frq city' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]' type-v2='color' w='11429' x='88000' y='15625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47341' id='32' is-fixed='true' name='SIA countries' w='37214' x='50786' y='51659'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='33' name='SIA countries' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]' type-v2='color' w='11429' x='88000' y='7500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1A80F195-FFE0-4D70-9B23-D0F132D84CF2}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Line Chart'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</field>
                    <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
                    <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>2379</value>
                  <value>&quot;No photography&quot;</value>
                  <value>2018</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Photo Activity'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Rating pie'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{46844394-C8DC-47C5-8AB6-F61F276BEB8A}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='SIA'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SIA Positve Cities'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SIA Type of visit'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{79E10B69-7BD1-4F8B-8BCB-3874D47C0A61}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Frq city'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Non vs Poto'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SIA countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Stat'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='visit buy month'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{91E32204-93F8-4CFF-AAD0-18D32233E187}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{352790A8-0E1E-4075-9D85-3F7C13DD202D}' />
    </window>
    <window class='worksheet' name='Line Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Covid 19 Year (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9C45F67-31E5-48DA-9189-8EFE85F6B4FF}' />
    </window>
    <window class='worksheet' maximized='true' name='Line Chart (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Covid 19 Year (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D1BA45C-6CE9-48AE-A598-7927073F6428}' />
    </window>
    <window class='worksheet' name='Photo Activity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{614D0002-C6CC-45DD-B3C3-55C172326677}' />
    </window>
    <window class='worksheet' name='Rating pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:InputID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F11A9256-BDCD-4620-9D17-A973F9712E45}' />
    </window>
    <window class='worksheet' name='Non vs Poto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B892FE8-53E8-4FB3-909E-CFD8384703C4}' />
    </window>
    <window class='worksheet' name='SIA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDDD4D80-DDFD-40AB-ABC9-B13F899C78B8}' />
    </window>
    <window class='worksheet' name='SIA Positve Cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B208DBA9-1D01-42F0-91B9-4290B0E2FB9D}' />
    </window>
    <window class='worksheet' name='visit buy month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_month:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photography_rating):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photovisit_rating):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5ED166A1-4843-4683-888B-4722DFCC388E}' />
    </window>
    <window class='worksheet' name='SIA Type of visit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{396FB502-1C76-4CC7-B7CB-7EF9A5E14013}' />
    </window>
    <window class='worksheet' name='Stat'>
      <cards>
        <edge name='left'>
          <strip size='108'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Calculation_3191363324667273216:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_twocatstats):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[usr:Calculation_3191363324668567554:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95C1AC77-0FF8-46EF-A265-09594A86B84D}' />
    </window>
    <window class='worksheet' name='5* Cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photovisit_rating):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90413D93-B792-4F33-BBC1-794A4C561A46}' />
    </window>
    <window class='worksheet' name='SIA countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C880C5F-A5AF-4AAF-85F2-6516170E3278}' />
    </window>
    <window class='worksheet' name='SIA type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C46270CD-548A-4EC4-8D4F-A646CCA311AA}' />
    </window>
    <window class='worksheet' name='Frq city'>
      <cards>
        <edge name='left'>
          <strip size='194'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='150'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_frqcountry):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C85E0752-E638-4646-8B76-A812B7EC5E38}' />
    </window>
    <window class='worksheet' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_frqcountry):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_frqcountry):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BB2767F-55E3-4617-AF12-45C1E0C45ED8}' />
    </window>
    <window class='worksheet' name='Sheet 16'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_frqcountry):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_frqcountry):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_twocatstats):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B9E3B7E-AC37-4F11-99FC-F4783A09C476}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='5* Cities' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      IanGdwvKANMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      WvmiJoOXLv0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Frq city' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Line Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Line Chart (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      hoMiH4+h4AcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Non vs Poto' width='183'>
      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
      XL58GYmJiSgtLQUA4zjNz6fcv38/vLy8YG9vD0dHR5w/fx46nQ7Hjh2DXC5v+0k8ndWZGHjN
      baq9kwRycnLohRdeIIlEQv3796eIiAiqrq4mosYTE15//XUiItLr9ZSQkEDOzs4EgIYOHUqJ
      iYlkMBiorKyMVq1aRXK5nAC0GIeI6Pr16xQZGWl8XI1G87vX3HzIaxN8yKtYeFnChMVxM2Fx
      3ExYHDcTFsfNhGXZ0xNg5mn+Ryk9PYVOS/vsDZPLvOdmwjLvuA0a3M3PwLebP0ZkgrL5RpRn
      JWDt6ghErIzEf6VeweOPZFQiweT2GlxK/AS7r+i6ZdrMPJh13PeO78Duq0PgH7EAE1tsPIod
      Jx2wbP3/IH7zR3ixIglJ5zWtjqNSJuOgdTAWT7Dq8jkz82HWcQ8PeA8fBE+GUz9pi21FZy/g
      mQXz4WYvBawcMe2NANRcyEOLvFVKpBxxwNLg8Wg5ChOZWcfdnqoHcjw7ukmucnc8Z1kB02PE
      VLiYfBgOQfPhymX3Ob303RIttNr+6N+v6XUSSEvvoxSAMwBkb0NENtDPayU2tlK2Wq1udeSa
      mpoumC/rDs1/dr00bhvY2NShTgPAGHgDDI7D4Pjo4pQViA8fi6wt67Dv6vMIGW8aeGsHSKnV
      atjZ2XXhvFlXav6z67XLkoEOlfj1huHxFZX/h8v6wTA9ulcGn+WLUZeaCKUKrI/ptXG7+k7G
      rUNpKKw2ALpSnEk5CrvJHujX/IaySQh9exgO78oC9923mPWyRJkQgW3Zjy9nZwPAFKyID8ek
      4QH408xEbFq7EuWG/hg7+12s8GqRNgBA6jwHoc9uxJYMF0TPceZ3TfoIPlmhCT5Z4TH+8ztj
      ZozjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmw
      OG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvj
      ZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4m
      LI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCav3xm24g39s/RiRKyMQsXottmZc
      h8q4UYmEBGWTG2twKfET7L6i6/55sh7TS+M24Grq/+LKCyux4et4xH8ZjakV3yLpvKbVW6uU
      yThoHYzFE6y6eZ6sJ/XSuMtQVD0Jc6c5oZ8UgJUDJi1+DTYX89Aib5USKUccsDR4PKQ9MFPW
      c3pp3IMgbziLoxceoHGhoYOqgmBZexd3TW6nwsXkw3AImg9XLrvPsezpCTyZfvBatgw349Yj
      6psa1Ev7w3GMOwY+sETVo5tkb0NENtDPayU2tlK2Wq1udeSampqumzbrUs1/dr00bgCyCQj+
      j40INl5xCYmflWD4o4tTViA+fCyytqzDvqvPI2S8aeC2trYthlSr1bCzs+vCSbOu1Pxn10uX
      JS0ZruTj2jMuGGpyrQw+yxejLjURSlUbd2TC6rVxa+/dRonq4Yq79Azik27B758mtHzRKJuE
      0LeH4fCuLHDffUuvXZbY1P+M72K/wM2aeljbjcK0sPcRMLz120qd5yD02Y3YkuGC6DnO/K5J
      H2FBRNTTkzAXarW61bV4XzT/o5SenkKnpX32hsnlXrssYawjHDcTFsfNhMVxM2Fx3ExYHDcT
      FsfNhMVxM2Fx3ExYHDcTFsfNhMVxM2Fx3ExYHDcTFsfNhMVxM2Fx3ExYHDcTFsfNhMVxM2Fx
      3ExYHDcTFsfNhMVxM2Fx3ExYHDcT1v8DIWZMWEhQOIgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Photo Activity' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rating pie' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SIA' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SIA Positve Cities' width='192'>
      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
      c+QTzjVty+azJ/4qjxbcUDI+yc+njn2G6bTrBxHyRfjo1CcpxiYAkOxhniF7wLZtbNtGliUM
      3cBGwu/3YVkWsixjGAaK4kOScGymYWBaNqrqd22mgWHaBPps21mTJMmxWaaJbpioqn/rvjKW
      ZaLrXpttWXR1HVVVB2x+VYVtm23R7er4/SpgO/ftdrv4/CpSn03vdlH8fiRwbXoXRfEjSV6b
      rPiQnW3hNoZhOluUJUlCkkDv6kiy4mz/liTQdR0kGZ+iDH2uW08dvdtF2rrHzuvJcp9t2PW2
      8iJJ0oCt9zy3352OZYPqv/M7GfbuLNNANy0CqtqzSZKns7Af784yTZBl5L68DHt3/fSn0/Xu
      3c8COXv/bYvnnn2Wi+/2Phu0fePy6jxvv32JpmY4tu9/50W++9pbnnRvvvoKL37vdY/t1s0b
      vHvlqsd2850f8CfPfw/L7kt3+Q2+8cIrtHXLsd2+donnX3iJatsteLM3r/LtF59jra47tvnb
      M3zvpW8wX9Uc2+riHN956VvMlmqOrbK2yIsvPs/MUtmxtaqrPPfCS1yfXXJsZqvMN55/has3
      brsPv1vjmy99n+s3bjoFD73JN557iXevXNsqrBIYGt969gXeee+q+1wtk2effZa3L7ufY6JT
      4U+f+w5XrvVdr1vnz557mctXr7s2o803n32Rd9+71nc9nW89/xLXb9zoe3c233ruea7fuO55
      1q+8+ByvvfmO9/lfv8qVazc8trd+8B2e/+5rHtt7b/45f/riq47NtgzW19dZXF71vuP33uSb
      L3ybVrf/3b3DCy++SKXllpm5mWu88uKzrNbcd9fV2rz79kXmV0qObW1pjldefJbZtU3HVisv
      c31mjlbHPbe9ucazz7+M8pWvfOUr7BOhUIBcYZxwMABAo1ZlYWmNQiFPKBzGv1XTpTNZUqkU
      kXDIOVf2BRgvFohGwo5NazfRbZlsOuWmC0SYKuaIRsKOU4qNRCyeJJ9N9dlkcoUxMskYcp/z
      Sio/Ri6dQJEkbNvCr/iJpbPk0yl8stSrXRSFRCpDLpPq5dm2QVJIplNkM2nUbV9oCVLpHPlc
      Bv+2TZZJpdIk43FCocB2ptFbG2QLE0TCwe0fTD6TIpXOEgyo7u+zLfLjk0S2zwXCoQD5sXFC
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='SIA Type of visit' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWB0lEQVR4nO3dW2yb533H8e/78kxRFHWmJEu2bFmW6vqQOE0yw023NFu7rB3QXexmveow
      YIdebAN2sWIDdlNgFxsG9C4Diu2mw7BiGAoUa4Jg3ZrUh9SOG9txfJIPkixTFiWez+/h2YUd
      2ZQYlK9EkRL5/wBGZOb9+31I82fyfd//+zyaUkohRAfSNE3TWz0IIVpJAiA6mgSghRKJRM3H
      bdtGKRt7w7fTZPwRFy5cIJEtNWN4HcHd6gF0sk+uXae3J4A3MkRm+SH90VEeJ9LMf3KVE8en
      qfiHySZW8LosfKFBjs1OYX5yj9xqjHzKTTIVxyJIl6uM3jXA1P6xVj+lPUcC0Ep2hUePy+jx
      JYpmhFTqYy7fX+GV6XF0s8C9ew/odldYKtpEeyvAFABdHpP/uXyXHm8ZNB+L9z/myKkvSwC2
      QJOzQK1TKVcwjRK6N4BRzKO73Zg2BDw6hqXweL0UCkUCAR8a4PX6qJQr5BIxEoaPUuYxBw4e
      QbcNbN1DKOhv9VPaUzRN0xoSANu20XU5nBB7i6ZpWt1fgQrZFOmiRV/Iw1q2QpfHBm+Y7qAX
      y7KwbXsnxyrEjqg7ADY62fQaq49SDO07yFoqjVJZwgcPouu6fAKIPanuAKw+jtHV3Y8yiywt
      PSTkd4PLh6ZpAOv/FWIvqfsYIJdJUTIh3OWjbCrcmo3m9uH3erAsC5fLtdNjFaKhGnYQLAEQ
      e5H0AomOJwEQHU0CIDpaQwOglOLBgwcYhsHFixfJ5/OYpsmFCxfI5XJcunSJ5eVlYrEY6XS6
      kbsWYksa/gmwtrbG2toaCwsL3Llzh0qlQk9PDz/96U/p6uriZz/7GRcuXOD69etIF4ZotYYH
      IJlMsrS0hMvlIpvNEo/HuXPnDtFolPn5eb70pS8xNjbG7du3yWQyjd69EI409DSoUop4PI7f
      78cwDLq7uzFNk0wmQyQSoVgsEolEsCyLfD5POByWC2iiZRp+HaBQyXN9+VrddZFAhMODM9vd
      vRBb4rAZLkmqYDEy1EcqnUG3KuDrpicUWN8mnlvhn/7v7+sewAv7XuKvXv8bZ6MWooEcNMO5
      yGcTrNpFlpNFuvxulMrSHZxc7wS1HHaEKqWwLMvZiIVoIAfNcI8IhPqIx2MkMgV8Az3g8qNp
      GpqmPekIdfh9XkOTLlLRUnUHYGB4hLIJY8dOcNgwsIwyuJ8F4NNfjmjSRSpaq+4AhLp7CD39
      2ePx4PF4dmhIQjSPfP8QHU0CIDqaBEB0NAmA6GgSANHRJACio0kAREeTAIiOJgEQHa3uK8Gl
      fJZs2abLC0VTw6eZ4O0iFPDt5PiE2FF1B6BimqzFV/EO97O6ksClKyDJoUMHUUph27bz+UEV
      MqeoaKm6vwJlUkn6BgZJJdboHxwCpVBsaGSTvjaxx9TfDBfqpmBUCIXDVCoVRoaHwBvc0A7t
      8JBCQ9qhRUvVHYBI/yCRnRyJEC0g//yKjiYBEB1NAiA6mgRAdDQJgOhoEgDR0SQAoqNJAERH
      kwCIjlZ/M1ypQNFQ+N1gKhe6MsDtJ+CT+YHE3lX/5LiFAg8frxFwg6FcuJSBcnk5/Fw3qOOJ
      pqUbVLRY3QEol4qMjY6RXHuM2wZN8wKsv+mVUo4DoNhc8+lU65VKBY/Hg6Zp648ZhlG1Kr1M
      qyi2q+4A6LpOMpVieKCPsvLitgrg60bXdZRSuFwux52dmqZVrS9sGAZvv/02r776KufOneON
      N97A5/Px1ltvcebMGUqlEslkErfbzfHjx4lGo472J8RGdb9jB6NjHNy/j65wL309XYT7Bgl3
      +Rs6GI/Hw+TkJG63G9u2WV5e5uLFixiGwYMHD1hYWGB0dBTbtvnJT34iX5/EttX9CdAM5XKZ
      R48e4fP5GBwcpLe3l/HxcQ4fPozf7+f69escOXKEyclJ7t69K1+BxLbtqgC4PW5ee/01AMYn
      xwGwsQlFnsxLfeLUCQC8bi+zx2YxbROPS85Cia3bVQG4uHCe7733D3Vv/+bnfpdvvvStHRyR
      aHdyIUx0NAmA6GhtFQDDMJibmyORSHD27Fls2yYej3P58mUsy+LOnTtcu3aNdDpNoVBo9XDF
      LrCrjgG2yzRNUqkUQ0NDrKyskM/nuXv3LktLS3i9Xu7fv0+5XObevXscOXKEmRlZo7jTtdUn
      gGma3L59m6WlJQBWVlYol8vYts3i4iKLi4u8/vrrdHV1cevWrRaPVuwGbfUJEAwG+frXv47H
      42FiYgKfz8f+/fsxDAO/379+4ez111/HMIwWj1bsBnUHwLIMbKWDbWApHR0bdA9ej+tXFzfJ
      o8xD5pP3695+amCaaHh0B0ckdru6A5DLxEnlfBQzS1Tw4tNNcAeYnjoIPG2Gw3k36PPNcA6r
      N9VfWvyAH370b3WXf+uVP2a4e8TpXkUbqTsAPb295ApFdF3DNhWeYBcou6oV2mlvjkJhWdaz
      3zutV9X1tu2wG3VDveg8dQcgHlslVzAZHByibHvwaxXwh6u6QV26s69Dmqbhdj8bguNuUn1j
      vbPeIF3Xq+pF56n7b39wZJzBnRyJEC3QVqdBhXBKAiA6mgRAdDQJgOhomwLw8ccf8+GHH7Zi
      LEI03aYAVCoVbt26xfnz5+WeW9H2NgWgq6uLnp4eEokE7733XivGJETTbLoOcOTIEY4cOdKK
      sQjRdDUPgkvZFLduXGc+lmj2eIRoqppXgiuFLHcWHzJJEEb6gCd9Ok/WBbaxbIWuAZqOq42W
      OY3H48zNzTE0NMS1a9f42te+RiaT4f333ycajbK4uIhSiunpaWZnZ/F6va0estimmgG4ee0K
      lqVTsZ41l6WSj0gX/JiFFYKRIdKrS+AJMTt9qGmD3WmDg4MsLy8zMDCw3mX6zjvvkMvlOHPm
      DL29vSwsLHDv3j3K5TIvv/xyi0cstqtmAKaPHiN5/S79/T3rj/X291MoFcnk8yQLjxjoDaPs
      Jx2gn3aDOu2sVEphmub67y2HZ51su7re6Vkr27ar6mOxGLdv36ZcLhMKhVhdXeUb3/gGCwsL
      ZLNZJicnCYVCZLNZSqVSVa3Ym2o3w9kGFUtVzbwWj62SzRnsPzhJtqgI6BXw91R3g7q21w3q
      9OuUvqkb1Gl9dTfo+Pg44+Pjm7abnp5e/3l0VG6gaSc1AxDo6aMvvIZtPrttcHBknMGn9470
      tOmS8T+49K9cWvyg7u3/9Myfc3hQzpjtZTUDYJbK3Lt9k3D/WLPH01LpUorH2Vjd21esyg6O
      RjRDze8MZrlAeGCY7lBjZ38WYrepGQClbFxePx737rnhXYidUDMA/nAvPkwMQ85yiPZW+0pw
      JknZ1h2f1RFir6kZAA3Q3W5cLlmAQrS3mgHw9fSSeHiffEm+Aon2VjMAxeQa41NTrK6sNXs8
      QjRVjesAFkU9xGhvCS3U1/wRCdFENQNw9Ze/pKe3i6AuARDtrUYAvPzWm1/FsGy8nmcL0CVX
      F0kXA/R32dycXyHkNsDXw+z0wSYOV4jGqtkKcf2Ds6wqF32RMU4cnQSgd2CAwlKBubv3KVRs
      BveNtF03qNOV7m3Lko7QPa5mAIZGhrl95RYHDjxbQSUei5POGpz4wivkMxmK+TSar726QZ2u
      O6y7XDK36B5X82/Poytc3i7crmdvqMGRifVu0O5wmO5wuCkDFGIn1QxAeHiM/ckK7va521GI
      mmq+xQupFJc/vEQsnm72eIRoqs/4N96mfzBKb6S7uaMRoslqBsA2Kuhef9UxgBDtqPY7PNBN
      j98lUyOKtlczAPlUGm/ATyFXbPZ4hGiqmgFYenCX2Moa3oDcEinaW80ATM/OEgwG8e2iNYCF
      2Am1b4kMhfDL3WCiA9S8EFbO5Vh6/Jiu8BD7ok86Qo1yEUO5wSxQMnW8mgneIKGAr6kDFqKR
      agbAFerBaxYYHHu2inqpnCGV8RDuejKJrEu3AReHDh1cXyTbVg7PGqnqBjanzWhq2/Vqe/W2
      88XBxe5S4ytQkUvnL9EzNMrKw2eTRPl8PirlEulUgv6hYVCg2uyW4TZ7OqIONT4B/Bw8MkX/
      cBTDevaWKOQN/AEdnydEpVwiOjyI5ulC0zQ0TUPXdXTN4YUzrbqD02k3prbteq26g9Rpva45
      7kAVu0uNAJT5xU9/hn/iACeOnSDSHQQg0jdIm04JKjpYzU+A3/7Gm/z84hU0Xc4EOfXzn/+c
      ZDLJV7/6VT755BOuXr3K7Ows8/PzFAoFpqameOmll/A8d7edaJ3ac4OWCugeN8vLMiuEUxMT
      E6yurmIYBlNTU7z44ov09vYSDoc5ePAgsViM8+fPt3qY4qna9wOMTPJa3ygeWQLIMV3XOXny
      JMViEcuymJmZ4aOPPiIajTI6OsqBAwfI5/OtHqZ4qmYALv7PfxMzdCbGj/DC5+Wmdyf27dvH
      vn37qh47depUi0YjfpXaSyR97ijJT6qXSBK/2t+9/dfcXb1T9/bf+71/pjcoU8+0Uu07upVJ
      xXR+WrHTWbaJZdc/S4TC2YU30Xi1l0iKDDIcXiZfLDd7PB3v/fffJxgMcurUKd5++238fj9K
      KYLBIPl8nn379lWtWSa25zOv4mg6VEqyBFCzhUIh4vE4AJZlUSgUUEpRqVQolUpcuXKFlZWV
      Fo+yfXzGGmF5Epk84wMy502zud1uIpEIiUSC/v5+vF4v+Xye6elpbNtmbm4Ov1/u02iUmu9w
      W4HHpaM9d0+waZSxlAvNrmAoF7pdAbefgE8u6DTSsWPH1n9+9dVXN/3/kZGRTY+JrasRgCI3
      5uK8dvoUv7y1Cjx5wQv5BKmcF6O4iqF0dGWCy8vh57pBnXZTbu4GdVi+7foN3ZxbGMB2ukE3
      7v87P/4LCkahrtpjIyf5w1f/ZMv7Fk/UCECAcNDk/Ic3OPbCS+uPhsJh0tkimsuNxwZ075OO
      UKWqfjmhqK5xHCA27tN5O3TV/p3ufeNz3kIAn69fLaxSqNR3kSxdSm3h9RIb1fwKNHP8FDMb
      HkvEU1QMi6GBPgzlwWUV0XzdVXODOu2M1DStaj5RXXfezfl8veO5PXV9W/Xahnqn/dSb9u9k
      3xueu9iauo9yB4bHGKh6JNTwwQjRbNLMLjqaBEB0NAmA6GgSANHRJACio0kAREeTAIiOJgEQ
      HU0CIDqa435no1LGUjo6Frg8eN1yOV7sXY4DcPfOLSp48ekmuINMTz1ZSFsp5fwWP8W2mtE2
      1jsu30IDXyP3v93nL81w2+c4ALquYZsKb7Br/Q30aSu0bTlrDVZUry6vnK70vmF1eqetyRtX
      t3e8UrxtV9U7fQfbtlVd78DGscOTO8jeeecdXnnlFXw+H2fPniUajbKwsEAkEsHv9zM8PMzE
      xMSW9tmOHAdgaHCQgu0hoBngDzd0pXjnK723eqX46nrH3aAbVpp32g26cZX6bDZLLpdjbW2N
      6elpRkZGmJqa4sGDB4RCIZaXl4nFYoyOjspdZU85DkBkICpzhO5S4XCY4eFhNE1jfn6epaUl
      PB4PwWCQQ4cOMTQ0xI0bN2RC3+fITb9txOVy8eUvf3n994cOHQKe3WbZ19fH/v37WzK23UoC
      0CauPvqIH370g7q3P3Pw1/nKzO/s3ID2CAlAm8iVM45mpZsdPrrpMaUUc3NzTExM4PP5iMfj
      BINBlpeXCYVChEIhNE0jGAw2cugtJQEQ6+bn57l37x7j4+MUCgV+9KMfMTMzw+rq6voJjpmZ
      Gaamptpm1kA5GhLrlFKUy2Vu3rzJtWvXKJVKpNNpAI4fP04gEOCDDz7AND97+sdi8cni6qZp
      ks1mUUpRKpXI5/NY1tZP++4U+QQQ6w4cOIBpmkSjUfx+P5///OdRSq2fOo1GoywvL286/fqp
      crnM97//fb797W8Ti8W4fPkyJ0+e5OzZs3g8Hnp7e3n55ZcJh8NNfmafTT4BBACJ/Bp3V++g
      RRSPSzHmU/eJFZZYLj5CiyjmU/dZzMxjBMvcXb1DupTe9Gd8+OGHGIZBOp1GKcWJEye4cuUK
      qVSK2dlZisUi7777bgue3WeTTwABwP/Ovct/Xvn3urf/o1/7M37j8G9WPXb69GlmZmawbZti
      sUgsFuPNN98kk8ng9XqZmJggFot9xp/YGhIA0RD5Sh7DqqAHnhwcD08MMTwxRM7Iogc0TAxw
      PXk8VUwS8oZwu1o/rabjACjbxrIVugZsXGZUdKx/+eAtzt1/r+7t//Yr3615KrbZttANepNA
      zxCZ1SXwhpidPrQT4xKiKRwHoFDIkyw8YqA3jLKfdIJ+2g3q9BSXUqrqlJrltBvUrq532g1q
      23ZVveNuUMuqPiXosBvU2lDvpHzja+f8uW+v3mr0a9cijgMwOTlJqmgT0A00X09Du0Fde64b
      1LWtblBXA7tBm91J62r0a9cijkfQHRmgW9pBxQ6Ym5tjeXmZ06dPc/XqVWKxGKdPn+bGjRtk
      s1kOHz7M2NhYQxcZb30EhXgqlUphGAZKKY4dO4ZlWdy+fZtSqbS+PFQ+n+fo0cYdPMspHLFr
      RCIRCoUC8Xichw8fMj09TalUYmVlhRdeeIHR0VFyuVxD9ymfAGLXmJqaYmpqquqxL37xi+s/
      b1yAvBEkAGJX+K+r/0E8V//ql9986VsEvdtvy5YAiF3h0uIvuL82V/f2v//CHxBk+wGQYwDR
      0SQAoqNJAERHkwCIjiYBEB3N8VmgbGKFmwsrhFwm+MLMTh/ciXEJ0RQOA2Bz5+59ChWbwX0j
      0g0q3aBV43G0/02vnbP6ja/dVjkMgM6LX3iFTCZDKZcGv3SDSjfos/E42v+m185Z/cbXbqu2
      9CeEw+FddWe/EFslB8Gio0kAREeTAIiOJgEQHU0CIDqaBEB0NAmA6GgSANHRJACio0kAREdz
      3Aqx/HCex6kiPq0MvjAzT1eKF2IvchwAn9/P2Fgv+UxyfZV46Qb99A9wVC7doHuvGxQy6TSG
      q0LIjXSDSjdo1Xgc7X+vdoPuPzS97Z0KsVvIQbDoaBIA0dFkZjjRNs6dO0ehUOCNN97g3Llz
      JBIJlFJMTExw8+ZNTp48yeHDh6uOd+QTQLQNn89HT08PAIcOHeLo0aMEg0Hy+TzBYJBbt25x
      48aNqhr5BBBtw+/3UywWSSQSVCoVxsfHWVpaoq+vjwMHDpBIJAgEAlU1EgDRNp5fOKOvrw+A
      M2fOrD82Ojq6qUYCINrCd378l5TNUl3b+t0Bvvu1fwS2EYDU2gqar5ueUOBXbyzEDnucjVE0
      inVtG/A8e89u+SA4kc6x+vjRVsuF2BW2HACzUsJSDq/9C7HLbPkr0MTEfnD7GjkWIZpOU07b
      +DawbRvLstB1nYpV4VF6qe7aoCfAUHcU27bRdZ18Je9onagef5jeYP96fbqYIllM1l3f39VP
      ty+8Xr+aj5Mr178KYbQ7it8TWK+PZR5RNst1149HxnHpbpRSaJrGYnIeS9XXlRn0BhkKDT/3
      2uWI5+J177vH30NvsG+9PlVMkiqm6q4f6Bog5Ot+9trlVshV8nXXR8Mj+N3+5167Jcpmpe76
      8cgELt21/totJB9g1/lW1jWNid4DuN1u7f8BIofZK6fEJM8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SIA countries' width='192'>
      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
      FicyEND7rrTqZVa3dl9bxui28SUmuJgbd2Mzh7b+qOONhlC9XLgwx+5emcjA+4xGwlRKRdrd
      b/5sHKPF1y92zqYC1Is7rK1vU6uUqHa+/aTcxdapNA1Cfh/eE9iy+2Wer65jdl/v635bmrUK
      LcPBHMxB+g50mnV80TRR35ubkmVZJNNpPOo3G396xyT5mZqeQhsMYraahGIJfJ5v3skpqpeZ
      ieTZnANEx7I0DJW52RyewDGMAKqG0W4yOT2DrZx0n6GweGGWcPTV9vo3YW7h+A6XANA7LfYL
      FWZm515fUAj8gSAc7JTxTbce0ls1HF+cyOHRXI6FrfpQ9A72t1jUWC3u0rGV774kUvKOcWwe
      P3mM6osMZdC+Lzi23YsfKAo+77vbLKDdrLG+uc38xcsEfRo4Fnv7Bcx2FeLTzLwhDvAyeqdF
      uVo/myPAWWJ9a5urV66zsbX9fVdlJKqm4Tum+M2rcIwWS89Waek6HxwG0RS1t4PeWJKA3/f6
      G4zAg85uoS5HgPedcmGPeqtLIpV1lyGeR8TBxmGqJ9DPB/r2N6Na2mN5dUsqgOT9R9gm9+9/
      STLmRUtfZib5HeMhQtDVu9iWcTa9QJKzhaJ5uX71Eh3bTyr6zc2dUZTy++znS3IOIDkd5PeL
      lPdWCY3PM/ddRwBFITc7D7wnu0NLJK9FCLyhEBcvXkLzHq/RIk0gyamgWilj4hvKBToOpAJI
      TgXjmUxvPcBxJnchFUByGlAU6uUynmCIb5hF8UakAkjee4RtYKGwv72D8+bi3wgZB5C89xwe
      jdUprFMNznx3L9AA0gskef9xTPb39/H4EsyOHe/5ZXIEkJxr5BxAcq75/5TD2sT2HifNAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SIA type' width='192'>
      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
      fYG8oxfMJ5EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 15' width='192'>
      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
    </thumbnail>
    <thumbnail height='79' name='Sheet 16' width='192'>
      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
      6s5mIuqwGAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Stat' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAdeElEQVR4nO2dWXQc15nff1XVezcajaUBAsTCnRRXiSIlUZLpRYvtiGPLnozX4zNOMs4k
      mTMvk5M4D/Oec3IyL8nYzjmZOTPnJE4mm63F8ibZlihbtERKpLiZK/Z96b27uruq7s0DSJkS
      ALIBFNHo7vt7IUhW//uri/uvustXX2lSSolC0aDo1Q5AoagmHjdEhBA4joOmaW7IIYRA19fu
      Tbd03NRSMa2vzu0BznJ9syIDOFaRmzdu0ta9hanhQTo2tTKTyNMcMig6XnZs7UVKiWEYaw4Y
      wLZtPJ61e9MtHTe1VEzrqyOEAFjWTBVZTDe8RJqiZOfGmUmkSObLdET8mJoPv0dNIRS1S0UW
      K5t5EqkM3T197AlE8PkN5lImsZBGUfjud4wKxX1Dc2sVyHEcNQRaRx03teo5JleGQApFvaIM
      oGholAEUDY0ygKKuOXVpjFd+ex0hlp7qKgMo6hYhJD8/fZOhyRR//9Nz2I5YdIwygKJuGZhM
      0hYN8q+eP0JrU5C//sE7lMr2h45RBlDULSffH+b4oX40TePzT+7m0I5O/sP//A3ZQumDY5QB
      FHWJWbIYmEiyd0scWMgF+uRDW3nu2C7+/X//NbOpAlDhTrAUDqMjI7R3djI9PUdXZyvzaZPm
      oI4pvMRbovfvTBSKVXD+5gwHtnXgMT58jT+8q4to2M9f/a+3+LMvHK1sJ9ixLZJz05S0ILKc
      JWcKIj6NAjpeBP19/SobdJ113NSqx5j+4z+c4mtP76erLQIszgadSuT4zz84XdkdwC7muDY0
      QXd7MzOZMvFYkLl0kVDQoCC86LquskHXWcdNrXqLaT5dwJHQ0xmDW9f3j5qppyPGv/v6k5UZ
      wB9p4fHHHgFgy6pCUijWj5PnRzi2rwdd0xB3GeC0NAXVJFhRXwghOXdjikce2FzR8coAirri
      +tg88eYQkWBlafrKAIq64o33h3nmyLaKj1cGUNQNZslicDLFtu6Wij+jDKCoG85cneTI7m68
      nspXI5UBFHXDm+eHefJA74o+owygqAumEzl0TaOjJbyizykDKOqCNy+M8Pj+3hVnIygDKGoe
      xxG8d22So3sqW/u/E2UARc1zbWye/s4YQf/KUycq+oRwbIaHhmnv7GRuLsGmeIzZZGGhMpzw
      0Nle+bKTQuE2v3h3kGePbl/VZyu2TFPYz+jIOG3tTdwYnqYt7GU6q+FHIlqbEULgVqFpIQS2
      bd/7wHXScVNLxeSujlm2mU7m2NIZXfL4233ydn2gj1KRASwzy82Rabo6WpmYnKO5KcJsukAk
      pLJBq6XjplYtx3T6/CgP7ezC5/Mu+f/3KoxVcTboo488DEBfJR9QKNYBKSWnLo7yL58/umoN
      NQlW1CxTiRyartHSFFi1hjKAomY5+f4ITz28bU1PIioDKGoSISRnr0/y4I7ONekoAyhqkktD
      M+zqacPvXduEWxlAUZP86r0hPvHQljXrKAMoao6cWWYmlWfLptiatZQBFDXH25fHOLavF11f
      exkeZQBFzfHGuWGeWGHe/3IoAyhqisn5LJGgj+aw3xU9ZQBFTfHauwN88vAW16oQVmQA4ViM
      TUxSKmS5fmOATDrJwPA4idkpJqbnXAlEobgXjhBcHprj0I5NrmlWtIiqaQZIQT6TIpPLINCJ
      +TTmTQc/JYRoVdmg66zjplatxHTuxjQ7ulvQkRV/hyvZoMIpMzUxTktLC4au48FhJmMRCS1U
      h1bZoOuv46ZWLcQkpeTk+RG+9Ml9K9J3JRvU8AY4cvSRir9UoXCbvGkxm8zTE3e3FL+aBCtq
      gjcvjPCJh7a6rqsMoNjwSCl56+Ioj+/vcV1bGUCx4RmZTtMaDdIUcmft/06UARQbntfPDXH8
      YP990VYGUGxoypbD5aE5Htrp3tr/nSgDKDY0529Oc2BbhyuJb0uhDKDYsEgp+eXZQVfy/pdD
      GUCxYcnkS5gl2/W1/ztRBlBsWN54f5hj+9xf+rwTZQDFhkRIyXvXJnniwP2tRFWZAaQkmUwt
      vDF+dJRS0WRqZp5CNkkinbuvASoak6HJFM3hAOHA0hXf3KLi4rjJdJpydo6UqeNMTaMLwVhe
      x4sk1hRS2aDrrOOm1kaM6c0Lozx1eMuatVzJBpVSkJidwWhrxSqkydkBhCMIBAxM6UHTNHRd
      X9Or7T+KW5mlbum4qaViujszyTwDE0m++ZkH17z8edsAyz1AU5EBdI+PQw8+iG4YbBYCw9AR
      QqJpINE+EHfrKR03tVRM66uzVq1C0eI7L5zmm585hGGs/YLqigE0TcPrvTUWu3WVd/GCoVAA
      YDuC7714hmce3sbWrrWXPKkEtQqk2BBIKXnhzStsbm/iyYPrV4NcGUCxITh1aYzRmQx/9Im9
      rg7H7oUygKLqDEwk+dnpm/zp5x52Zdy/EpQBFFUlmTX5ry+/x7/43BFC93nNfymUARRVo2w5
      fOeHp/nKU/voaotUJQZlAEVVEELy335+nqN7ul2t87NSlAEUVeHy8CyOEDxzZHWvN3ULZQDF
      upPMmvzgjd/xx585dN8edKkUZQDFulIq23znh6f5w48/sOa3u7hBRQaQQjA7t1ADdH5ujpKZ
      Y2xyhmxqntlE+r4GqKgfhJD83U/OcWxfD/u2dlQ7HGAFyXD5gkm0kOHmwCjxTa34hGCypOND
      0hZrUtmg66zjptZ6xfTjt2/gNTSOH+q75/e5FZM72aDCZnpiDLtcolzMY5XDpPMW4ZCu3hRf
      JR03tdYjpveuTXJhYJZ/+9XH8Xru3U/cism12qCPPnYMgB07dqw5KEVjMTGf5Qcnf8e3v/ZE
      RZ1/PVnSFqnZCU6degfTctY7HkWdkTfL/Kf/+zbfOnH4vlR2WytLGmDw+nVsWd3lKUXtI6Tk
      r394mj/8+F76XXij4/1gSQP0bOmjlC/gzpRW0aj8j1cvsLOnlSO7u6odyrIsaYBcrkBydpqS
      GgIpVsnr54ZIZk2ef3LPuqY3r5QlDVAqJLBtL7ZQ9wDFyrk2Os8v3xvkn3/u4arv9N6LRQaw
      igXKjoeyZhPxV3+nTlFbJDImf/Oj9/jzLz6yIXZ678USBsgxMZumM96CcGljS9EYWLbDd144
      wz878RDxWLja4VTEIos6dpnpqSk8/qZqxKOoYX753iAHt29iV09btUOpmEV3AK8/zI4dO+jv
      7d7QkxfFxsKyHV4/N8xnHtlWU/1msQGCEXo2taIbftQ6qKJS3r48zqHtnfi9G2un914sMoDh
      8VIuZrh49iIle2EZVDo2k1PTWMU8N24OkMukGB6bJDU/w9RsYt2DVmwshJD8+LfX+eyjtZcm
      s+Q0Pda6ie7eJF7PLX9oGpZtoRleAj6diZkkTV6NmZyOH4kQMZUNus46bmqtVef01Um2dccI
      BzwbJqbbrCob1C5bNLe147tVokI4FtMT49hmjlRB0NYcYDZTJBzUKUiVDVoNHTe11qIjhOSV
      U9f5iy8dw+PxbIiYPhzfKrJB5+cnuXjmKg8cOkR72IfhDXD0kUfXHIyi/rg0NENPPEprNFjt
      UFbFkrZobt3M0889RSy48TcyFNVDSslLv7nGF48/UO1QVs0iA5TNAroumZqaw1KpEIq7cGM8
      QSToo6OlNja9lmKRAeaGbnJhYAKPjloGVSyLIwTff/UCX3t6f7VDWROLxjgtPf08unkrsWiE
      2tnOUKw3Z69P0ROP1kzKw3IsngM4JX7y0ov86vVfU1Dp0IolEELy41PX+fyTu6sdyppZZIBg
      LM5jDx/AKppYztJrp4rG5srIHPFYqOav/rDMKlCkqYlgOIJ/nUtVKzY+Ui6s+594vPav/rDM
      PoDH38ThgyodWrGYgYkkhq7RE6+PbOElLvE2vz35Bm+9e37DP82jWF+klLzw66uceHxXTWV8
      3o0lDOChr6+LYCCIugEo7mR0JkPZstnZ01rtUFxjyUF+KORn8MZNrFt5FMKxGB2fwCrmuHZ9
      gGw6wc2hMRIzk4xPza5rwIrqIKXk5beu8bkndtfN1R+WywaNd7GpbQrLluAHTTfQNUjMJWlt
      CzE0nqAj4mO+KPFjIYRQ2aDrrOOmViU6M8k8yUyB3b2tdz12o7XTqrJBrZKJ7Ql88FC8sMtM
      jo/T2REnMZ6mJdrETLZAU9DAVNmgVdFxU6sSnZ+dHuAfHdt1z+M2WjutKhs0nUzjQVKwbPye
      hWzQI0ePAtC75pAUtUYyazI4leIbnz5U7VBcZ5EB0uODhHt3sycwqnKBFAC8cuo6zx7djqcO
      94UWnVGkPc7AhXcZmkkS8a//aysVG4tMvsSVkTke29tT7VDuC4vuAIY/wseOH69GLIoNyGvv
      DvDU4a11efUH9Y4wxV0oFC3OXp/i8QP1O/NTBlAsy+vnhji2r6cmShyuFmUAxZKUyja/vjDC
      xx/sr3Yo9xVlAMWSnDw/wuGdXYQDvmqHcl9RBlAswrId3jg3xLOPVPct7uuBMoBiEaevTLBv
      S5zoBnynl9soAyg+hCMEr50Z4Nmj9X/1hwpfk3obM5tiaGKGzrYW5jIFWkIGpuOlb3Pn/YpP
      sc6cuz5Nd3sTbc2haoeyLqzIAMVCjoJZYDbtp9WvkbIgQEllg1ZBx02t2zpSwstvXeVPnntw
      1bobrZ1ceVP8B+gGfq8XvyGZzpSIhgyK6k3xVdFxU+u2zoWBaeKxMD0dq3+l6UZrJ1feFH+b
      lngXLfGN+8pLxeqRcqHE+deePlDtUNYVNQlWADAwmSLg89ATj1Y7lHVFGUABwEt19rB7pSgD
      KBify1Is22zd1FLtUNYdZYAGR0rJD05e5XNP7m7IMjjKAA3Or84OEfIb7O1vr3YoVUEZoIGZ
      mMvyi3cH+fozBxpu7H8bZYAGpWw5/JcXz/CtPzhMwFe/+f73QhmgAZFS8g+/uMgTB3rZsmn1
      m171gDJAA/LetUnm0gWePrKt2qFUHWWABiOZNfk/r1/mT04cxlgmPaCRWNHgr1zIMjg+Q7yl
      iZlkntitXKAtvSo9ohawHcF3XzjDN549SDRc/7n+lbAiA8xPT1G2BfOZAm1Bg5TQCajaoFXR
      WY3Wi7+5xvbu2KL6nvXcTq5mg8ba4yRGJwl6dWbzZZqDBkVVG7QqOivVujY6z8XBGf7yG8cx
      PlLjp57bydVs0GBTjH17G3vVoBbJF8v87Stn+TdffXxR5290VGvUOVJK/uZHZ/ni8T20N8hT
      XitBGaCOkVLyxrlhAj6DR+u0tudaUQaoYybmsvzs9E2++dkHqx3KhkUZoE4pWw7ffeEMf/b8
      0boubbhWlAHqECkl33/1PB9/sJ+ejsZ6wmulKAPUIaevTJDMFnlGpTrcE2WAOmM+XeCHb17h
      W39wuGFTnFeCMkAdYTuC7714hj/+9CGaGqCsoRsoA9QJUkpe+vVVdve1s6dBn+5aDcoAdcLl
      oVmujM7x/JO7qx1KTbHi9bHJiQmi0RCzyQKxoIEpPHR1tN2P2BQVksmX+P5rF/iLLx3D63En
      H6tRWGFx3CQTk3OUnBgBKZnN2/goIkSLygZdZ53bWmXL4u9+fJYTj+0kFvatSrue28nVbFCz
      WKRczONYYWbyZSIhA1PVBq2Kzm2tX54dJhr2c2x/76pXfeq5nVzNBm2Nd3FM1QbdMAxNpTh1
      cZRvf/1JteS5StQkuAaRUjI5n+Xvf/o+//S5hxq6qsNaUS1XQ5QthwsD0/zi3UFsIfjKp/bT
      29Fc7bBqGmWADY6UkplUgdfPDnJxcJadPa18/ZkDbI5HXZu4NjLKABsUy3a4MDDDa2cGKNsO
      nzq8lc8/uUcNd1xGteYGQkrJXLrAr84O8f6NaXb1tvG1pw+wOd6kJrkrREqBzExiXXkFkRwE
      NNA0NP3DXV4ZYANgO4KLAzP8/PRNipbNU4e38vknduNXV/sVI60C9uCbWJdfRDO8GLtP4N31
      2YXK11IghXPn0coA1UJKSSJj8quzQ5y5OsGe/na+8tR+ejui6mq/QqQUiMQQ1sX/h5i+iLHl
      CQKf+kv0aPc99wE06dL2reM4aiOsAkpliysj8/z8zAB5s8ynDm/l0b2bV/XUVj230710pJRg
      F7GuvIJ99SdowRa8+76A0fcYmv77fujqRphidUgpGZxM8ZsLo1wenmFXbztf/tQ++tQS5qpw
      Js9jXXoBkbiJZ+czBJ/7K7Tg6sr1KAPcJz7o9BdHuTw0S19nM0/s7+XLn3wAn89b7fBqDmEm
      sX/3I+zrr6K3bsG7/x+jb1r7ew1WZIBSPsPQ+DQd7S3MZ0xaggu5QD1d8TUFUS/c2emvDM/S
      09HM4/t6+epT+/HcKkil1u4rRwoHZ/wM1uWXkJkJvHs/T/D574Iv7No8aUVzACFsJsbHKVoQ
      9WqkpYYfSU9PD47juBaUEGLZMVs1dO6mJYGhyRRv/26CKyNzdLWGObavh71b4h90+vWOqSo6
      UiLGz+BMvLe8luFD4y59RDdAWxi/O2YSMXIKrXM/nr3Po7fthFX0r9vde7m+uSIDJKZGGJ0r
      0BYNkswWaQoZlIWHXdu3NNQk+PaV/q1Lo1wdnqO7Pcqx/T3s7Y/j8969DWpxwnk3ZDGNdeXH
      2Nd/jt66DX3LcXSPb+mDnTILl4xltIQNt5YppSeMt/dhNG9wVXHdRq0CudTZSmWLwak0p69M
      cG10nu62CMf29bJ3y707/f2KqVrtJIWDmL2ysOyYHMKz89N4d38WLRDdcL87tQq0RtL5Er94
      d4DTV8bpiS9MZL/0yb0NWWxKlvPYN17DuvIKelMX3n1fQN+0f9Huai2h7gBLIKVkbDbDy29d
      YyaZ52MH+zi2dzOh4NorLdTaHUBKiUjcxLr8ImL6Mp4tT+DZcwI90lG1mFaCugOsANsRXByc
      4adv38DQNZ59ZAf7t8YxdL3hVm+kVcAe+g3W5ZfQvMGFTaZjf4623Pi+RlEGAApFi7cujXLy
      3DBbumJ8/ZmD9DZgSUEpJTI7iXXpBZzRdzD6HiXwiW+jRTfXbXpGwxpASsl8xuTVMwNcGJjm
      yO5u/vWXj9EcCVQ7tPXHKWOPnsL63ctgF/HseQ7fkX+y5hWYWqDhDCCE5OZEgp++fYNUrsgz
      R7bzxeN7GmJSK4UD5RwiM46YvYYzexWZmUCUMni6DuJ79E/RW7fV7dV+Ker/t36LsuVw/uY0
      P33nBpGgj888soNdvW0LabJ1hpQSrAIyP4szdx0xewWRHEaaCTRvGC3ahd6+C8/OZ9Bb+hHe
      KB5vY6Zn1L0BMoUSJ88Nc+rSGA/0t/OtE4fpbI1UOyzXkHYJaSYQ8wM4s1cQyUFkZgoMD1q4
      HaNtJ0b3Q3gP/BFauH3JJUvRYBP8O6mbZVAhJGXbIZExGZvNMDmfY3g6xXQix8cO9XP8YD+h
      wOqvcm4u7xmGvrDjKQVIB4RAOiWwikirAOUcspxHlvNgmUgrjyzlwTaRpRw4JaRdRhQSaEi0
      YGxhF7ZtB0bbDrRoN5qn8iXbWluaXQl1tQwqpcR2BDmzzFQix+jMQkefSeZJ54sYuk57c5DO
      1gg98Sj7t7bTv6llyZwcd+MSCx1a2AtX5MIcspC49WcSWZhHFtNIM4koZtCEvZDXontA10Ez
      0Aw/eANo3hCaLwz+yMLP3hBaqA091geeIJo/snCsx4/wRvAEG2+1yk3WZICZyTFM4aF/8ya3
      4gFASIlZsphO5pmYyzI+m2F8LksiayKEJBzw0tXWxOZ4lKN7uulsjdDSFED/yOTNtsoY0kba
      t29y8vepKMJeuPry4RwUHGvhOCTSLt861kGUC9ilNLIwjzATCx28mEaaKSjnbyVy6WjeIFqw
      dWG4EW5DC7ejt+9EC7agBZoXOq3fnbc1NvLQxS3WNAQaHRsDKdi8uQfbtrFtG13XP7jtGIaB
      4ziLfr7zmNtlFaWUaJqGEJLvvXyWvGnR0uQnHg3Q0xGlq62JeHMQr8eo+DvswZPol/833JmB
      eNskmgep6WiAvNV5QUNqnoWHpzUNoS1cHzTDi4OBDMTwRNoRvma0UBtGKAaBGHjD6IbxofMA
      Pvh54bzEh/5cTfssbivxgf7tv3/085V8x0KzaEt+x1LncbfvuPNz9zqP2yylfydraac7Weoc
      1mSAseEBisLDjq19VZ8D3E8dN7VUTOurc1/nAD396h1UitpG1QZVNDTKAIqGRhlA0dAoAyga
      GmUARUPj6k7wcu9hWilSSle03NJxU0vFtP46d1vpd9UArtVqubVhsVF03NRSMa2vzp16S/67
      W8lwd+4AbhQtFdP66rip5aYOLG8A1+YAmqZRMgvkC0XMfJay5ZDNpHGEQyqduettSAqHVCqF
      Y1tkc3kcu0zZdjDzOUqWs+znlqKQz2KWLLKZzEJOkWkihUOxWFqRjpSSdDKJIxzSmeyCRsmi
      ZObJF4or0rrdLoVcFtsRmKaJcCwSydRdquQsEdNS7WQ5CGFTLFkrislcop0cu8z8fAKxgqCE
      Y5NMZbDLJXKFIla5iC0khXyWYnkluUqSXDZN2bLJpNNIKTGLRQq5DHOJ5IrOzbZKpLM5ysUC
      xbJFuVRECEk6lcL5yMm5OgQqFHJMz6UwNImm2diOn0L2Kh6vTue2g3RGl36g2ioXmZueYnxK
      w6tBa0uEohbETMyh+/xs39pfeQy5LMnkMLYexO9NYguHvk0dTM4l2drfW/nJOCVS6QSDI+NE
      fDrmps2U8zmagl6m57Ps2bW98pgKOaZnE+i6juH1YpUttvVvZmLwGnrwCLFAZdehhXaaZnyK
      W+3URFELY5gzpO0we7Z1VxxTfol2ivkhWfbR0tpasU7RLDA1OspsJICwBJvCDoWmbUxducr2
      vfsqf6ONEOSyGdKjI0gjSDCTw3YcuuItTE1O0d7aUnFMZqHAxPg0Hp8OGIR0C3/rZkZuXKej
      bwc9Hb/XcnUVKJ1K0tYeX8iKBDRdp6W9A104d33yyi4XcQw/Yb8XXdPwer2YprmqW2AymaQ9
      3o6m6Wi6gXQshKZTLhUXuf9uCMcmW3BobQ6j6xqeWzGlkina2ttXFFM6laK1/VZMmo6uLWS7
      erwebLvyO9xCO/nuaCcPhXyG2fkU2Ux6RTF9uJ10pGOh+0LkktMUrconnyUzjz/ajEcujAK8
      Hi+mmQdgamq6Yh2JJJnK0t7egqbr6IYHu1xE1ySt8ZVlGxdyGSKx1oXsYA08HoNCoYCuGzgf
      aW/X5gAA6eQ8Dh78Xg2PP0wxnyEciZDJFmiJNS9b2tEqmSRSGZpjzZTKNrqwKdqSsN/A8IdW
      9LxuYn4W3RtElzaBYJBkMkUwGMQ0S7TF2/BUWANT2GVm55NEm2MUiyX8Ho2sWSLg0XA0D62x
      ykubp5MJHAz8HvAEgqQTSQKhEKWSRXtba8UlLz/aToa0MS1JvDWGZTt419hOkUgTJcta+F1V
      qFM086QzeWKxKGVbIsoFHM2LT5d4g+GKf3dSCubn5vCHIjhWmVDATzKdobk5hs/vZyVPrhZy
      GXKmRTQcQOgeirkMhi+IsEs0NX/4+RBXDaBQ1BpqI0zR0CgDKO6JlIJCPk+pvNxKk8SxHWzb
      RgqB4yw9h0ilV7bqdS/SySRijQOYmnomWFEdpGPzs1d+xIPHHkcIDcwMoeYY4XCYfL5AwRLM
      jIzQ1xni3I0ZDjx4ELNQJGyU8YRi5DJ5+ntauXJ1gN27tgM67/z2JIcOPwrCxu/3MjM5RXdf
      H6NjUwR1G83QuHhzhn1b4xRzCSbtNjaHSng1ixuZIFtjC4/Gjqcd9m5Z2aLEnSgDKO6J7vHR
      3dNHRGa5kQmQHLiM4wsyN52hpdlPU1sXIR027zzIpYFXGTr/DnlPM34nR7qQJRzdQU+Lhj/W
      zsmfvcyBj58g0tTE2PXzDE8miUZDhEJR3v7tGY6fOMHVt9+g5AkRb+tkdHiIcNBDU0cf198/
      jddoIrr3UUZvnqJv/0Okx2dgDQZQk2BFRWQzWQJ+AwsvsxOjRNs6KJsFmoIeJhMFOlqbaYo2
      kc1k8HlgeDJB2KfhC4Xx+8JEIx5Ov3uJrX1dtMQ7yacTSAmOlHj8Yeanxujq6WFsbBK/IQm3
      tJNNJZFWibauHhLzCaRTpLW1k2QqhV3MYVsloj276YqtvoSjMoCiofn/JXPmVjiRboAAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='visit buy month' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAaR0lEQVR4nO3d6W8beZ7f8XdVsXiJl0Tx0EFJluXbPXZ3uz093rnanV1gMMAGyW6QyZPJ
      BIt9kAd5lP8iSPJknwWbRwE2CwTzbDBI5gS6e2d63Nvto32obd03RVGieBfrygPZasuibdIt
      WxL5fQGGJbJ+rJ9Y9WGxjm/9FNd1XYToUuphd0CIwyQBEF1NAvAaLM5Osr5Z4eYXN/c87lgG
      lbrJ8soyAEZ5ky9u3aFarbC0lmf6q7vcvPOApcfPP2lTrTdeOs+V5eWXTvMsx6qzPDvFnS/v
      slUx227fCRTZBzh4H//TR4S9Kl/cX+Ptc4O4/h6K2RUwa+R9I3hKM2ROfgu/VSQci/FobpmR
      M5dZevApdUPDcCqkUhnsWgm7UWXLiZPqMfD7A6zkyvTHA8RjffzTn+5w8ewoZcOhms8S6+8n
      2BMkv1UhkehjM7dKKp1mYWGJcKSPmlEjGPBiNFx8dhErEMPdXMM79g5OeYP3r7x92G/dGydb
      gNegJxShXKxx7sIEdcPAMOr0JtJEor3EAh4yJ06DU0dTVUKpEbZyeUbSMSKxOD+4/gMymRN4
      MDEaDYLRfqIBDcNoUClusrWZx9UCeKw6ikcju75BwzRJDo0S8PewODPN+TMjTC/liPg1Zufn
      SaVTlLa3MRsGJjrRHg+FYg2zZtATjuD3gKp6DvttOxSyBThEVr1EdrvBUCre0vSOWefe9BIX
      z06gPH4sv5Gnrz++87tjMre0zujI0O7zrcitzBPsz9Dj7b7Pw28cANd1cV0XVe2+N08cfy1t
      9xyrwfT0NKFoL/mNPIlEnI3NEmfPTqC4Lo7jvO5+CvFatPSxrWgeIpEIVq3CwNAwS9kNhnp9
      dOmBA9FBWtoC2EaVbG6TdDrF6vIymVQ/y1slzqUUFEBVVfkKJI4l2QcQXU3WWtHVJACiq0kA
      RFeTAIiudmDnv13XZWVlhUQiQalUwuv14vf7+eKLL5iYmCCXy+HxeEgmk+i6TiAQOKhZC/HK
      DvQCkCcr/q1bt8hkMgwPD6PrOn/84x/J5/OEQiE0TeP8+fOcPn36IGctxCs50K9AS0tL3L59
      m0KhwNLSEjMzM3z11VecPXuWWCzG9evXiUQiPHjw4CBnK8Qrk/MAoqsd3D6AY9H47H+2PuOJ
      D9HiEwc1eyFeycHtAzgWjT/8XcuTq7GMBEAcOvneIrrakSkDmpycRFEUCoUCtVqNq1ev8utf
      /5pgMEi9XicUCuE4DufOnWNwcPCwuys6xJHZAoyOjuLxeAiFQni9XoLBIJlMhosXL9JoNIjH
      45imyW9+8xukiE0clNa2AK5LpVolGPCT3yzQG4tQLNfojUUOrCNzc3MUCgV8Ph+ZTIZCocCJ
      Eyfwer0MDg5y7tw5RkdHmZ+fP7B5CtFSAFzHZmlljaF4kLm5NVaDAXo8Cr5QGL+6UxGmtFkV
      5jp7K8nODIYh/eTssA1uYefHBnz77ACUlwkDFzMR3NoWrj/W1vyEaKa1LYCi4JgG5aqGqoJt
      21iKivJU5bXSVhn2zms+rfrzv8XdXmypqf7e3+K99p/am58QTbS8E5xOp/EHewiEewmFeqjV
      GwQ0BdfdqQhrNwCKwiufPFMURU68iQPRUgAUVaO3rw+AgN8HQKjnyBxAEuKVyceo6GoSANHV
      JACi49m2zfT0NOVymRs3buA4DgsLC8zNzR2dM8FCvC6O47C1tUUqlUJVVer1OpOTk+TzeQmA
      6HymaXL//n1KpRLFYpFMJsP4+DiKokgAROcLBoP89Kc/3fNYKpViYmJCAiA6n712F2vqN02f
      kwCIjmfnvqLx2d83fU6OAomuJgEQXU0CILqaBEB0NQmA6GotBcB1bBaXV3Bsk+npaUrFAlOz
      C0hhojjuWi6IUVyXYm6F7YqJzRbxgEqp4dKjOTsVYbbd1owd28GyrKceaT1OjvNsWyGe70Vj
      2LVWEmlbZFeX0YYG0TFxbJXlDZPzAwoqKoqioChaW51SNRWP5+nZt15Qo6rPthXi+ZwXFE+1
      tBapHi/vvncVgIHB4T3PyQ0axHEmO8Giq0kARFeTAIiuJgEQXU0CILqaBEB0NQmA6GoSANHV
      OuJ06pNxyp78rGkalmWhaRq2baOq6u44ZorS5j1MRUfriACsr68zNzdHrVbDNE2+//3v84tf
      /IKBgQEqlQobGxtEo1FOnz7NyZMnJQRiV0d8BUqlUoRCIQKBwO4AG5lMhnw+Tzwe58c//jFe
      r5ePPvqIYrF42N0VR0hHbAEWFxfJ5/NMTOwMulcoFNB1ne9973vcunWLer3O+++/TyaTIRI5
      uEE9xPHXEQEY6rEYnIgCuZ0HavCtlArVeb53uhesVSjCRBjcrTmUvhOH2l9xdHREAIxP/jvW
      9O9bmtZz8gMCf9n6cK6is7VYEWaxsLQMwNryIqXSNo9mpCJMHH8tVoRpqIpCo1Yil12nYELS
      7x6ZirB2Ro10XVeqybrMAVSEmWRXl3GsJEbDQLdMlkr1I1MRZrZxWFNRFKkm6zJtVYS5js3c
      zBQVwyYzeoJoKLBTEXblPQBGRkf3Ti/fg8Qxti8a+fVVFG+IdLKfjfUs7Q1+KsTxsm8L4NdV
      /t+vf4uDzl/+m7/qjDNlQjzHvvU7EInz/nuXiUaiaKpcMiA6274AaLoPyzLY3tjAaLR3ZEeI
      46bpN5yAL8jI6QkCPjlaIjpb0wDYlgVtj/0uxPHTPACOQ71SpG7KVyDR2ZoGIBwJYbkKPk97
      J7eEOG6aBmB9NUustw+pGxGdrmkAYvF+VhfmMG05zSs6W9MANOo1/AEfpiX7AKKzNT3OGe3t
      I54wCcphUNHhmm4BtvI56paDnAgWna5pAOL9cRamH3H/q5k33R8h3qimAXBQufjWW5ye2Ln0
      2bVNvno0jVmv8ODefRYW5vny3iSyjyyOu31f8hu1Ep/+8Qa9gydQ1Z3zAIqmE+4Jouk+wpEw
      hu2QiQcpmy4hqQgTR1xbFWEeb4AL58/wcCm/u0o6VoPN/DqO3aBQrJHsj7G6XeVsSgGpCBNH
      XFsVYarmoV6rYVW3efBogXfPn0D1eLn41iUAnowQlkzt/C8VYeI4axoNVbVZXtpibHTwTffn
      UNi2zdzcHK7rUiwWmZubo1QqkcvlWF1dxTCMF25GxfHVNAD9Ayd4570LBL3d8VXh4cOH3Lhx
      g1KpxM2bN6lWq/zud79jfX2dX/7yl9y4cYN6vX7Y3RSvQdM1PL8yz3a13U88FTVxtuWpFd/R
      uUXhkztIF4tF0uk0d+7cIRAIMDs7y/vvv8/c3Bx3797l6tWrh91VccCaBsAb6MHJrXD3wRTv
      fetMSy+0nssRHf+g5TsvK6FU6718zc6dO0dfXx99fX309vaSSCTwer04joPf72d0dFR2nDtU
      06Wq6zqWBT69tZJ413XJrueobFbxelQKlQYVwyLo8+DTNQoVg3BAx3WgUGkwkggxcKB/xquz
      c5M4G49IAGyDBnifmcb3+H/T24N+8vob7Z94vZoGoFqpoADDz9wD6HlqtRqVchlqJsWaScDr
      wTBtEhE/5brJRtFARaFhOWyU6gzFgwf5N3wj1sNf0bjxP1qaVolmJAAdpmkAAsEgXr8P/QXH
      T5+m6zrvvPsORuNTvv783Pnc7O/xMhb3srRRoS+ocXG4D4CGYaA1GruvYVoOjtXifodpoTzV
      tmE6WC22dUxnz3wblkWjxbaq5dB4qq04Hkzz+cu4SQAs/vlPX+DvT7dcEJPL5TDrFSq/e/En
      aRVYePyz34mjNXp2n6sVDJxSa2dovRvb6MvLu78bmxWsYmttPZtlfE+1NXPbNFpsq7p1Ak+1
      FceDldvEeM4ybhIAD29dOs/U4jqm3don4+DgIIrToNz37Lfn5/MPp9BPfH2f/nJ/AFdvrb13
      II7vqba1VBir3FpbTypC4Km2xkqcxmJrbZVokNAJGVvguGmUkxjPWTeb1wRHw9hoUhMsOt6+
      ADi2zeL8ItFYTGqCRcfbFwDLqFJvmEx+9RBHrvMRHW5fALzBMAGvTm9A5e7DuUPokhBvTtPD
      oG9f+wFvv+meCHEImu4E51cX+Pn/+TlFY+fQ0ZOKMKNS4M6dL1laWuLLu1IRJo6//QNkZJfZ
      LNW58v77ZBcXcPi6IqxeKRPvT7C+uU1/xI8hVwiLY25fAPoSaXTNJZfLMTicQWWnIqxS2sbS
      wzi2xcUz49ieAAE5SiqOuf1jhNkNlpZWcb09+H06AKrHy6kzO5c6x3ujAAwPBnamf1M9FR1h
      amqK+fl5PvjgAx49esTQ0BD37t0jmUxSKBTIZDL09/e/sf7s2wKsz05RV/0Y+SzZYu2NdUR0
      h4mJCWKxGIqiEA6HyefzhEIh7t69y+zsLJ999hnlcvmN9WffFiCSStH4ag4HnUig9UsbRPe4
      c+cOuq4zMTHBxx9/zPDwMFNTUwwMDOC6LslkkuHh4aZt8/k8Q0NDFAoFZmZmcByHYrHIxMQE
      Xq+XyclJisUioVDojfwt+wIQjCb587/4C3SfTwbIEE3Nzs4Sj8eZmJgAYHJyEkVRaDQabGxs
      sLi4SCKRwOfz7Wsbj8d3f/7ud7+77/mTJ0++vo430fQ8wNyDWyxuO1y7dpWALnu6Yq9Tp05R
      KpUolUr4/X5GRkaYn59nbGyMwcHB3UA8y7jx9zj5qZbmoQ1exnvpJwfd9X2aBiDSF8VfLmNa
      jgRA7HP+/Pndn69duwawuzUAyGQyTdvZC59iL37a4lxcOIwAuI5NrVrj0cMp3rpy+bV3QBwv
      lX/4CW6t0NK03iv/Ae+lf/uae/TN7AuAUS2ytF5ifGIEuRpaPMstreJW861Na5Rec2++uX2H
      QRVFwaMq2LYjd30THW9fAHw9MWI9DgvTy5TrchNZ0dmaXgwXicTRo0H6evYfxhKikzQNgO4P
      k+oNUZfbiIsO1/QwaKWUZ21lgxZr4oV4I1ZWVpicnOSHP/whi4uL1Go1yuUy6XSaP/3pT1y6
      dImTJ0+2fHdCeM4WQPNGGM4k8LR2WyAh3oiFhQUMw2B7e5tMJoPjOIyOjqKqKoFAgAcPHvDw
      4cO2XnPfKu66Lna9iKX60J65MZbrunv+iePr/v37u7eE//zzz6nVanz++eesrKxQKBTe6AVp
      rbpw4QI+nw/TNJmenmZ1dZXZ2VnW1ta4cuUKp06dIhwOt/Wa+74CrU9PMl8w6Q0H990Vory1
      xv2pFcLhHoy6wflLl/DKBUOH5vPPP2d0dJRoNMq9e/c4e/YspVKJcrlMMplE0zT8fv++dq7r
      cu/ePT788EOKxSLT09MsLy9jGAbZbBbDMBgbG+Py5cttfZ143cLhMNev79yaMplMcurUqT3P
      J5PJtl9zXwC8gRDnLwwT8Xnxas9uAcCrezAsh1RfGNN28ajHe4yw9ga+ODrji7muy5dffsmZ
      M2eYmppicnKSSCTC9vY2s7OzqKrKxYsXGRsba9p2eHiYzz77jPHxcWzbplAo4PF4uHz5MlNT
      U9y+fZsLFy6gPvstoJ0+Pruc2mj97HIyP/6vWLf/oaW2Sv9p/D/5x93f2xojTNNV7ty5y/j4
      GOl0ClX7+hMgFOunt2gwMJBiY6tEj66Ae7zHCLNbvP/p49ZH5jbplmUxOjrKrVu3CAR2ipMq
      lQqPHj3i+vXr3Lp1i8nJyT3X6Dzhui7vvffe7so9NjaGpmlYloWu6wwMDHDt2jU0Tdu3BVBo
      PQTKM8up0cYyfnY5WQrgtvZhpbjOnrZtjREW7k8Tm5vln7+4zY9+9OfoTz2najpjJ8YAGBqQ
      irDDpGka3/nOd9D1nSV04cIFNE1jYmICn8/H9evXsZtslV2zjnn7fwPw9Or05LPWfOoxB/BM
      /AvUWPOL2zrBvgAoqoaqqIR0lWLNwh+WC4KOGqe0hvXwV6jAk1VcZefDSOPrlRmgAegX/zWK
      b6fAxDWrGB//t5bnpfad6K4AAJx/+wrpQpn+kFSEHUVOYQHjo//S8vSeiQ93AyD2avLlyOK3
      v/y/3L1zm62q3AtfdLYmAdAYGkxiuRr+LhklUnSvJgFQUFQFv98vNcGi4zU9PpQeGsZp1DDl
      3oeiwz33AKnjOHK5g+h4zW+Ou57FaJjYEgDR4fYFwG7UCER78ei6DJEkOt6+AJRzK2QrLvGQ
      l1rjaFz3IsTrsu84Z3RonLQ1ixM9RTwkJZGiszU50K8wNDr+5nsixCGQM10HYG1tjd7eXrxe
      LwsLC2iaRrlcxnEcRkZG8Pl8uxetiaOlraJH13VYWligXq+xvLouV4Kyc1nyH/7wB7a2ttjc
      3OSTTz5BURSmpqa4c+cOv//978lms4fdTfEcbW0Birkl1rYqmLaNT3WpmAkCXV4Qs76+TrFY
      ZG5uDlVVKRQKrK6uUiqV+OCDD7h58yaTk5Ok0+k25vNiTpvvtW3bONaT8d7abevAnqKW1h1k
      QYzbxpi9LrS8jNsKgMcXwGPnKZQsFMclnlFQle4uiBkcHORnP/vZ7u9Xr14F4MqVKwD86Ec/
      auP1W2Np7b3XmqahPu6303bbve/1oRXEqG20hVcviHmRYKSfS29/PXyNotDVt0+081NYU79t
      eXrve3+Dospu11HS1tI4SgXSR4Gz8ZDGH/6u5em97/57kAAcKXLnH9HVJACiq0kARFeTAIiu
      JgEQXU0CILqaBEB0NQmA6GpyVuYQOY7DJ598QigU4vTp03z00Uf4fD7K5TJ+v59IJMKZM2fo
      6+s77K52LNkCHCJFUYhEIrvXvQwMDBCLxbAsi0QiQS6X49NPWx1YWrwK2QIcIsdxqFQqDA8P
      k81myefzjI2NkU6nOXPmDMPDw6ysrBx2NzuaBOCQuI6NalW5duVbu4+NpL8NwMlMCnAIRgMk
      oid3BpzWgyiq3KTgoEkADomzOUP1f/2rlqcP/rt/REtffI096k5t7wNsb+YxjBpLK1mpCBPH
      XltbALtRY+bRIwKJAaIem4rpdnVFmNPmOLK2ZfPk7v1tV2Y5Nu7jeUtF2Eva8poqwsrFbeoN
      A82ok92uEx/u7oowV2tvA6p5NJTH7e12K7NUDe1xW6kIe0lbXlNFWLQ/zXe+t7e2tZsrwsTx
      J+cBRFeTAIiuJgEQXU0CILqaBEB0NQmA6GoSANHVJACiq0kARFeTAIiuJgEQXU0CILqaBEB0
      NQmA6GptBcCsV3jwYJL19SwPHs7IpdDi2Gt7iKRYuIdCqcpAxEPRdAlpUhHWKqkIO+YVYdXC
      BtmtEoneMIv5KudTCipSEdYqqQg75hVhPb1JLvcmARga3nlMvgaJ40x2gkVXkwCIriYBEF1N
      AiC6mgRAdDUJgOhqEgDR1SQAoqtJAERXkwCIriYBEF1NAiC62isFYGNtidt37mHKhXDimHul
      ANRMl+F4iLr18mmFOMpeKQCJvigFUyWkH3R3hHizXmmUSH9PhJM9EVzXxXEcXNdFcVU83/3P
      rb9I/Ay2be+0VRQ8V/5mZzjQFijpb+1pq577l3gG3mmprRrL7GmrjPwZHm+4tfn6wnvaEj/T
      1t/suCquZaEoCq6/r622bk8S+0k1V3iovfl6Q19Xgmm+9uYbO7F3OX37P+KatZbaKoPv7Gmr
      XfxrlNE/a6mt2je+dxmf+CGenlRr8w307V3GyQvP/ZsVt516wiZc18V1XdS2Kqu+5jhO17Xd
      qaBrvcLpIMhyau4bHwVSFGV3JpVikfYqTnfKG9dXl5hbXAXANCpUjdZe5ek/biu7zHbdZGZm
      Zt90plmjVjOf2/aJxYUFnKc/DxyL7c1NyvXGS9uuLMzTsG1mZude2udnV36nUadcN17Y7kVK
      xeLOD2aVrXLz13l6ObmOxcLS8gtf0zCMPdV+tVKBrx5NYzl73x+jsX9HsPikP489me/G2jIP
      p2cf13A7GMaT99WkWGy+VVFdm/nFFba2tl7YX2hQLNb3zXd+5hHzS2vPLeM80IGya+UKG5ur
      zGdrDEZ1FL+XoK8Xs1rgy4eznD97ElzwBYL09icI6Dv1qZVKGc0f5uPf/YpYMk2joRKOBPD5
      VPx6BKOyye2HC1w6N4ZlgS8UJplMoD9VJ2rZDtvLc2TzZdz6LbZsnQAKfr8Hj19jY7XIyXPn
      iIX9Tfvuuial/Drrupe1fI6gL0gg4MGqWgRTPkJ+7wv/dts2WJiaYttSuPnpR3jC/fRFY8RS
      aXr0F3/OOGaDtWyWaDhKvlDCtGyc8jpWIMm7F0+/9H0vl7epVAyor5NrBKlHA/T1J/F5ms+3
      up1nc6uM6llFcxXsRoVCzSEei4BT59HDJfr6giSGxknFozvvr2XiuC7T92+Srbgkgjoej8Km
      4UGrZlF64mh2HUXxogd7cOaXOPvW+T0rWNWwift0puZm8Cgu67kKfREd1eelmCsT6Q0yOTnN
      +OmTxONJkvEYuDaFzRyVSg8b2VVUr4+g30dhq8DMSp6zowlK1Qa9/WE2lktEe/1MPprn1OkT
      xPvT6IEQrmHwxY1PcDxRevwesKrkqi7psPfgzgM4lsHa1ja4Gn2RHnoTaWLhEBtrSxSrBoOp
      JB5/iBMnRlnPruPXvy7OjvQmGBlM0Z8apL+vF4+moPuCDA+kyK4uUKyaDCUTeMMxxk+OklvL
      4nmmSFr3BVGA4cE0iu4nHPCSHhzGp2uomo/xiXFUnn93gFphCzcQobK5jmm7eP1BBlL9aLqO
      1/PyQvJgJI6NwlA8hD/cSygSI7ex/tKVHxwWl1cI+nwsLi3j7wkzmIwTjsYZSMZfOt9Cfp2G
      o7KZW6FuayQScbLZDbzPWfkBtss1/JpJabvC0to6lmVTr9cpbuao1GyiIQ89sf499ylQNQ+O
      baH7w4wOpTCMBsFoH5Ggl2hfklQizvDYGJmhAbweHUVVqVWrVKvV3dfQsFgtVujxePAGIsTC
      /t0bKni9HlTNw+iJcSLR2M7KD6CoDI2MYDVqO/sReoDidpl4X4yJ8VFi8RSZTIZQIIDXq6F6
      dMbHx4nEeunvjVDZ3qRiQywWZyAVR1EUfMEIo0MD9KcH+f8Vwo6s/WayiQAAAABJRU5ErkJg
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
