<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1211.0901                               -->
<workbook original-version='18.1' source-build='2024.3.2 (20243.24.1211.0901)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
        <calculation class='tableau' formula='2020.' />
      </column>
    </datasource>
    <datasource caption='v_countrydate+ (ecocapture)' inline='true' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.040164612je0re1ch3d4c10oumvj'>
            <connection class='mysql' dbname='ecocapture' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_twocatstats' table='[v_twocatstats]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photovisit_rating' table='[v_photovisit_rating]' type='table' />
        </relation>
        <cols>
          <map key='[City]' value='[v_photovisit_rating].[City]' />
          <map key='[InputID (v_photovisit_rating)]' value='[v_photovisit_rating].[InputID]' />
          <map key='[InputID]' value='[v_photographyvsnonall].[InputID]' />
          <map key='[MAX_]' value='[v_twocatstats].[MAX_]' />
          <map key='[MIN_]' value='[v_twocatstats].[MIN_]' />
          <map key='[Mean]' value='[v_twocatstats].[Mean]' />
          <map key='[Photography (v_twocatstats)]' value='[v_twocatstats].[Photography]' />
          <map key='[Photography]' value='[v_photographyvsnonall].[Photography]' />
          <map key='[STDDEV]' value='[v_twocatstats].[STDDEV]' />
          <map key='[Travel_Date]' value='[v_countrydate].[Travel_Date]' />
          <map key='[Travel_Month]' value='[v_countrydate].[Travel_Month]' />
          <map key='[Travel_Year (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Travel_Year]' />
          <map key='[Travel_Year (v_photovisit_rating)]' value='[v_photovisit_rating].[Travel_Year]' />
          <map key='[Travel_Year (v_twocatstats)]' value='[v_twocatstats].[Travel_Year]' />
          <map key='[Travel_Year]' value='[v_countrydate].[Travel_Year]' />
          <map key='[Travel_month (v_photovisit_rating)]' value='[v_photovisit_rating].[Travel_month]' />
          <map key='[Travel_month]' value='[v_photographyvsnonall].[Travel_month]' />
          <map key='[Traveller_Country (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Traveller_Country]' />
          <map key='[Traveller_Country (v_photovisit_rating)]' value='[v_photovisit_rating].[Traveller_Country]' />
          <map key='[Traveller_Country]' value='[v_countrydate].[Traveller_Country]' />
          <map key='[Traveller_ID (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Traveller_ID]' />
          <map key='[Traveller_ID (v_photovisit_rating)]' value='[v_photovisit_rating].[Traveller_ID]' />
          <map key='[Traveller_ID]' value='[v_countrydate].[Traveller_ID]' />
          <map key='[activity]' value='[v_photovisit_rating].[activity]' />
          <map key='[inputID]' value='[v_countrydate].[inputID]' />
          <map key='[location_Type (v_photographyvsnonall)]' value='[v_photographyvsnonall].[location_Type]' />
          <map key='[location_Type]' value='[v_photovisit_rating].[location_Type]' />
          <map key='[month (v_photographyvsnonall)]' value='[v_photographyvsnonall].[month]' />
          <map key='[month (v_photovisit_rating)]' value='[v_photovisit_rating].[month]' />
          <map key='[month]' value='[v_countrydate].[month]' />
          <map key='[rating (v_photographyvsnonall)]' value='[v_photographyvsnonall].[rating]' />
          <map key='[rating]' value='[v_photovisit_rating].[rating]' />
          <map key='[sentiment_comments (v_photographyvsnonall)]' value='[v_photographyvsnonall].[sentiment_comments]' />
          <map key='[sentiment_comments]' value='[v_photovisit_rating].[sentiment_comments]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>inputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[inputID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>inputID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Travel_Date]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Month</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photography]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Photography</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location_Type (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>location_Type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_comments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sentiment_comments (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>sentiment_comments</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photography (v_twocatstats)]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>Photography</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_FFCF6196061145E6A0037FC77105E131]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_twocatstats)]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_FFCF6196061145E6A0037FC77105E131]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Mean]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>Mean</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>9</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_FFCF6196061145E6A0037FC77105E131]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MAX_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[MAX_]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>MAX_</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_FFCF6196061145E6A0037FC77105E131]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MIN_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[MIN_]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>MIN_</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_FFCF6196061145E6A0037FC77105E131]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STDDEV</remote-name>
            <remote-type>5</remote-type>
            <local-name>[STDDEV]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>STDDEV</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_FFCF6196061145E6A0037FC77105E131]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[activity]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>activity</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>18</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location_Type]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>location_Type</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_comments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sentiment_comments]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>sentiment_comments</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Z-scor' datatype='real' name='[Calculation_3191363324673548296]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([rating (v_photographyvsnonall)])-WINDOW_AVG(SUM([rating (v_photographyvsnonall)])))/WINDOW_STDEV(SUM([rating (v_photographyvsnonall)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='InputID (v photovisit rating)' datatype='integer' name='[InputID (v_photovisit_rating)]' role='dimension' type='ordinal' />
      <column caption='Input ID1' datatype='integer' name='[InputID]' role='dimension' type='ordinal' />
      <column caption='Max' datatype='integer' name='[MAX_]' role='measure' type='quantitative' />
      <column caption='Min' datatype='integer' name='[MIN_]' role='measure' type='quantitative' />
      <column caption='Photography (v twocatstats)' datatype='string' name='[Photography (v_twocatstats)]' role='dimension' type='nominal' />
      <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
          <alias key='&quot;photography&quot;' value='Photography Holiday' />
        </aliases>
      </column>
      <column caption='Stddev' datatype='real' name='[STDDEV]' role='measure' type='quantitative' />
      <column caption='Travel Date' datatype='string' name='[Travel_Date]' role='dimension' type='nominal' />
      <column caption='Travel Month' datatype='integer' name='[Travel_Month]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photovisit rating)' datatype='integer' name='[Travel_Year (v_photovisit_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v twocatstats)' datatype='integer' name='[Travel_Year (v_twocatstats)]' role='dimension' type='quantitative' />
      <column caption='Travel Year' datatype='integer' name='[Travel_Year]' role='dimension' type='quantitative' />
      <column caption='Travel month (v photovisit rating)' datatype='integer' name='[Travel_month (v_photovisit_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel month' datatype='integer' name='[Travel_month]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Traveller_Country (v_photographyvsnonall)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Traveller Country (v photovisit rating)' datatype='string' name='[Traveller_Country (v_photovisit_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller Country' datatype='string' name='[Traveller_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Afghanistan&quot;' value='&quot;Afghanistan&quot;' />
          <semantic-value key='&quot;Australia&quot;' value='&quot;Australia&quot;' />
          <semantic-value key='&quot;Austria&quot;' value='&quot;Austria&quot;' />
          <semantic-value key='&quot;Bahrain&quot;' value='&quot;Bahrain&quot;' />
          <semantic-value key='&quot;Bangladesh&quot;' value='&quot;Bangladesh&quot;' />
          <semantic-value key='&quot;Belarus&quot;' value='&quot;Belarus&quot;' />
          <semantic-value key='&quot;Belgium&quot;' value='&quot;Belgium&quot;' />
          <semantic-value key='&quot;Brazil&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Bulgaria&quot;' value='&quot;Bulgaria&quot;' />
          <semantic-value key='&quot;Cambodia&quot;' value='&quot;Cambodia&quot;' />
          <semantic-value key='&quot;Canada&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;China&quot;' value='&quot;China&quot;' />
          <semantic-value key='&quot;Croatia&quot;' value='&quot;Croatia&quot;' />
          <semantic-value key='&quot;Cyprus&quot;' value='&quot;Cyprus&quot;' />
          <semantic-value key='&quot;Czech Republic&quot;' value='&quot;Czechia&quot;' />
          <semantic-value key='&quot;Denmark&quot;' value='&quot;Denmark&quot;' />
          <semantic-value key='&quot;Egypt&quot;' value='&quot;Egypt&quot;' />
          <semantic-value key='&quot;Ethiopia&quot;' value='&quot;Ethiopia&quot;' />
          <semantic-value key='&quot;Finland&quot;' value='&quot;Finland&quot;' />
          <semantic-value key='&quot;France&quot;' value='&quot;France&quot;' />
          <semantic-value key='&quot;Germany&quot;' value='&quot;Germany&quot;' />
          <semantic-value key='&quot;Greece&quot;' value='&quot;Greece&quot;' />
          <semantic-value key='&quot;Hong Kong&quot;' value='&quot;Hong Kong&quot;' />
          <semantic-value key='&quot;Hungary&quot;' value='&quot;Hungary&quot;' />
          <semantic-value key='&quot;India&quot;' value='&quot;India&quot;' />
          <semantic-value key='&quot;Indonesia&quot;' value='&quot;Indonesia&quot;' />
          <semantic-value key='&quot;Ireland&quot;' value='&quot;Ireland&quot;' />
          <semantic-value key='&quot;Jordan&quot;' value='&quot;Jordan&quot;' />
          <semantic-value key='&quot;Kuwait&quot;' value='&quot;Kuwait&quot;' />
          <semantic-value key='&quot;Lebanon&quot;' value='&quot;Lebanon&quot;' />
          <semantic-value key='&quot;Malaysia&quot;' value='&quot;Malaysia&quot;' />
          <semantic-value key='&quot;Malta&quot;' value='&quot;Malta&quot;' />
          <semantic-value key='&quot;Qatar&quot;' value='&quot;Qatar&quot;' />
          <semantic-value key='&quot;Romania&quot;' value='&quot;Romania&quot;' />
          <semantic-value key='&quot;United States&quot;' value='&quot;USA&quot;' />
        </semantic-values>
      </column>
      <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID (v photovisit rating)' datatype='integer' name='[Traveller_ID (v_photovisit_rating)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID' datatype='integer' name='[Traveller_ID]' role='dimension' type='ordinal' />
      <column caption='v_countrydate' datatype='table' name='[__tableau_internal_object_id__].[v_countrydate_98771871190540D39E6CEF22D122B18C]' role='measure' type='quantitative' />
      <column caption='v_photographyvsnonall' datatype='table' name='[__tableau_internal_object_id__].[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]' role='measure' type='quantitative' />
      <column caption='v_photovisit_rating' datatype='table' name='[__tableau_internal_object_id__].[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]' role='measure' type='quantitative' />
      <column caption='v_twocatstats' datatype='table' name='[__tableau_internal_object_id__].[v_twocatstats_FFCF6196061145E6A0037FC77105E131]' role='measure' type='quantitative' />
      <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
      <column caption='Input ID' datatype='integer' name='[inputID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[location_Type (v_photographyvsnonall)]' role='dimension' type='nominal' />
      <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
      <column caption='Month (V Photographyvsnonall)' datatype='string' name='[month (v_photographyvsnonall)]' role='dimension' type='nominal' />
      <column caption='Month (V Photovisit Rating)' datatype='string' name='[month (v_photovisit_rating)]' role='dimension' type='nominal' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Rating (V Photographyvsnonall)' datatype='integer' name='[rating (v_photographyvsnonall)]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Rating' datatype='integer' name='[rating]' role='dimension' type='ordinal' />
      <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
      <column-instance column='[Photography]' derivation='Count' name='[cnt:Photography:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cum:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Sum' name='[cum:sum:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country (v_photographyvsnonall)]' derivation='None' name='[none:Traveller_Country (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country]' derivation='None' name='[none:Traveller_Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
      <column-instance column='[location_Type (v_photographyvsnonall)]' derivation='None' name='[none:location_Type (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
      <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Photography]' derivation='Count' name='[pcto:cnt:Photography:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[rating]' derivation='Sum' name='[sum:rating:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='Traveller ID photo Cat'>
          <field>[Photography]</field>
          <field>[Traveller_ID (v_photographyvsnonall)]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cum:cnt:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cum:sum:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Photography:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pays-Bas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Schweiz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Skye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cayman Island&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldvies&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mariana Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niederlande&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Near Prague&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reunion Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stewart Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini (Swaziland)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Beruwala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Polonnaruwa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katukitula&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nuwara Eliya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nilaveli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sigiriya&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Colombo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Galle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tissamaharama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ampara&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Deniyaya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kalutara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ahangama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Koslanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ella&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Weligatta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arugam Bay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peradeniya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalametiya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trincomalee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haputale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Unawatuna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kalkudah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Habarana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saliyapura&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Anuradhapura&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bentota&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pinnawala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kandy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mirissa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hikkaduwa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jaffna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Embilipitiya&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Pussellawa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ambalangoda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Negombo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:rating:ok]' type='palette'>
            <map to='#499894'>
              <bucket>12</bucket>
            </map>
            <map to='#499894'>
              <bucket>51</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>30</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>207</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6249</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>41</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1977</bucket>
            </map>
            <map to='#79706e'>
              <bucket>16</bucket>
            </map>
            <map to='#79706e'>
              <bucket>72</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>13</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>52</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>9</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>44</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>24</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>164</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>3</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>34</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>477</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>21</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>114</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>45</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>18</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>77</bucket>
            </map>
            <map to='#d37295'>
              <bucket>19</bucket>
            </map>
            <map to='#d37295'>
              <bucket>79</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>22</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>126</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>27</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>194</bucket>
            </map>
            <map to='#e15759'>
              <bucket>14</bucket>
            </map>
            <map to='#e15759'>
              <bucket>60</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>48</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>4</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>35</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>683</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>20</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>93</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>15</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>61</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>5</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>38</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>691</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:sentiment_comments:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Negative&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Positive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neutral&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country (v_photographyvsnonall):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stewart Island&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Skye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldvies&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cayman Island&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mariana Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Schweiz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Near Prague&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini (Swaziland)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Photography:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;No photography&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;photography&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:activity:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Beach_Water_Sports&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Relaxing&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Historical_Sites&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;wildlife_nature&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romantic_holiday&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hiking_climbing&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Religious&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Biking_cycling&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Sightseeing&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location_Type (v_photographyvsnonall):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Religious Sites&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beaches&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Historic Sites&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waterfalls&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Museums&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bodies of Water&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;National Parks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zoological Gardens&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nature &amp; Wildlife Areas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Farms&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gardens&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='v_countrydate' id='v_countrydate_98771871190540D39E6CEF22D122B18C'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
            </properties>
          </object>
          <object caption='v_photographyvsnonall' id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
            </properties>
          </object>
          <object caption='v_photovisit_rating' id='v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photovisit_rating' table='[v_photovisit_rating]' type='table' />
            </properties>
          </object>
          <object caption='v_twocatstats' id='v_twocatstats_FFCF6196061145E6A0037FC77105E131'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_twocatstats' table='[v_twocatstats]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID (v_photovisit_rating)]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Photography]' />
              <expression op='[Photography (v_twocatstats)]' />
            </expression>
            <first-end-point object-id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696' />
            <second-end-point object-id='v_twocatstats_FFCF6196061145E6A0037FC77105E131' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='5* Cities'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Rating' datatype='integer' name='[rating]' role='dimension' type='ordinal' />
            <column-instance column='[rating]' derivation='Sum' name='[sum:rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]'>
            <groupfilter function='member' level='[none:rating:ok]' member='5' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{8AE6B6A8-396E-4D3F-B028-7BC3FEFD306B}' />
    </worksheet>
    <worksheet name='Line Chart Forcasting'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
              <calculation class='tableau' formula='2020.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' forecast-column-base='[cnt:Traveller_ID (v_photographyvsnonall):qk]' forecast-column-type='forecast-value' name='[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_photographyvsnonall)]' derivation='None' name='[none:Travel_Year (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='color' id='refline0' value='#ff0000' />
            <format attr='stroke-color' id='refline0' value='#ff00004b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Covid 19' label-type='custom' probability='95' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{87A7AAF9-8AA3-4318-BFA5-BB2477C400F5}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column datatype='string' name='[Traveller_Country (v_photographyvsnonall)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_Country (v_photographyvsnonall)]' derivation='None' name='[none:Traveller_Country (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Traveller_Country (v_photographyvsnonall)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='in-range'>
            <min>100</min>
            <max>3114</max>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([activity])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Photography:nk]' member='&quot;No photography&quot;' />
                  <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]' field-type='quantitative' max='38375329.669726059' min='-15767863.08890428' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]' field-type='quantitative' max='17194168.415342927' min='-12626635.250756275' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' />
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DB828CB9-B2E3-4F74-A932-614B90B54ACE}' />
    </worksheet>
    <worksheet name='Non vs Poto'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</cols>
      </table>
      <simple-id uuid='{6A50E07A-6C64-4E2D-A8D6-C7B847FDFC3F}' />
    </worksheet>
    <worksheet name='Photo Activity'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photovisit rating)' datatype='integer' name='[Traveller_ID (v_photovisit_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photovisit_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photovisit_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photovisit_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photovisit_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photovisit_rating):qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='65' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='-90' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' id='legend-color' value='center' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photovisit_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photovisit_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photovisit_rating):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</cols>
      </table>
      <simple-id uuid='{8ACD1209-7334-4E56-857C-B5BB9F8D0C52}' />
    </worksheet>
    <worksheet name='Rating'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[rating]' derivation='Count' name='[cnt:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[rating]' derivation='Count' name='[pcto:cnt:rating:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Rating' datatype='integer' name='[rating]' role='dimension' type='ordinal' />
            <column-instance column='[rating]' derivation='Sum' name='[sum:rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <wedge-size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:rating:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:rating:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7AB4EE68-1BAC-4E59-B2E4-2B1F6D160702}' />
    </worksheet>
    <worksheet name='SIA'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column-instance column='[sentiment_comments]' derivation='Count' name='[cnt:sentiment_comments:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
              <wedge-size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2E56FC8B-EDFB-414D-AB93-5A9226D14142}' />
    </worksheet>
    <worksheet name='SIA Positve Cities'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[sentiment_comments]' derivation='Count' name='[cnt:sentiment_comments:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]'>
            <groupfilter function='member' level='[none:sentiment_comments:nk]' member='&quot;Positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{AA5E5BF6-9CC4-48A1-A971-6D7CB28B6C6D}' />
    </worksheet>
    <worksheet name='SIA Type of visit'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column-instance column='[sentiment_comments]' derivation='Count' name='[cnt:sentiment_comments:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location_Type (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
            <column-instance column='[location_Type (v_photographyvsnonall)]' derivation='None' name='[none:location_Type (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[location_Type]' derivation='None' name='[none:location_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:sentiment_comments (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[sentiment_comments (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Beaches&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Bodies of Water&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Farms&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Gardens&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Historic Sites&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Museums&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;National Parks&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Nature &amp; Wildlife Areas&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Religious Sites&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Waterfalls&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Zoological Gardens&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]'>
            <groupfilter function='member' level='[none:sentiment_comments:nk]' member='&quot;Positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:sentiment_comments (v_photographyvsnonall):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</cols>
      </table>
      <simple-id uuid='{EF528593-29D6-41CC-B9C9-46FD7FABCCC7}' />
    </worksheet>
    <worksheet name='SIA countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column datatype='string' name='[Traveller_Country (v_photographyvsnonall)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Photography]' derivation='Count' name='[cnt:Photography:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='Count' name='[cnt:sentiment_comments (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_Country (v_photographyvsnonall)]' derivation='None' name='[none:Traveller_Country (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='None' name='[none:sentiment_comments (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column caption='Rating (V Photographyvsnonall)' datatype='integer' name='[rating (v_photographyvsnonall)]' role='measure' type='quantitative' />
            <column datatype='string' name='[sentiment_comments (v_photographyvsnonall)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='member' level='[none:Photography:nk]' member='&quot;No photography&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]'>
            <groupfilter count='35' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([rating (v_photographyvsnonall)])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='%null%' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Curaçao&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;England&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Vietnam&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]'>
            <groupfilter function='member' level='[none:sentiment_comments (v_photographyvsnonall):nk]' member='&quot;Positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]' />
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</cols>
      </table>
      <simple-id uuid='{4DE53B2F-6305-4D8B-BC96-67ABFB2EFBDE}' />
    </worksheet>
    <worksheet name='SIA type'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='Count' name='[cnt:sentiment_comments (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location_Type (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[location_Type (v_photographyvsnonall)]' derivation='None' name='[none:location_Type (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:sentiment_comments (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[sentiment_comments (v_photographyvsnonall)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]' />
              <wedge-size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:sentiment_comments (v_photographyvsnonall):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{38D1FCF9-5FD7-4A6E-83D8-A3BD7B8DFDAA}' />
    </worksheet>
    <worksheet name='Stat'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Avg' name='[avg:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_photographyvsnonall)]' derivation='None' name='[none:Travel_Year (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]' value='88' />
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]' field-type='quantitative' max='6780.9361097560977' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='wrap' data-class='subtotal' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]' value='off' />
            <format attr='vertical-align' data-class='subtotal' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]' value='top' />
            <format attr='text-align' data-class='subtotal' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]' value='left' />
            <format attr='text-orientation' data-class='subtotal' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]' value='90' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</cols>
      </table>
      <simple-id uuid='{B4F9E845-590C-4317-AE30-26D0E4BFAC9D}' />
    </worksheet>
    <worksheet name='visit buy month'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column caption='Month (V Photographyvsnonall)' datatype='string' name='[month (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[month (v_photographyvsnonall)]' derivation='None' name='[none:month (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#f9a655' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photographyvsnonall):nk]</cols>
      </table>
      <simple-id uuid='{926ADA61-A842-4E77-9E74-95CFABBF94A5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='927' maxwidth='1469' minheight='927' minwidth='1469' preset-index='16' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
          <calculation class='tableau' formula='2020.' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98274' id='7' param='horz' type-v2='layout-flow' w='98910' x='545' y='863'>
            <zone h='98274' id='5' type-v2='layout-basic' w='87338' x='545' y='863'>
              <zone h='49137' id='48' name='Map' w='52364' x='545' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='56' name='Photo Activity' w='52364' x='545' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='58' name='Rating' w='34974' x='52909' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='60' name='Line Chart Forcasting' w='34974' x='52909' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='170' h='98274' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='11572' x='87883' y='863'>
              <zone h='5609' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11572' x='87883' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11435' id='49' name='Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' type-v2='size' w='11572' x='87883' y='6472'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37325' id='50' name='Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' type-v2='color' w='11572' x='87883' y='17907'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22222' id='57' name='Photo Activity' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='11572' x='87883' y='55232'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4962' id='59' name='Rating' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' type-v2='size' w='11572' x='87883' y='77454'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='70' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98274' id='69' param='vert' type-v2='layout-flow' w='98910' x='545' y='863'>
                <zone fixed-size='280' h='49137' id='48' is-fixed='true' name='Map' w='52364' x='545' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11435' id='49' name='Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' type-v2='size' w='11572' x='87883' y='6472'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='37325' id='50' name='Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' type-v2='color' w='11572' x='87883' y='17907'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='60' is-fixed='true' name='Line Chart Forcasting' w='34974' x='52909' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5609' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11572' x='87883' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='56' is-fixed='true' name='Photo Activity' w='52364' x='545' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22222' id='57' name='Photo Activity' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='11572' x='87883' y='55232'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='58' is-fixed='true' name='Rating' w='34974' x='52909' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4962' id='59' name='Rating' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' type-v2='size' w='11572' x='87883' y='77454'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8CCA8090-640E-4B2E-82F7-02AE726BECC5}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='927' maxwidth='1469' minheight='927' minwidth='1469' preset-index='16' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98274' id='7' param='horz' type-v2='layout-flow' w='98910' x='545' y='863'>
            <zone h='98274' id='5' type-v2='layout-basic' w='88767' x='545' y='863'>
              <zone h='59439' id='16' name='SIA Type of visit' w='55207' x='545' y='39698'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38835' id='55' name='SIA Positve Cities' w='61061' x='28251' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38835' id='56' name='SIA' w='27706' x='545' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='59439' id='59' is-scaled='1' param='C:/Github_proj/EcoCapture-Analytics/Analysis/Screenshot 2025-01-18 231438.jpg' type-v2='bitmap' w='33560' x='55752' y='39698'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='149' h='98274' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10143' x='89312' y='863'>
              <zone h='2373' id='17' name='SIA Type of visit' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10143' x='89312' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='2373' id='18' name='SIA Type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10143' x='89312' y='3236'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9277' id='57' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='10143' x='89312' y='5609'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4962' id='58' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' type-v2='size' w='10143' x='89312' y='14886'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='69' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98274' id='68' param='vert' type-v2='layout-flow' w='98910' x='545' y='863'>
                <zone fixed-size='280' h='38835' id='56' is-fixed='true' name='SIA' w='27706' x='545' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9277' id='57' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='10143' x='89312' y='5609'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4962' id='58' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' type-v2='size' w='10143' x='89312' y='14886'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38835' id='55' is-fixed='true' name='SIA Positve Cities' w='61061' x='28251' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59439' id='16' is-fixed='true' name='SIA Type of visit' w='55207' x='545' y='39698'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2373' id='17' name='SIA Type of visit' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10143' x='89312' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2373' id='18' name='SIA Type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10143' x='89312' y='3236'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59439' id='59' is-fixed='true' is-scaled='1' param='C:/Github_proj/EcoCapture-Analytics/Analysis/Screenshot 2025-01-18 231438.jpg' type-v2='bitmap' w='33560' x='55752' y='39698'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{148B74DC-060A-48C0-8A9E-8CA4F401E31E}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size maxheight='900' maxwidth='1300' minheight='900' minwidth='1300' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
          <calculation class='tableau' formula='2020.' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='9' param='horz' type-v2='layout-flow' w='98770' x='615' y='889'>
            <zone h='98222' id='7' type-v2='layout-basic' w='86462' x='615' y='889'>
              <zone h='47444' id='3' name='visit buy month' w='43231' x='615' y='51667'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50778' id='5' name='Non vs Poto' w='24385' x='615' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50778' id='6' name='Stat' w='62077' x='25000' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47444' id='13' name='SIA countries' w='43231' x='43846' y='51667'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98222' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='12308' x='87077' y='889'>
              <zone h='7333' id='10' name='Stat' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type-v2='color' w='12308' x='87077' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5778' id='12' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='12308' x='87077' y='8222'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='22' param='vert' type-v2='layout-flow' w='98770' x='615' y='889'>
                <zone fixed-size='280' h='50778' id='5' is-fixed='true' name='Non vs Poto' w='24385' x='615' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50778' id='6' is-fixed='true' name='Stat' w='62077' x='25000' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7333' id='10' name='Stat' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type-v2='color' w='12308' x='87077' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5778' id='12' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='12308' x='87077' y='8222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47444' id='3' is-fixed='true' name='visit buy month' w='43231' x='615' y='51667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47444' id='13' is-fixed='true' name='SIA countries' w='43231' x='43846' y='51667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1A80F195-FFE0-4D70-9B23-D0F132D84CF2}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Line Chart Forcasting'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Photo Activity'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Rating'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='60' />
      <simple-id uuid='{46844394-C8DC-47C5-8AB6-F61F276BEB8A}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='SIA'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SIA Positve Cities'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SIA Type of visit'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{79E10B69-7BD1-4F8B-8BCB-3874D47C0A61}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Non vs Poto'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SIA countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Stat'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]</field>
                    <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
                    <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>5070.8947</value>
                  <value>&quot;photography&quot;</value>
                  <value>2023</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='visit buy month'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{91E32204-93F8-4CFF-AAD0-18D32233E187}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{352790A8-0E1E-4075-9D85-3F7C13DD202D}' />
    </window>
    <window class='worksheet' name='Line Chart Forcasting'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E4C7457-FEF1-485D-A6DB-FB8B09F1C85B}' />
    </window>
    <window class='worksheet' name='Photo Activity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{614D0002-C6CC-45DD-B3C3-55C172326677}' />
    </window>
    <window class='worksheet' name='Non vs Poto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B892FE8-53E8-4FB3-909E-CFD8384703C4}' />
    </window>
    <window class='worksheet' name='SIA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDDD4D80-DDFD-40AB-ABC9-B13F899C78B8}' />
    </window>
    <window class='worksheet' name='SIA Positve Cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B208DBA9-1D01-42F0-91B9-4290B0E2FB9D}' />
    </window>
    <window class='worksheet' name='Rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:InputID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F11A9256-BDCD-4620-9D17-A973F9712E45}' />
    </window>
    <window class='worksheet' name='visit buy month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_month:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photography_rating):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photovisit_rating):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5ED166A1-4843-4683-888B-4722DFCC388E}' />
    </window>
    <window class='worksheet' name='SIA Type of visit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{396FB502-1C76-4CC7-B7CB-7EF9A5E14013}' />
    </window>
    <window class='worksheet' name='Stat'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Calculation_3191363324667273216:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[usr:Calculation_3191363324668567554:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95C1AC77-0FF8-46EF-A265-09594A86B84D}' />
    </window>
    <window class='worksheet' name='5* Cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photovisit_rating):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90413D93-B792-4F33-BBC1-794A4C561A46}' />
    </window>
    <window class='worksheet' name='SIA countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C880C5F-A5AF-4AAF-85F2-6516170E3278}' />
    </window>
    <window class='worksheet' name='SIA type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C46270CD-548A-4EC4-8D4F-A646CCA311AA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='5* Cities' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      q877/2CogfjiuZ/YAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Line Chart Forcasting' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO19WZMbV5bel8hEZiKx10aKW4niSGqpxz3qkKJ7Qu5ox/Q4ZvptHh3jp/kB
      Dv8IR/g/+MWv/gMOLw8eW4rumegHcaYV3UNSopYWqSKLZFWhkMhErsj0A/q7dZGVWKoKKCCL
      +CIYxUIBiVzuOfcs3zlHcRwn1TQNa6zxOkLTNA2GYSz7PFYGaZqO/F9RFCiKssQzWmORWKv+
      PyKOYyRJAs/zMBgMxOuapqFcLqNUKkHX9bUwXDG89gKQpimSJIHjOEiS5NTf4zhGHMcAgHK5
      vBaAK4ZCCAAXaZqmUFVVvH7exUgzx3Vd6LqOwWAATdMQRZH4m6IoMAxDmEGlUgn9fh/VanUt
      BFcIhRCAOI7R6/VQKpWgqqoQCMMwUC6XoarqzIsyTVOEYQjP85AkCcIwRLlcFn8jdF1HEAQj
      rymKgjiOoWnaWgiuCBTf99NVd4K73a5YfKVSacRUsSwLURTBNE2xkMeBghOGYe7vs0LTNFQq
      lanft8bqo7TsE5gFg8FA2OHy4lcUBb7vIwxD9Pv9EW2dB2ptVVURRRF834eiKDBN80znE8cx
      PM8741WssYoohACMQ5qmImITxzG63e6IgKRpKoTC8zyEYYg0TeE4jgj9BkEA3/fP9L2KoqBW
      q83pKtZYJgrhA+RBXtyM1dNhTZIEURQhCAKUy2WUy2UkSYIgCFCr1VAulxGGofjMJDAESsh5
      E37fGsVFIXcAefHLoFa2bRuu6wqzKQgC6LqOJEnQ6/VQqVQQx/HUxW8YBkzTFAKmqirK5TIc
      x0GapuL4axQXhd0BZNAp1TQNnU4Huq4Lx3YwGCCKIrFY0zSF67piFxgHWWDk1+iM83vTNBX+
      gGmaI7tFURBFkYhsybvq64BCCUCeyWOaJgzDEIuxVCqNLGxqejm7OxgMpmp/+RiKoqBSqSBJ
      Eriui1KpJI6hqqoIl4ZhiEajUSghSJJkhO6RJEmhzv+iKIwAZKM/wEk0h//Pvi/v92mv54Fa
      nkKjqirCMBRRJL6eJEmhFhAVA3MrNPOmKYdZjy0L1apyqgrxpLhYszcxSRKoqgrLsuC6Lnzf
      X1hsXl4UmqaJyJH8umVZKBKzNrs78vdsAvC8x+ZPx3FW1l8qhAAwEpMVAE3TUKvVEASByO5y
      R1gUSqVSbtjUsqwz5xMuC3TYB4OB2Mn4Wr/fF0TAOI4RBAGCIJjpmLJZmQUjb71eD3Ecw3Xd
      uews80Yh1FUcx7nbZ7VaxWAwQL/fv7RzyZpO9XodABam+WlKXCTk6nkedF0f4TqlaQrDMKDr
      uhBq+jCGYUz9LppL086dWFWzcDXPKoO8h2GaJlRVXXpGttfrLSwfkKYpfN/HYDBAGIa5odvB
      YDDVn7EsS/gnlUpFUEAURUEURej3+zAMA/V6fa62OncbRVFW1jRczbOaAZVKBcBJ6HGWbXue
      YH2ApmnQdX2ux+Yip8nieZ7gQCmKgnq9fuYFVS6XRaSM2psLk+c/Ty2dpik0TcNgMBBRMzrc
      q+QMF0oA6ODSH+BrvNGX6WiVSiXEcTw3p5uRJibbmLCjxpadbnkBTTNDiHGafZGamYxdmqhx
      HMOyrJWqQCyMCaSqKpIkgWVZqFarp94zySFbBOI4FrSKeYCLnJQNfodpmiM5iWq1OvOiXxRm
      cWYVRYFlWSPnOi6Dv0wUYgfgzQRw6oYCmIkJugjM8ztZdMNdgGZdpVJBs9kUNvwq2NJnMWE0
      TYOqqkJByTysVairKMQOkCQJfN8fsVFJaTg6Orp0+x8Y8o7mHdmgLR7HsYjYHB8fi3xHXuHO
      qkNRFDQaDViWBUVRhF/DvM2ysXx1MiOiKBJZVvL/B4PB0jTIIrQXj2cYhojNm6YpCoGWrS3P
      C9ZcmKaJKIrEbsAdbpkoxA4AjDq7LGBfVnqdi3HeJpBhGCI2z2ujAGR5UEUFczrlclkkDpe5
      oxViByCnn3ZyuVxeamp9UQuQoVUKOAVBVVX0ej3U6/WVTSjNCi78VRHiQtxNbp/AcJEwDk6t
      edlQFAW2bS8k8qSqqshtcJFwtzkLgW9VwefG5N6yi4oKsQPkRT5qtZrwCy4b7AxRKpXm/gBZ
      55ymqYh86boOVVWXHv6cFdPuCctXAaDdbi9VAAqxA2TB6IjrukujQrC2eN5gppccHb522SFD
      kuXOo2Cy55mN/8vd97gLLAuF2AEYBiQURUGz2YTv+0sJgeq6LpJxi1iUqqrOnV5xVkRRBMdx
      5uJ38B5xocvVehQG0iQqlcql+jmFEIDs1k9nOI5j8Tc6jMymLhLM1i7K/1AUZSkCwNwDF6am
      aRdOvHEnYSaf9GjgpNGYXK4KQOQMzvt9MqYdpxACkAeaCgS1BqMoi4wS0TRYJU7LRUAeEgth
      WAJ60WhNkiTodruI4/hUpz2Gc7PhZNd1BdP3PNcRhiFc1xU+YjagkEVhBQDIZy8yStTpdBb6
      3avKbjwryEFieec8Fj6bjgVBICgc9NXkPAZ9g3kFEvg9rELTdR1HR0doNBoiaJH9nkILwCQY
      hrFQ/+AqZGiBIY+K96larV7I9KIGPj4+HinkyXuf/FN+XXb+zwpVVaFpmnCsmXRTVVUIJP03
      PrMrKQAkz7EMcBGIouhCtuoqQO5txEbDFzlWv98fKX0ct/jzBIMdNhqNxoXuKUPHlmWNdPYm
      wTCLQoZBZwEvfFFIkuTSKdjzBhVEuVyei+PJrnwEn0E2qZcHTdPQaDRGum+cB6VSSTRIkxc9
      zbtKpTJyDldWAAAspEMEb161Wl0JavJ5MRgMhLa+yOQbOUOdF62TZzvw/dkFzvAn6x/4vrzv
      mlU4ZEbtJBTiCfb7/VOSuwyQxLXozhOXAYY7p5V00kzKUyZJksC2bREVm7UnkwyaPYzekA9F
      pi8dWGC4DsIwFFGicRN7aPp0u100Go2J11cIAZCb3J4F2WKMi4KzBOr1eqFnA9BeJ91ikmJh
      nyBGu9h9jwIUhuGF8i5ZXhVrPwh28tY0TbRtYUHNxsZG7i7MzPnm5ubV2AFUVT3XZBbZyZvH
      7sF+oUUqSMkDFy4p5pPQ7/fR7/cRRRFarRaiKBJVXbSxLyIA0/I1DNGeBXJolzvcODOvEALA
      5rbkx8+Kecfo+fCLbPsDJ/ybaSHcrAJh8yxW4wEQXfkuMyCQPfdsHmEwGKDX64mMfRAEIhxq
      WdaISVSIJ0mNS4mepSkTP0cnb152O6uYiszLp3PIn+OEQKYsl8tl4TT7vi/u57J2Q/l7+/0+
      TNMUCz0bZqW5RgUm+w6FEADgJNpg2zYMw8jtDJFFqVRCq9USn72oljJNE67rot/vo9FoXOhY
      54EcSblIZVitVhO8KS6KPAZnp9MR5g13gjAMhSnIVjTLCE5wtG21WkWv1xMzG/IgP3fSZBqN
      xrDJwGWd8EUh32RmLukcTfoMt0H6ERd5WAzXLeOBh2EotDH/nTcUq6oqqtUqSqWSEIC8nYAl
      qMBJGxg26loFcOwVMPtORN5TGIbDKNgiT3BeMAzj1DAL8kz4IMfhvJz2LNimhMM4LgNypIW0
      YUZJOBfhvH6OqqoiYRTHMcIwHBHuvGztODNymUGB8+7q/FwhBIBJEsaG+ZBmWdh05KrV6oX8
      AMa5L6sqi46m3F+Tr1UqFfR6Pbiui3a7jUajMZMgsE1hnqaPogidTgeapomRs9kajLMwbLM1
      AKuKQnhyqqqKjsVyNnCWsGilUkGr1ZrLeViWdSn8H1nr+76Pw8NDBEEgTDguxkqlgiAIcHh4
      iKOjI1FKmQfG/hnGpfLgLsPkU7/fx9HRETzPO9X7SNd1mKY5NrEk35d5drGQzb55oxA7ADOw
      AEYKXkhJnuYHBEFw7hbqcruSy9D+tFF934fruoJ057oudF2HYRgissX3cypmt9uFZVnCyeWx
      qEBqtdoIZZgc/SAIYJrmiDlh2zYqlYooZAnDUDBsWZ88zfyY54JdVPF8IQQgTVPYto16vY5K
      pSKymHEco9fria4R49LiQRAgiqIz2cu6rotw52U7vZqmod/viw4RwEntg0zukscbEZyO2Ww2
      hZPLyE0QBLBtW/RUkpVCnoLIOrty4msSzXmeWHR1XyFMIGC4IOVmSrKNycjEuIfCSqSzPCBq
      v2VEfGjKyKYGFzyvgXQEQr6+7JSXRqOBKIpEm0W+/ywgT5++0GXY9pfxHYUQALn8kRnI7MKk
      yZD32bNSKLLDsadhXg+Kwuo4zlDbDgYoSUMAqbmB0UYBhmHkni8zpp1ORwzy4OId9y8PtP0n
      xdrl75wHsseZhy+Rh0KYQEQcx6f65DcaDdEndJyNLvPSp2FaSWAURYiiSPTvZAiRkZiLgFGe
      IAiGVUtffY3EdZH+6F8BGC0BNQwDURRB13XEcSz66zC7S0ECTsbCTipUkZG9do6HHWfz5xW3
      zMPxnXRO80IhBEDWWnTuqBFKpRIsy4LneblF6uQPyQOv88DozjRuPCM0YRiO0AF6vR6azea5
      HxRHIVGoS6USSj98H6U/XjeLVhiKlE0+3o9yuQxd1+F5HmzbFtc/K8Zxa2YJf85zwY4zZRch
      BIUwgVzXRafTgW3bp26O67rCRBqn4dkZYJzm44THWYbDMWsahuHEUruz4smTJ/j0008BQIxe
      4vFfvXp1krj5I8UbOFkopCV4nidIYMRZQojnCTXmfUYOV08yucZ9/rIcbKAgO4BlWSIi4/v+
      yEAMjvqcxs0hn/yiYNMquV27YRgXLinUNA1BEOD3v/89Xrx4gUajgU8//RQ/+9nP8PLlS7FQ
      yuUy3nvvPdy8eXNkoTuOA8uyRohq54W8OMcJ96RE1ywLOpvTmYXfxPstH++iu0IhBEAORVYq
      FQwGA1Hhz1zAJDCWP+59Z7XdSan1fV8Uk19k8TMuT67RjRs3UK1W8ZOf/ATtdhtRFKHZbELX
      dWxtbY3QFLhIoyjK3SHPg7zjywuWC/Ui0aBxgjPteNmwqGwanecZKL7vp6ve4Em+SGYu6ZSx
      AdI0dijt9OwuMCuzdBHgOXHC/aymVJqeUJKZxZ0nZAGQB5RnF+eqFQedJ1JUiB2AyZ0kSVAu
      l1Gr1URsm5MHp4G7QFYAFj0lcdyiZnIvr3cRG/+SANjpdHDz5k1cu3Zt5POsjwXyyWvnxbjj
      yEooa7IsiqpwFsj0i1lRCCdYURQxKFqmNei6PtPiJ5jMkR/WIhNd0zR6ticmQbJbt9vF8fEx
      dF3HixcvRt7jeR42NzfPdP1nhWz2ZJ1a4ixO9iqiEAJA252L1ff9c9m7iqKgVquNDJpeZnlj
      Nj5PHBwc4IsvvkC/34fv++j1eiP+S5qmIlfBLmfzXICMPjHMzIVPOnY2glPUxa8oSjF8AC54
      GeVyGe12GwAE4esstjDp1cu69jRN0e12BU1jXDZ30udZAriIRsBy4IH5iexCH7ebLlMgpvkB
      jOCl6R8Lii7x3M6NPKIWOSks7TurAMyj9fesyBvox6QbfQBex9OnT/H2229jb28Ph4eHuHfv
      Hp4/f45er4fd3V20223B6Mw+6HkuQFItZPpFFosyIy9yHXLAxDTNkQCHogxrydlaxTCMYggA
      0/0y4jjG0dGRmBPA+tRV6tjALsnMVmehaRrK5TKq1SrCMBSNXYEhge3Fixf44osv4DgODg4O
      cHh4iA8//PDcGee8TO8kh3dcgouQBWARWn/cOc7yfaZpjr1PIzPn5nSuC4XczRc4sT3Jw+Fr
      0+gOlw2aKdQ4Wei6jo2NDZFd7vf7ePToEZ49e4bPP/9cCJDv+/jwww9hGAaOj49zt3k5Fi6H
      Lok8LtSk4/D887K3ede5CMh0F/n6+Nq4z6iqinq9PpOSKIQPAAxDgzQX8m54qVSCpmlLH7om
      YzAY4PDwEACwubmZm3BjOHRSyDQLZr+zJYvZxSv/lB3a7PdnY/7ZTOs4TT9PBzjv/GfZAfg+
      /q5p2tiOcXlYHXthAhj+nHSzuSP0+/2lJbbywCoqFuTkgTOBWbzSbrdH3tvtdgW9wfO8kX4+
      pGDkaW5qQ+BkgWXvoRxdytsRaJrJx+F3MBvM1/l/CrL8t2mCInegyF5DViCzHajl3aHVap3J
      DC6EAHDgwjSk6XBy42AwQKVSWWr/zoODAxFpSJIE/qtvkZomyu3bpx4Qu02YpilIfQw7kioR
      BIFgg9Ik7Pf7uc51FpOcZS4w+Tj0p5hl9jxvZBwV6REyVyhNU1EmmeUQTXt23L0pAHl+xqTf
      +dp5FF8hBCAvzJfdmoGTm9Pv9xHHMVqt1lI6uLGLMQCoCqD++j8D3/wfRACie3+Fyl/9J5R1
      Uzw8y7JEk1maNtzx5Cos27ZHknmWZY10zpZtY1n7EvJCl00MYKiBmXRj6xf5vnY6HZEbSJIE
      zWZz5LgATi3gSXXD8vMjp4ufzRMY5iAmKTXHcVAqlUTnDNJLJpnEhRCAPIzTEvw/cwfz6ghx
      FiiKIiI80Vd/D3z1v8FHkD7+nwje/DeI7/0CURjC7vVE+FbWvCTYpWkqFiWL1wm5253sLObR
      FPge+Ry52GjeUGlk7yeby8o1yDQ1+V76MHLJZd5Cziou0skZLZPfw5+9Xk9Q1R3HEUX/8rUR
      tm0L5oCu61OffyGiQDKyaflsZpI/l+kIs/NypVJB0v0e8pkoAJLu9/jid5/ju6++RJqmCNME
      R8Gw0k3uYCdfA4lv3F3YqFZRlJEBdPw5LiokR87kBUgzZ1KWV/YDGH4msguRzyV7DRzGx92N
      phyPkRfl4cwA8sDkHqB5z5nnPcsQ7sIJAHBau1AY+Lqu66jX65fWxCqLRqOBVqs1HOSw+zHS
      0slGm5bKiHZ+DKtWQ3NrG7qu47nbw2f7e2KBsn+PDPoNlUoFaZqKCrJmsylMIRl5i4POOKnT
      juPAdV3Yto1SqXTqGJMWj67rI8eQFzxDrlyAstY3TVPUczBwIX+fLAQ0t7LNAWbJY5imKfom
      TUIhwqDPnj3LjWKk6bBAxDAMsQWzlUi/3xcJqGXuBlEUIfjq/yL5/L8BUJD+6b9DeO0j2J1D
      pCVNtHZUSiX0/tj4V9M09Ho9Me9KURSh9bLZbmpKRpCA0z1T6T/I87O4g9CmjqJIVKHNCnmX
      YIdm2v00QTjMAjiZ0yUPwaAJxvNljyNgSHcJggC1Wk3QMShYWceZx+cxm82muEZSZvLOv3AC
      INMK5PE+tJlNc+hcvnr1CsBQE2Q7nF02qLHlzmwARJcFCgHDvdy5aOpwIWTDo+O+y7ZtNJvN
      ES3LiM6ilAEL5/v9Pur1+kjmO6vZ+RrBHYE7h2EYwifgObOtIwMALCIiKVBeHwDQbDYFM2BS
      dKgQTnC2GZO8BXIgsrzIGSenZmJnt2WAbbyzI1u58GVNmKap6PTAhl/y7C3WP3Mx59ErxiXU
      qJEXBWrndrstOi/LfZUmhWJ5HfJ76EfxvGVfBoAYVMKOeYPBQBxHbqU5rZFxIXyAPDvPdV2R
      ZZUFghpze3sbGxsbqNfrSx1nysn13KH8wQB//+3XUP6o8duui3L3GM+ePRtZ9HI7Q8MwhK0v
      5zdYRil/FwBh5hCapgk/gaTBee4EHKPErhSyYE/DOGe2Xq8LE4oDybOfKZVK4r4AJ+uEg/Vm
      mRNdiB0gmwkkNE0TW3yv1xNdjtlW5DyD9eYNPgA6ZGqpBEMrC5PH08tIVRU7tWGNguM4whZn
      HyQ29qIPpGkaut0ubt++DcuyYNu2IHg5jpPr+GmahmazKezh4+NjYWtT4GZJNmbBHUfupUT7
      PBvOPAvo81iWNZJsI+Sdhf4LcNLEC8DIZ/n5bJKuED7A8+fPhWPFhcEuEdz64jgWGnNZ0Z88
      2LaNhw8f4t13352qdfv9/imzhqN9+JApCFEU4fr16yPRG13X0e12T+2IAERRPQD0er2RiBAX
      /1l3Bppk2bFDnKXA76ZwjBMCvs4O2EmSjJ1cTx9A7o+kKIoweXZ2dsT1eJ4nEnp5fghQkB2A
      3j4lm41rSRuwbRtbW1srNbeLD+jrr7/G8+fP0Wq14DgOGo0GHj9+DNu20W63sbm5KUyfFy9e
      4K233kIYhuh2u2i32/juu+9w9+5dGIYxkp3d2toSgi7b0O12W7RT54JmmJgJIponSZKIKBn9
      JfpbsxTo0JzKamjZ4aYP1Gg0xgoXP0endpZWLLIwUYFngwT9fl/MdBt3PYUQAJozNCdo+1Eb
      XKQj2yKQJAmOjo6QJAkajQaOj4/xzTffoNPp4NatWyJJtr+/j4ODA+zt7eGnP/0pGo0GHjx4
      gP39ffz5n/859vf3hTlDrhAA0YeIkK9dVVVsbW2h0+kI6jQn7HDwRb1ex8HBgVgQvV5PdJ6j
      1uZuxBAsdyK5z2qeY52XxJLzFBREHltO6k0Kw8qLn+do2zYajYYYhs0dI01TQYvgvRu3Pgoh
      AHKjp+xk81Va+ISiDKu7SC345S9/eWqhsLFWuVwW5puc0KN/w2jIy5cvxWwrtnJheJTOLc0/
      hg95Lq9evYLneWKRc6fgMZvNpugjquu6OA/uFN1uF61WS2hxCoNpmuI8+V15Dm22+o7H5nWS
      bTruWcohziRJRI30tWvX0Gq1cj8nj4CatEYK4QPs7+8DGN7IVqu1tLblZ8HBwQFc1xUO+UVA
      m5camsklmdJAMFbOnAIbh1E4Njc3AUAU3NOJ5aJmfoVa+dWrV0jTFJVKRbSiodObRzQ763NJ
      03RqpMayLKTpsHGw67owDAOmaY6lPqdpiqOjI7FWJqEQOwA1gGVZhVj8JLVNinw8e/YMr169
      Elr02bNnUFUVH3/8ce77meQjY5QLN5shp7Dw/YeHh4Ide/36dXG8bNSHCShWsJXLZXieh1ar
      Jb7L9/0RFug4Lk4eZKqEfM7jBmDQlDJNU5hQW1tbqNVqcBxnKu+fnbunCcDqeI0TwK1yWSNK
      zwpq4Uma//r16zBNE3fu3IGqqtje3saHH3449v1kfirKCYFtHOR7ZBgGbty4ITLD/DuTSBy2
      R4HVdR2qqsK2bWFu0llm71Ee4yzPQiYwktrM1/POn8emSWZZljCX5J0p73sYOp4l8VeIHQDA
      SJht1aEow/5DnG6Zh729PeEoR1GEN998c2y2mrsfNV6tVhshlJETxV5JNI8URRGRFVVVEYYh
      HMeBYRiinTwDCUxkaZoG3/dFdjWKItRqNRwcHAAYmqEMOeZ1u8guSjk0KmfzZ53w2ev1REaX
      uQ5G1GQuE4/pOM5I+HMaCiMAq9TtYRbQbj0+Ps79++3bt3H79u2ZjkUB4P/JzwdOTB5VVYV9
      zEVJAWQYEoAYwMf4PbVypVLB8fGx2Gl5vylE1WpV1CWwMIfZ6iyyJYsiBv/dEyhHh0h//OPZ
      byRwavhIVqkw58CAwKzaHyiIAFSr1ZFCkKIgjw7gui7u37+Pn//85zg8PMSvfvUrXL9+HTdv
      3sQnn3yCn/70p3jnnXdOfU628/OiLBQE0zQRBIHwD2guycmxrPNKJ5jx8ixpjc48K634fznb
      m60jIEZ2hHoNLI7I43XlnRsFVBYAeRJmv98XjdGiKMLm5uaZrIVCCIBcAVQEMAvJRSKjWq1i
      e3sbAPD555/DcRzs7u7CMAzcvXsXjx49QpIk+MEPfjByvHEjoLhYX7x4AUVR0O12hbkg/z2K
      opEqM5lKAJy0Q8z6FjIZjeQ0AKfMmTx7/FRcX3LCiWyBTvb7eS/lWD7NHmp8DjdhgOQsa6UQ
      AlCkxQ8MNf+4gXK2bYvk1y9+8QvYto1vvvkGlmXhgw8+QKfTEaFKghRnUg5Y60qK8GAwEMks
      NteiRgeGQue6rjB5slqaTjHriwGIaBPNH2DokDJbTPtbnlyZh/v374t64/fee09Mq7x27Roc
      xzllBsrnJifcZHtf5kRVKpUL1XwUIg9QNDiOIzo20CyZhDAMxfDpLGQTQ3Zc5YLzwWAghmQz
      Zs8FTM5Ur9cTNbwkhMm7gKIo6PV6Yrft9Xqi+gzASLE5r4sERNlnkKFpGu7fv48f/ehH+Jd/
      +RfhpDabTRwfDxmwf/u3fyuywRREXhNwEgFst9unviOP3HZWFGIHKBIY1eG2Ta07CYzQ5AmK
      /Fn26qTWl1+nmUJlViqVBC2ZO8XGxoaYKC/XDVAQWLObpukpX4C5AQoOqc+cVsm2LVlN/N57
      7+EPf/gDfvCDH4ikHDvc3bp161QuQE6MyRwhmfFJnNXcycN6B5gjqPmBobMrJ40mgRGMacUb
      cqmgDPJg8uYkEyzAMQwDrusKFmXWJyC/Ro7bM65OH0J2kBmOlTPTLOqxLGtqrx5mrIHTzbv4
      0zTNhXX8W+8AcwK1p8yxl3v2TMKkGcezfrdlWcM2LGMG5DFiwhJBlo6y0wRwYoplz41kxKzG
      VRRFmFUMTcrjXrnDHB0dYW9vD/fu3cNvfvMb1Ot1XLt2DXfu3Bn5ruzC53cskuy4FoA5gJqQ
      jhoL8z3Pw/Hx8chAjjywCP68yT6S5kzTnDoh8ujoCKZVxePDALeqCixjaF+z+GZjY0Ms9G63
      K+oNssPDIydAuWaIxcosLfMUPC8A2NjYwMuXL/HJJ5/g6OhIkNTu3LlzyjzM/k6fZFGdv9cC
      MAdQ65EhKTuXrVZLFHqMc4apSbk4aBNPM4lkkLdTq9VEc6hxLMmDrovHRymqCqCrQ/veMIyR
      9ofAMAF1cHBwahd7/L8+x8tHe7jx47vY/fm7Iz1BmYcATky2ly9f4vvvv8df/uVf4uDgQHSo
      yN6DbE6g0WjAsiw4jnOme3EWFMIHICV4FcOhSZKIKiym4AnP84RAUMNmy/QACFYmR8D2+33U
      ajV4nodSqSSOGYahcK6z58CC9Gq1ik6nc2oxZTFIFQTeSVSnVqudyp7StOl2uycLFMBn//X/
      wbc91Haa+NG//3ikOx0HEZqmOVMtdr/fx2AwGNk9KpWKcOp57xZFgizEDuB5nmjFN6/J7PMC
      +TWMnMiQoxu0vUlXYHTIdV3BCOX7SECrVqtiJCwXCG19GVzsZIEahiHi9eMWjZqoAM4AABVu
      SURBVKqkI+ZLXvkhw5KsvDs+PgYUBe/88gO8ePA93vjRrghfMhwp2+vdbhf/+I//iI8//hhP
      nz7FP//zP+P27dswDENMwrl37x6q1aqI8uQt9EXSYAohAOybQ8fStm1Uq1UhEMDykmUkZ+XZ
      3iSUybwahiZZcZUXJZEXrqqqsCxL7AxZM4XHBU5CiOQNyVQMsiTTNBVzlSl4k4ZJDAYD8TnW
      Yrd3t2Fdb+TONpZpC7quo91uI01TXLt2Dffu3RPFO3fv3sWXX36JdrstZj2Pq0nOtl2fJwoh
      ALxwVVUFKUtO6y8bFM48zUWeCnAS5qNJM06zcTEQ1MSTSvuAoS2/v7+PGzduoFKpoNPpADgR
      DC50Np2iEMyiPNI0xXfffYf9/X3cunULv//973Hnzh1sbW3B87wR6oZ8PkdHR3j69Ck2Njbw
      9ttvi1aMW1tb2N7eFhVdeYJNyN2+541CCQCxSiWRaXrShY5FJrJNrCiKCAtSYGVOfDYWz/fK
      xwcwNrojUwcYCeKuU6vVchvtNhoNVCqVM4dekyTBG2+8gcePH4vo0O9+9zu8ePEiVwCq1Sp+
      8YtfiGtjRIyL3TAM2LYtyhfHPUsGFxaBQgjAKkNuz8ftPZsRHQwGog0Je5mSqizbvOzSLFMW
      uP1nuzcTMhGNnBnf99Fut0UxPItzSKOetpPkoVQq4Yc//CEA5C72PMh9mRiqBYaKwfM8kQBk
      wc04geQx8uoPLopCCsA4WvAykCSJKGekxmWzV0VRRIlhvV5HpVIR1Vf9fn9kTCoA8X4AIxqP
      ndHyikh4LzhTgMJI8hwpzvOIolEgZXr1rFwcJrS4k9EUlAl64yCzP1mHMC8USgAYEWHHYCad
      srhMwdB1He+//z6ePn2KSqWCMAxFVpjjT6vVqtB4dEa5E8gOLABR2MJMLQDREZnkNPn65Prg
      7FQXz/ME9ZoaOE3Tc5sTz549w/379wGc9CBqt9tiZ5gFbF7GXaDf74/t7MDzZucMVVVFKHle
      z7gQAkDN8+rVK3HDGJumtqV5wXYhlwVFUURtLzvYVSoV9Ho90Wqk2+2KSJbv+yLeny0KYUZZ
      1vZ8jRyebNiRx5TNJsbT+/3+iCMMQOwS58G1a9egaRp2dnbw6NEjKIqCg4ODmQWAjreiKNjY
      2MDx8TEajcbY7t3yjqOqqijnnCcKIQD7+/uibw4zrsBJooY8FBKrWq3WpXeDpmbj0AiGPOnY
      xnEMXdfhOI7g7mS3fmo39hTinDC+l90Q5Ewzw5rZnZB5iW63C+CkQe5FM6q7u7u4ffs2NjY2
      sLOzIwIAs4B+EncANjcbhzzaNhXEvDpdF0IA2C+ediPJW3mL/Pj4GEmSYGtrayT+fhlotVoI
      w1BkbAkyPUkQI6efWp6xduCkvDGPVtFsNuG67kjEhCFSChgw2o+/UqmIJlzyIIqzQA7xvv/+
      +wAgzJDbt2/P1H4EgKB7sLB+0uKXB3jwekzTFEXy80IhBIDJIzkeTtOAVVDAyY6QJAm+//57
      YYNvbGxcSksVTdPwxhtvwHEcoRm5KGmjt9tt0erj8PBQRIiomdM0FcXm9BcMwxDNgYGhScXs
      LBc525hko0++70NVVVQqFbEjnRX379/Hm2++iS+//FI02X38+DHeeustPHz4EIPBADdu3MBH
      H32U+3kWvJBv9PzbPWxd34bVyD8f1iww9s9yR3a4fi2d4Lykl1wMzq2xVqsJR5QhwaOjIxiG
      IRzCRZ9nvV4XY4om9brc2NgQ5y/zd7jYmfllZIhCPBgMxIQU7iSkE8i9NtlCEYAIGpwHN2/e
      FGzMd955B1988QVu3rwJYLgT7O7u4uuvv8Znn32Gv/7rvz71eVVVRUdqy7KgeoB37MJqjGbB
      qen39/eFqZTNDs+bFlEIAbBtG8AoVVYupJAfMvtHMvFCwWGH6ctqnT6LjcpzYTtxToJktIOa
      L3vOzDW4rivi59mxpXS2aTpdxGbudruCp/Pq1Su89dZb2N/fR7VaRaVSwc7ODm7dujV2IB2H
      hFCr1+9u4MW3XyBRfezc2gVw0hqd75E7VMjg9cmd8S6CQggA+9XI2oAPPAgCuK4rhIAa1zTN
      EZ5NkiQiybQK+QMZjHawNSEX/qQpK/QfGAHL7pCMkM0yV2wSSqUSPvjgg1Ovb2xs5L4/794q
      iiK6Unc6HcRxjO8f/hbh7j3s3NpFmqY4ODgQ18sBG8yYM3yrqqrgH9HnmcZ6nYZC0KGfPXsG
      3/fh+74Yf5o3TGIaGJlhRnRVWKVBEODw8HCksoqLeZzmZoKt2WzC9/1TnJ4gCHDz5s2lNhST
      /RbgJBdB5qf8DDzPG6FPk7tEZivfT7oJFz6r8MS0TSk4MAsKsQMwitFsNkV0ZVzLwUlgKJHa
      kQ6V3GR2GaBjf3R0JJxlJr7GgZ2fq9UqarUaOp0OkiQRgrC9vb30bnqDwQC//vWvsb29jZ2d
      HbH7UqjlZ5g19chqZeMr5gpkE5e7Jt9TLpfF8+Wssuxzze6ShRAAxsIBiLCe3O7vPMdLkkQk
      iYChyTSPVubnAU0Vthlh+G8S25U8Gzr/7BzteR62trbOvDsuAoxieZ6HR48e4dmzZ7h+/boY
      zsEEX6PREIlB3/dxcHCAv/u7vxOmk67rotiInTH4DOkPsd8QTcNutyvauJA2L5MTgeF9L4QA
      yGYAe+Ps7Oyc61jksWTBrfQi4cKLgFlsCqXckycPdEqz/CC5K9wqgCWSpmniww8/xDfffIPj
      42Ps7g6dX46+8n0fu7u76Ha7eOONN0TEioVE8r3IRrNYQVar1eD7vkj+cXZxEASi1pmJVN7f
      QggANaHcHvy8x5F/ZkGu0XmowvMAhZqanHwetjSRIff3l6kUq1IjAQzv809+8pOR13RdF9lk
      UrXle81OcTJDVlaAeURIanaOY8q2h4njGEdHR9jc3Bxp71IYAWAjqIs+3Fm0+jJ9AdquDIGS
      NCdzYgh5irxMOV61CFcWpmlib28P5XIZh4eH6HQ6ePfdd0/laLL1xLx2OUomg79TWVC4Go0G
      DMNAp9M5FQUsjA/AxQBAzNJltlROEk3CrAtjUnngoqEoirhWuRieA59l4aRfFMcxbNsemR9A
      ztCqRLlkkObB2ofbt2/nOuvM/DIyRkYsMLk0kpE+mjgMcGxsbAjTSG5MUAgBqNVqYqHLXdCY
      C2DNanbhyjvGLIua9vMytei4Hpue54lxqrwuJvioCJgPiKIot3xwFXYITss8ODjA9vY2bNs+
      1SCLoMDTBMpmhRlWJUVG/oyiKGKgIDAUKGbeZRRCADgilO1DKOWcJl6pVMTfZJPgLA+7XC4v
      vQ07+U1ZMCFUqVREJRkLXugLsAkubeG8YzNzvMyd4c/+7M/O/dnssxkMBnAcR0SFyuXyiODn
      MUezx1i9PXIMqPnktihyc1fTNAXPXp7PNatNz6jKMkFiXPZ8Ge+Wi+k3NjZESSELcMb16U/T
      FEEQoNfrTe0ctyjEcYx/+qd/QhiG+Pbbb/Gb3/wGjuPgxYsX+OabbwTdZRoGgwFs2xYNiOXh
      e9mELoV+Un+iQuwAwNAPaDab6Pf7iKJIpMaB05EBuSHVrFi2aQBApPyzQisHAQjODOZwCNd1
      R4pe+F6OSKJgLUv7M9xp2zbefPNN2LaNhw8fotfrwbZttNttfPzxxxMJe5wRnB2qwZ9kvsoz
      kqMoQq/XG9tRojACAAyFgHW033//vSB7yVqPXREYe5YxKYq07KwpMFzU2a7NNPnYJY6Lm+ND
      6SAzFs5eQ1wYjuOc4tgsA91uFw8ePECr1cLh4SE2Nzfx4MEDNJtN3LlzB59//jls2z41HITg
      Qs6ri+a1UkBIkee9o8LM5SkVgQuURZqm6Ha7ODo6EhlPboXysIVsNnScACiKgq2traWbQGEY
      Clq0jF6vJ5iRYRiO1MSyIq5SqWBjY+OUBuUYVEaNZm3ZPq/rkQuDzgK5Ax5NmUnkwHHgvWw0
      GrmNt5av9s4BRga4nfMimSUG8gfUySFEGdOqky4L7OKQdYTlqYcMH8qCT7pxnvmQ3R0vE+Oa
      FswCCnsURYImnjc/TI6I8XPZ56sow4k3uq6fCnMXUgAITlbhkGe5LR8dRArEJPNnVQZwM7rF
      awJON8QiJbjb7YpGtPxMdseTe//TfLpMnDdrT1NGdl7H0ayHi38ABYBSOj1BRhYOVt7JlXPL
      V3vnxGAwgK7rYvtnwyc6kvV6XRCsZM3Pm8Hyus3NzUsvoJ8ELnBCHnYHnCSS5Mnp44Q7y59Z
      BSGfBY7jzNRZGgBCdw8PP/2PePDJf4DvPAEwGvnLXrNMmAMKLAAM7ZEjw6EUdBgZdSAvROaQ
      t9ttbG5uisZMqwbZUWWNs9xTiMlAOnpkg2ZBYWKupAgCQM7XrHj57f+Ac/gAztEjvPz6v+ce
      jz/57/j4WOywhTSBZHsv2zGNibAgCAS1mKl3RRn2wV8ljZ8H+bpo8wMnZgwXNQdzbG5ujm0Q
      xu7My3bwZwX9u3HllVnUt/4Upa+GDQTqW3868bgEQ8OtVquYAgCcFMnILTv4k2Ev9tWXq4hW
      UeNnIcexKbiMYMhVT3JYdBxWwbk/K7Km6yS0b/xr/Kt/+1+ANEWl+RaylqBs/sr3TbRcn++p
      Xw583xehQe4GclUXq4FUVR1pHzJuFu+qgd0k2Aku20KR118ul7G5uVnIRT4J48pAS6US9vb2
      RKe4IStAhVF7E9X22yiVhq/Zti2aC0zqOAcU1ATKm06e5+zQLqb0NxqNQggAALTb7dzrZK6D
      SS0OnLtK0HVdCD9w8mzjOMZnn30mGgG/fPkSqqriyy+/xJ/8yZ9A13U8f/4cGxsbsCwLT548
      wQcffDBSwE9LQNBpLv/y5oNxBRGMiNBkoP1sWdZKVUpNA5tZ5YHTcZZJ3V4kFEUZMVW5aJ88
      eQLTNPHgwQP86le/gud5ePnyJZrNpiBEfvXVV4I9+4c//AF7e3u5jrAwM4uYCXYcB4eHhyMx
      fnnxsxuBPKjt+vXrhVssnucJDrsMTdNEZvOqgo20ZJxnPly20wZ9xq2treEuOrczvkRwugqR
      Rx7jgDkulqItfuCEoSq3g2S4tyim3HnAXAevlzshXwNOsv6KoqDT6aBer8N1XdE5ZFJTAPqF
      QAF9ABLdZNs42+qCcW+aQUVdLOVyGVtbWwBWg616WaC/FkXRCE2FLR8B4OHDh7h79y5qtRoe
      P34sTJ2PPvoIv/3tb/E3f/M3I8eU80CyxVM4H8DzPPi+P5IskjO8RBAEhYn6TMKs9QxXDZqm
      iSKfPFiWBdu24XkeHMfBz372M0RRhK+++krMbSZo+rBgSj5m4XYAJn+yDqJcNE4n6nVcOK8L
      arWayOru7u5C0zT8xV/8BXZ2dnKLioD8QEjhBEBV1dxUOZNcnH1bdM2/Rj5YNsoGW9euXRPV
      YaTHcPenEtzY2BDcsSwKJQB57UFkXGT8zxrFQBzHuH//Pra3t9HpdLCzs4N/+Id/wM2bN+E4
      Dp48eYIoinDv3j188MEHojxWppbIKKQAZLc31ste5bDgGkNwARuGgb29Pdi2jTRN8eWXX+KN
      N97AtWvXoOs69vb20Gw2ce/ePdi2LfqmZk3nQuUBBoMBer0eDg4ORjKgbHS7FoCrDVaFPX36
      FO12G57nodVqCXqI7/totVpi0qbc/Nh1XbRarWL7AExhZ7cxuRXKGlcXpIFzTtkkyEXw9Anz
      FH2hBICNTeXZAEXiuq9xMVxEyY1LjBVKAFgjKttxHDq3xhrnQWESYWRBAqNZUTk9vsYaZ0Vh
      BAAYOrtsekWcpX50jTWyKJQA5HUHbrVaK9HU6qqCHTeuKgolAMDo4uf4nDUWi7UArAjYB4cP
      pN1un4r+yEUPa1wck4Z9XwUU5spIa65UKoLvkdfpWOaFrLHGNBTKeDZNE/1+X9CcHcc5ldyQ
      24asscY0FGYHACCyeaQ79/v9U92CL8KfX5tOrx8KJQCKoqBer4vGSUEQ4NWrV3ONVKwF4PVC
      ochwBGtGoygSnZPXJs8a50GhfACCza/OMwtsjTVkFFIAiPXCX+OiKJQPsMYa88ZaANZ4rbEW
      gDVea6wFYI3XGmsBWOO1xloA1nitsRaANV5rXEkBYKaYjVTXWGMcrpQAsG641+shjuN1pdga
      U3FlVgiHKcRxDMuyrnQRxxrzw5URAE4CqVara4rEioETPTnUUJ7RtWxcCQGIogi+74vxSGvT
      ZzzoH7FR7GUUDyVJIuY6EKzuk7t402+Th2JMgkxd51TIs15LoVcKb4Dv+6IwxvM81Ov1ZZ7W
      SiMIAvT7ffG7aZoTxwmd5bhhGIoRTpxwz0GF2cIlznFjR295LGwURdB1XRQ/ydPjKbyWZSEM
      Q3EtHKdEodZ1fSYhKmQ9ABEEgdAuRK1WW3eKyEBWFHEcj9RSl0ol6Lp+7vaSSZJgMBiMjDWd
      F7igszPhgGGxft4Y2ex7gGEzhXFrvNA7QLlcPjVJcL34R8GZamEY5pZ8JkkC3/cRBMGI6cjB
      fIqijDUp+VnZtJn3uY9rejZLiJvvieNY7AxZFFoAOBpVBgehve6gVp41F0LfgJD/3263AYzW
      X4RhCNd1C1NC6jiO8DlUVRXmVyEFgCNwuA3KCMNw7HZ31UCN7roudF0XpaFRFKHX683te7rd
      rhgwYVkW0jQtXOsZjlaSUcg5wUx2lUqlU1oLuFgL7UWCi2Xa7pQkiXDopr1PnoZI57BcLs+9
      Vyrt78FggDiO0e/3r0Q/1iRJiiMAjPNrmoYoioQAZJ2jSTPElonBYADbtlGr1UacOyKOY6iq
      Klq9MFbOLZst4ZMkEW3isxrY8zwhCItAHMfo9XqF0vzTUKgoUJIkCIJgJOqTxbzCehcBhZX/
      FEURjX0vAoYE15gfCrMDRFGUGw7LYlHab1awNeMiiHjrxT9/FEYAyuWySJJMwjIXSZqmc3U+
      11g8CiMAwOpqQGYqpwnnGquHQgiAnDJXVXWilpV5LpeBJEngOM669qCgKIQAMFNpGAbK5bKY
      +j0Ol5EIS9NUxMfXKC4KIQAARC/QaZo9Lzu8qPNZL/7iY/UC5jmQzYskSSYuvOwk8HlCZiXO
      I6y5xvJRmB1gVizSUXZdF1EUwTCMtQBcERRiBzgLFskGVVUVaZoujP24xuXjSgmAoijo9/sr
      Gy5dY/VwpQSA5LhutztXE4Vaf635rx6ulAAQjM07jjO33eCqD4x+XXElBYBgj6CLLtxppXdr
      FBdXWgCAoea+iOkShiFs217THK4orrwAAEOevOu6Z/7cYDCA4zgLOKM1VgVXLg8wDkEQiHYZ
      07B2el8faEUgcc2LcuA4DqrV6tT3hWF4qtvEGlcT/x/3/QkyleTXVAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Non vs Poto' width='183'>
      iVBORw0KGgoAAAANSUhEUgAAALcAAADACAYAAABGSfLmAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAASHklEQVR4nO3de1zUdb7H8Tcz3IQgGQ2VPCIqCJalD0a5GBpecG1JVFISHiGBhqKWp7T2
      6KaPXClrdc3SVTySoLIHvNOmJmYkJgiJ4aKooMKooDKCKzDDZZj5nD9Q5DIsUiDMl8/z8eCP
      md93vr/vwMvhOzCMRkREYExAks5eAGMdheNmwuK4mbA4biYsjpsJi+NmwuK4mbA4biYsjpsJ
      i+NmwuK4mbA47g6WskoOufzRhxemRWxFRlndMUVsEOSrUjp3ge0mBavkQYhVtPV2tVDnn0Ls
      pxGY5vVbbt8yjvspGLp4P86ePYuzqfux8LmDeG9FIkp+z4SKWATJV0GIfxaKBLy/8jjg5QHn
      yvadmuN+mkxtMWlOAAakncPFzl5LV2EfhK27VmOOlz3M2nlqjruzFaUhaukb8PaQQ+4Vhrjr
      tQ8PlCFjQyh8vB5uZ5bG4l9lAFJWQe7/Na7gMN6XyyGv3wrU4vr+pXjD2wNyuQe83/oMP95+
      NFctbv/4Gd56dOyNCLwz8y+PvwOUZWDDbK+HW6QS/PDJmw/PK4eXz0JE56jqplHEIkg+D6s+
      e+vheqdh5ZHbqK2/M2XI++4zhPp4QS73gO9fUlCGWuRsngH5gv2Pv1uV7McCjw9wpKyDP7fE
      OtTJla4UGFNQd6H6LiWt9CH3Zd9TBREVxASS69xtlF2kIg1V07n1vuS++jQREd3ZN5/cA7+k
      cyUaIk0JnWhwOyqIoUDXlXSywXk0Z78gH+/36cCNaiKqpivRweQ+fStdISK6spWmuwfTpnMl
      pCEizZUomuW68uE8gRT83nsUn6MiDRER3aOL5/LoQTURkYZKDrxLrsG76Vb9eefSzusq0pCG
      Ss59SYHui+jQPSKik7TS1ZdWHK27rabkAL3rGky7bxHRnXgKcw2j+Dt1a723bz65rzz58Hz1
      nyla6RpIjz5V7YEfuZ+CK1/71z2hHBeAKFUgov48GZaPDtoNxYv9LGAMU8h6WUNTWwtAhczU
      X+AZNBcjZcaAsQzjQwMx6MdUZLZwjtwzKTD1D8P0/zIFYAqn0DD43EhBmgJQpKXgxvg5CB8p
      gzEAYzMzGDe47bh31yHAxeLhdSao/ddWhE72gFzuDp/I00BtbYNHZzvYO1jAGMaQjZwGn0Fp
      OFe/x7KGo8sQWJsCxrJe6Ila1NYC6OOL4D9eR8KhXAAl+OmHK/D7o2ejNXSEjp6foe4JZdwc
      +85dhLFxC1/sIRgyqMGRzCgsiTXDsoSTmGJrWrcNimppUi20tSYwbrUiS4wNCsCXf0pG7rSe
      OHo3AB+O7vj0+JG7S7KEq+copMZtx6+ltUBtKX785h+4Pt4TrgDwzDOwxlVczq0BHj46OrmP
      Rc3+aBy8WQOgBrnfRCNpwFh42APPuwyH9anE+mPF+bfQ4na3ugqVlr3Qt6cpatX5OJV2tekA
      VNcAQA1u/nMrEpQ+GPfyE9wlp2kIkCVgy9rjQMA0OP3Gz0xbcNxdVB//z7FRfh4f+blD7u6H
      rxpuZ3r9AXPnSPB/czwh9wjH/ruAset/Y8tCI8QFj4NcPg7hyc6I3BwGJwDGoyOw9vVifDXL
      E3KvWfjiVGnLJx4dhEXP/xMRnh6YFL4DRea9mww4jb/6ekEu90RgtA6hW1dgrKXemZreI/jO
      lOPMKWDSq33qr1XEBj38HcD7OIwr+Nq/7olsu/z4v/2276zLqiii6zcfUN1zRBVd/8d8cg+L
      b/s8ep7IPrm6J7mvPHpS/BTwnrs7qLqInUsi8X1BOTQwgZXLVER+4f/0zq+IRZD/17jhGIT1
      UQ2eTHcwIyJ+awcmJt5zM2Fx3A2o1erOXgJrRxw3ExbHzYTFcTNhcdxMWBw3E1bXjltbhdvn
      j2Lnxo+xJDqr6UHcS4vGisXhCI9YgjUJOVDVH8tCdKPxVciO+QS7czRPZdmsa+jScd85sQ27
      L/fGpPBpGN7sYBK2JdtgTuTfEbVxOV4tiUVsepXeeVRZcThgGoDZw0w6fM2s6+jScff1eRfL
      Akahn7m02bH81F8wYJofnKylgIktXnnTB+W//IpmeauyEH/MBsEBzmg+CxNZl477P3lwX4bB
      gxrkKnPBC8YlaPx6NxUy447AZpYfHLjsbsdAXzhVjerqHuhh3vA6CaTFd1EMwA4AMrYgPAMw
      d4vAOj1lt/TbyPLy8g5YL+sMBhq3GczMKlFZBaA+cB20tn1g++ji6AWICnNE2qbV2Hv5RQQ6
      Nw7cwsKi2axqtRpWVlYduG72NBnstuRZm1Jcu659fEXpJVys7QVZo1GW8Hh7NioTYpClAutm
      DDZuB89RuHEoEbllWkBTjJ/jk2A1aiTMmw60HIGQeX1wZEcauO/upUtvS7Kiw7El4/HljAwA
      GI0FUWEY0dcH73jHYMOKCNzT9oDj5EVY4NYsbQCA1G4KQgavw6aj9lg6xY5/atJN8B8rNKBW
      q/XuxZlhMthtCWOt4biZsDhuJiyOmwmL42bC4riZsDhuJiyOmwmL42bC4riZsDhuJiyOmwmL
      42bC4riZsDhuJiyOmwmL42bC4riZsDhu1iYKhQJjxoyBsbExbG1tERsbC51Op3esUqnEmjVr
      MHToUOzdu7dN81y8eBFyuRxSqRS9evVCTExMm9fKcbMnplKp8OGHH+KDDz5AdXU1zp8/j4MH
      DyIlpfl/GllWVoaFCxeif//+WLlyZZvmuX37NubNm4fly5ejpqYGeXl5ePXVV9u8Xo6bPbH7
      9+/jueeeg5+fH6RSKfr164ePPvoIycnJzcZaW1tjz549CAkJgampaZvm+f777zF27FjMmDED
      UqkUMpkMAwcObPN6OW72xCwsLHD58mUkJydDp9OhpqYGlZWVyM/Ph0bz5G8P3do82dnZ8PX1
      /d3r5bjZE5PJZIiMjMTixYthYmKCnj17Yu3atbh79y4qKyvbbR6VSoX169ejV69eMDIygpOT
      E5KSktq8Xo6btYmbmxsuXboErVYLtVqNNWvWwN7eHtbW1u06T3BwMG7dugWtVoudO3fi888/
      R1FRUZvOwXGz3+XkyZNwdHRs13leeuklSCQS9OjRAxKJBO7u7nBwcIBCoWjTnBw3a5MLFy6g
      tLQUOp0O3377Lfbt24eZM2e26zwTJkzAli1bcOnSJeh0Opw5cwZKpRJDhw5t20mI1VOpVJ29
      hC5vx44dJJPJSCKRkLOzM505c6b+WGZmJo0ZM4bu3r1LN2/epP79+xOARh8zZ85sdR4iomPH
      jpGjo2OLx58Ev1dgA/xegb/P+vXrYWVlhXfeeaezlwKAtyWsnZSVleHBgwcICgrq7KXU40fu
      BviRWyz8yM2ExXEzYXHcTFgcNxMWx82ExXGzFp0+fRouLi6QSqWN/qAgLS0Nzz77LIyMjBp9
      6Psx4N69e5uNMzIyQmRkJAAgPT29/hxNXyC1YcMGWFpawsHBAefOnau/Pj4+Hjt27Gj9Dvz2
      31WJh39D+didO3dowoQJlJaWRlqtlnJzc8nb25uSk5P1jl+zZg0dOnSo1Xlrampo0aJFlJmZ
      SUVFRTR58mQ6c+YMabVaysnJoYkTJ1Jubi4pFAry9/cnpVJJJ06coHnz5pFWq6Xi4mJatmwZ
      VVRUtHoufuRmeikUCgwaNAju7u6QSCRwdHRESEgIlEpls7FFRUVQKBSYOHFiq/NmZ2fDzMwM
      I0aMQEFBAby8vODm5gaJRAIXFxfMnTsXKSkpKCwshKenJ3r37g25XI5nnnkGFRUVSExMxNSp
      U2FpadnquThuptcLL7yABw8e4IcffoBOp0NeXh6SkpIwatSoZmP37NkDT0/PVoPT6XTYtWsX
      fH19IZFI0Lt3bxw7dgwXLlwAAFRWVqKyshLXrl3D888/j9TUVNy7dw9nz55FRUUFlEolqqqq
      4Onp+WR3oq3frkTG25LGlEolTZgwgQCQvb09paamNhtTXFxMoaGhVFJS0up8ly5dovnz51NN
      TU39dQcOHCA7OzsCQDKZjLy9vSk4OJiIiLZv305WVlY0ZMgQys7Opm3btlF+fj6FhoaSiYkJ
      TZ06lUpLS1s8Hz9yM73u37+PJUuWIDIyElqtFsePH8fGjRuRnp7eaNzhw4cxfPhwyGSyVueM
      i4vDa6+9BhMTk/rrpk+fjsLCQhARSkpKsGjRIgwePBgAEBYWhrKyMuTl5UGtVqNnz564ePEi
      bGxsoFKp4OrqisTExBbPx3EzvZKTk+Hk5FS/H3Z0dIS/vz+OHj1aP6asrAzJycmYNWtWq/Pl
      5+ejsLAQ48ePb3GMTqdDUlISXn755UbXq1QqfPfdd5g8eTKKi4vh5uYGExMTTJo0CaWlpS3O
      x3EzvQYNGoRTp07hwoUL0Ol0UCqVSEhIgL29ff2Y5ORkjBw5EnZ2dq3Ol5iYCD8/v0b78tra
      WmRlZaGyshJarRabN2/GtWvX4O3t3ei2+/btg5ubG6ytrWFra4v09HRoNBocP378P3/HaPtO
      TFy8524sMTGRHBwc6vfDq1evpqqqKiIiqqiooMDAQMrNzW12uz179tT/UQIRUWFhIQUEBOjd
      l3/88cfUo0cPkkql5OnpSQUFBY2OX716lZYsWVJ/3qqqqifec/NLXhvgl7yKhbclTFgcNxMW
      x82ExXEzYXHcTFjGnb0A1jX5LY/v7CW0WeKnbza6zI/cTFgcNxMWx82ExXEzYXHcTFgcNxMW
      x82ExXEzYXHcTFiGG7e2CD9t/hhLIsIRvngFNh+9ClX9wSxER2c1GFyF7JhPsDvnyf87OWb4
      DDRuLS4n/C9yXo7A2q+jEPW3pRhTshOx6VV6R6uy4nDANACzh5noPc7EZKBxK5FfNgKvv9IP
      5lIAJjYYMXsGzDJ/RbO8VVmIP2aD4ABnSDthpazzGGjcPSHTpSLpl/uo22hooCohGFfcxu1G
      41TIjDsCm1l+cOCyux0DfVWgOdzmzEHBV5F4f3s5aqQ9YDvEBc/eN8aDR0MytiA8AzB3i8A6
      PWWr1Wq9M5eXl3fcslmHavq1M9C4AVgOQ8D/rENA/RXZiPn0Fvo+ujh6AaLCHJG2aTX2Xn4R
      gc6NA9f3h8BqtRpWVlYduGjWkZp+7Qx0W9KcNuc88gbY47lG11rC4+3ZqEyIQZaqhRsyYRls
      3NV3buKW6uGOu/hnRMXewLiJw5o/abQcgZB5fXBkRxq47+7FYLclZjX/wq5VX6CgvAamVgPx
      Suh78Omrf6zUbgpCBq/DpqP2WDrFjn9q0k3wm/I0wG/K8xj/mRljXRjHzYTFcTNhcdxMWBw3
      ExbHzYTFcTNhcdxMWBw3ExbHzYTFcTNhcdxMWBw3ExbHzYTFcTNhcdxMWBw3ExbHzYTFcTNh
      cdxMWBw3ExbHzYTFcTNhcdxMWBw3ExbHzYTFcTNhcdxMWBw3ExbHzYTFcTNhcdxMWBw3ExbH
      zYTFcTNhcdxMWBw3ExbHzYTFcTNhcdxMWBw3ExbHzYTFcTNhcdxMWBw3ExbHzYTFcTNhcdxM
      WBw3ExbHzYTFcTNhcdxMWBw3ExbHzYTFcTNhcdxMWBw3ExbHzYTFcTNhGW7c2jJkJ3yGpYvD
      ER6+GCs2H8VV1aODWYiOzmowuArZMZ9gd46mExbKOotxZy/gt3pwahsOSqZhxd9cYCOpwu20
      b/BlbDo+iXCDeZOxqqw4HDANwJ+HmXTKWlnnMNhH7hsFNRjl5QIbEwBSc/R75XV4Skrx76YD
      VVmIP2aD4ABnSDthnazzGGzcw9wHIuPwL7ivAaCtwu2fj0AxaCT6NhqlQmbcEdjM8oMDl93t
      GOy2ROociKWaGKxetB3/hjn6eM/FR282SDtjC8IzAHO3CKzTU7ZardY7b3l5eUctmXWwpl87
      g41blRWD6Otu+NOmkLo997l4/H0XsPit4XV77tELEBXmiLRNq7H38osIdG4cuIWFRbM51Wo1
      rKysns4dYO2u6dfOQLclSpw+osXYGQ323KP+gBfzM3C50ThLeLw9G5UJMchS6Z+JictA45Zh
      wMBb+OnEdag0AKDB/Uup+FXbG7KmQy1HIGReHxzZkQbuu3sx0G2JFM4B81C64xus2H8TlVpT
      WA0cjdmLAzFA32i7KQgZvA6bjtpj6RQ7/qlJN2FERNTZi+gq1Gq13r14d+S3PL6zl9BmiZ++
      2eiygW5LGGsdx82ExXEzYXHcTFgcNxMWx82ExXEzYXHcTFgcNxMWx82ExXEzYXHcTFj/D1QZ
      T5K7enqSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Photo Activity' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rating' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAV2UlEQVR4nO3d+W8c6X3n8XdV9VF9sA8e3bwpkqIO65ZGtiTPaC7HHjljeda7SZzD2GwQ
      JAvsGotdYA9sjsX+A7tADiROggSYABM7mSQwNrZ2bM1Ys1Y4oxnZInVRJ8mmRPE+mt1NNrvr
      2B96JI8kUuLRzRa7vi+AGA1Z9dS3gfp0VT311FOKbds2QjiUWu4ChCgnCYBwNAmAcDQJgHA0
      CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmA
      cDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0
      CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNFe5CxBipT744AMGBwc5ceIE8/PzpFIpWltb
      SSQSTE1N0dXVRSwW4/bt2ySTSUzTxOVy4fP5mJ6epqOjg7m5ORobG8lms9TW1soRQGwelmXh
      8/k4ffo0PT09XLhwgTfffBNd11FVlbt37wLQ1tbG1atXGR0dBeDUqVPYtk1/fz/d3d18+OGH
      BAIBABR5UbbYLO7cucPIyAitra1MT0+zuLhIY2MjQ0ND7Nixg0wmw7Vr12hpacHr9aIoCpFI
      hMuXL9Pe3k4mk2FkZIRdu3aRTCbp7++XAAhnk1MgUbFs2+bMmTNks1m6u7sZGhri7bffxrKs
      B8vIRbCoWIqiUFdXh67rhMNhWltbmZiYQFV/9r0vARAVy7IsBgYGcLvd9Pf3U11dTVtb20PL
      yDWAcDQ5AoiKdPbsWYLBILt27eKdd95hx44dzM7O4nK50DSNeDxOLBaTi2BRmVKpFHNzc8zO
      zrJ//35SqRQ+nw+v10t/fz+9vb2AHAHEBjGNPLlsFiO/iJHLYeYXyZgubG8Vbk3F49bwuDWC
      Pg+auv7v5Wg0SiAQQNM0rly5wvbt27l48SIvvvgifr+fRCIByDWAKDLLNJmdGGFqOEFyYoTk
      +AhzU+OkpiewLBPbsgrdkLbNdXUr19WtqIqCqiqoioLXoxGPBmmJhWioCdJcF6KruYZYNFCS
      euUIINbFtm2SE6OM3O5j5PY1xgZvspCaZTXfq5ZtY5mF5XOGSWp+mlvD0w/+7tJUYtEAezpi
      7G6Psb+rnpDfW5T65Qgg1iSTnCFx5af095xjfOg2tmWuuo37R4DV0j0u9m+t54W9rRzY1kBA
      d6+6jfskAGLFbNvm3q2rXPnxD7h36yqmkV9Xe2sNwKeFA16O7W7hK5/fRlNtaNXrSwDEU5mG
      wd3rF7n0/inGEregSLtMMQJwn0tTObKrmdePdrGzrW7F60kAxLJs2+ZOXw/nT73NzNhw0dsv
      ZgDuUxQ4tLWO//Z6K+66rqcuLxfBYknJyTE++qe/Yaivt2jf+BvBtiF05/+S+tZHKK2/Sfhf
      fg01sHwPkgRAPMQ08vT+6Htcev8URm6x3OWsmoccb/jOstBXj3n5FPMffEjkG79K4NixJZeX
      AIgH5ibHOPPtP2Ni6Ha5S1mzE/5z+KfcLMz7ADBnZpj6gz9i4UIP1b/xb1B9voeWlwCIwuOC
      vefo/se/JreQKXc5axZW0nzZ/THZu22P/W3+x2fJ9Q9Q+x++iae19cHvZSyQw5lGnrNv/xVn
      /uZbm3rnB/iK/59RRsLYxtL3BYzhYcZ+9/dJv/ejB7+TADhYfnGBd9/8I258/P821YXuUurV
      SV7iCotjNU9czs7lmP7zv2D2797Gtiw5BXKqhfQc7775h4wN3ix3KUXxi4EzGIk6sFfwnW7b
      zP39P2DNzUkAnCg9O8UP/vJ/MzN6t9ylFEWHa5h92WHmZ7esar30D0/LKZDTZNMpfvCX/6ti
      dn6w+br/PbJD9YCy6rUlAA6SX8xy+s0/YGa0+Hd1y+Wg5wYdM2msBd/TF16CBMAhLNPgR2/9
      ScWc8wNomHzNc5bscGzNbUgAHOLcP32bO3295S6jqF7Qe4mNsWy350pIABxg4NJ5rna/W+4y
      ispDnjeUj1gcf3K359NIACpcamaSs2//1abv53/Ua75z6MOBlXV7PoF0g26wbDZLLpcjk8mQ
      SCTYu3cv58+fp6qqipqaGt555x1OnjxJMBgkEAiwsLDA+Pg4VVVVGIbB9evXOXDgAJqmsbi4
      iGEY2LZNXd3jY+BNI8+Zt/5009/hfVRISfPF/GXysw3rbkueB9hg7777Lul0GrfbjcfjIRAI
      YBgGXq8Xy7LI5XL09fWxb98+jhw5woULF0gmk6iqyuDgIC0tLei6jmVZLCwsMD09ja7rnDx5
      8rFtXTzzfT7+/t+W4VOuzFqfB/iG/x2O3E5iLejrrkGOABusq6sLVVUJBoNks1lM02RycpLm
      5mYAXC4XNTU15HI5zpw5Q0NDAx0dHUxNTRGLxR6EJZvNsnv3btLpNLOzs49tJ5Oc5sLp7270
      xyu5uDrFsdQQxkK8KO1JADZY66dGIt7X1NT00P+Hw+HHllnqd/d//+j6AOf+z7c35Xj+p/kF
      748xB9d34ftpEoBnzNWrV1lYWCCfz+P1ekkmk7S0tNDZ2bniNoZvXGHg4kclrLI8OlzD7Jmc
      JmfUFq1NCcAzxjAMUqkUuVwOj8dDJBIhmUyueH3btjl/6u9KWGG52PwrpZvceHVRW5Vu0GfM
      /en8wuEwoVCIVCpFTc3KD/nDNy4zOTxYugLL5KDnJu2ji+vu9nyUHAGeMZ2dnas63fk027a5
      eOb7Ra6o/DRMTuZ+ipGsKnrbEoBnQDqdpru7m9raWlKpFMePH6e3t5eZmRkURXlwP6C9vZ2W
      lpZl25m8O8DI7WsbWPnG+LznEnWDKtYaRns+jZwCPQOCwSCGYZDP5xkYGMAwDLZt20Z9fT2R
      SOTBVN89PT1MTk4u286l908BlXVbx0uO19NXsLLr7/NfigTgGTAzM4PX6yUcDtPZ2Ukmk2Fy
      cpLt27czNzdHR0cHBw4coKam5qH3W31abmGeoas9G1x56X3BdQH/6NqGOq+E3AmuELd+2s37
      3/6zcpexKk+7ExxSMvzPue/imgiWrAY5AlSIWxc+KHcJRfc653FNlOa9APdJACrA/Nws925c
      LncZRRVXpzgyMcpaHnNcDQlABRgduL6qF1JsBm/kf4oyV7pz//skABWg0ro+O9R77Bl7fIBf
      KUgAKsBIfyUFwOaN9EXsbHFegfQ0EoBNbn5uluT4aLnLKJp9ygAdE/Mbtj0JwCY3PnSbSrn5
      pWHy+kwftrlxAxQkAJtccnyk3CUUzTHrOvXTxoZuUwKwyc1NjZW7hKLwkOe1iduUutvzUTIY
      bpNLTlZGAF7J9hHKbMypnKUoLOheZkNVEoDNbq4CAlBlL/Dq5GDR27WBnNtNOuBnsjrCZHWU
      6UiY6UiYBd2L6XJJADYz27bJpufKXca6fSl1DT23vjZMVSXj05mOhpmORJiMRpiJhJgLBsl5
      PcuuJwHYxIx8btPfAY6ZSY5Nr3ymahtY0L2kggEmq6NMRiNMR8PMhkJkdS/WMqNllyMB2MQq
      YdaHn5+5jttaOsR5l0baXzh9mYmEmYpGmI6ESQf8GK7i7LoSgE0sv5gtdwnr0pqbYf/cKKai
      sODTSVZVMVld2MknaqKkggGyXm/h7dclIgHYxIz8Ok+cy6wrlua7nfWMR+rJBmvA5UdRXKiK
      G0XRNqQGCcAm5nKtfVrwcusMNfLZLVE6W97jw+QNbs+r3EqqWIobRXGjKl401ffJjx9V1VFV
      HeWT+wSKoqHe/9sn6yiKC2WVRwsJwCbm1ks/XLgUGv01HG/YjZJRiOaq+XLtNLZtMryocHbW
      5KNkjpw1j2HOrLBF9ZMQeNA0H6qio6l+NM2HpvgKQdEKYVIeBKyw60sANjGP7i93CasWdOm8
      1LgXVSn01rgmdmIG/hlFgWbd5uv1Bl+sgXNJjbOzGkljJd/oFpa9CPYippV64pIKWiEAqqdw
      VCnCZxJlorlcKOrGnCsXg6aovNy0H5/rZ0OdfaktGIsPD32udsOJWpPfa8/xK/V5mrxW0Wqw
      MbHsLIY5Ry4/LgHY7PyhSLlLWLHPxrYT8z1cr0dxYU9sW3J5XYNjEYv/vCXPbzXl2Oa3UIs8
      8lUCsMlFYut/ScRG2BZuZmfk8ZmxAbwz27Cs5U91XArsrbL5Zkue/9iW57mQiVspThAkAJtc
      uLY48+SXUrW3iiPxHcv20IQIsDCx/Ix39ykKtPtsfr3R4Hfac7xabVClrS8IEoBNLlRbX+4S
      nsiruXmlaT9udfn+FlVRcE3uWFW7tR74FzGT3+vI8bWYQdyztusE6QXa5CKxxnKXsCwFON6w
      h7Dn6XP7RPL1TCSjBMMr7fos8GvwSrXJ8ahJb0rlzLTGYFbBXuFzBRKATS7W1omiqthW8XpK
      imVfTSetwZW9xNrnUjBHt0P4wzVty6XAoZDFwSqL2wsK705rXMuo5O0nB0FOgTY5t1entrm9
      3GU8pjlQx4Ha1U3zHkhvIZ9bfujySigKbPXb/HazwX9vz/FCxMCnLn+dIAGoAA2dqzt/LrWg
      28eLDXse3OxaqVqPh+RwR9HqqPPAL9Wb/I/OHCfrDKKux4MgAagADR3PTgA0ReWVxn3ortV/
      k9+/GC72Iw5BDb5YU7hg/tcNeRq9Fvdn0pBrgAoQ39KFy+N9Jp4POFa/izrf2m/OxV0hRsYa
      qa6/V8SqCjwqHA5bHAxZ3JpXOD2tyRGgEri9Oq2fOVDuMugKN7Et/PgrW1cj4FbIjewsUkVL
      0xTYHrD5dy2GBKBSdD33fFm3X6eHORr/TFHaCi82kJkLFaWtp5EAVIjGrTvRgxuz0zxK1zy8
      3LQfd5EG5jUEVKaGlh4fVGwSgAqhqhqdB45s+HYVFI437KHKXbxnE1RFQU92rrtLdEXbKvkW
      xIbZ9fwXUbWNHR59oHYrLcG6orfb5PMwfmdL0dt9lASgglRFa+k8cHTDttcSrGNfTWluwlV5
      VBZHthe9S/RREoAKs/elL5d0FoX7qtx+jq/hZtdqxLUwM2OlHe4tAagwkVgjbbsOlnQbLkXj
      C00H0LXSnqM3BFQmEttLug0JQAU6fOIX0Eo4Y8TR+E6q9aqStX+fS1UILjQynyrdtiQAFShc
      V8/u418qSds7I61sizSXpO2ltFZpjCaWf5fwekkAKtS+l18nGKkpapsxX4TPxTd23FHYq5Ib
      24pplKZ3SwJQodxenc995ZeL1p5P8/BS4z60El70LqfZ52X8Tml6myQAFWzLnufYdviFdbej
      ovBi496i3uxajcagynhiW0m6RCUAFe7oV39t3Y9NHqzroilQW6SKVs+lKkTtKLOTxZ8AQAJQ
      4VweLy/9yr9Fc6+ty7ItGGNPdfmfONtSpTIy0FX0diUADlDT2MrRk7+66vUinuAnN7s29sV1
      S9aiq5jTzSxkgkVtVwLgENs/9yIHf+6NFS/vUjRebtyHR3t2ZqBuqXIxOri654yfRgLgIPu/
      8FV2HHl5Rcs+37BrQ252rUZLUGV8qLhdohIAB1EUhaNf/TXadh964nK7om10hp69+YbcmkK9
      V2f8blvR2pQAOIyqabz0y79N5/6lnx2I+6IcjpV2/M16tFWpjAwUq0tUlQA4kcvt4fjXf4ud
      R1956Pc+l5eXy3Sza6WqfSrKQpTk5Mom3FqW4iLQ8Z8kAE6lqipH3/gGh770NVAUVBReathL
      wK2Xu7Sn2hLSuDew9kcmFc1PsOv38da+KtOiOJmiKOx/9SRV1TGyZ7tpDBR37FCptFap9A01
      kZ33o/vnV7WuqjcR7PwvuAKFACn2Zn/TsiiO2Tl4/wOYWt3ktOXykzEDpfEiW3ZeWvE6nurj
      +Lf8e1TXz3q35BRIFERC8POvwvbi9rOXSmuVyujgVixzBbuwquPf8k0Cnf/1oZ0fJADi01wu
      +Pxh+NJLhUA8w+r8Kh5bZ2J46bfOFCi4I58lvPuP0WNfRlni4l5OgcTSTBOu3ICLVyGXL3c1
      S7o5YzJkjbH/+A8fewxa1VvwN/86nupjT2xDAiCeLJ2BnivQnwDDLHc1D8kaNj9M5Nnzwg8I
      VU8BoLij6PGT6PGTKNrTXyMrARArM78AfTeh7xbkcuWu5oGPRvMY0QE+8/kh9PhX8dS8gup6
      +htp7pMAiNVZyMLtBNzsL/QclXP30TRmorXMt7fRuKsZRV39kG8JgFgb24bpWRgYgsE7kMps
      TBhUFaoj0N4K7S0QDGCaJul0mlAotOybKJcjARDrZ9uQnIPRCRgdL/x3IVucQKgqVAWhIVb4
      idVC4OFz+5s3bzI8PEwsFiOTyRCPxxkdHaWmpoZkMklDQwOJRIL5+XkaGxvRdZ3p6WkOHjwo
      d4JFESgKRMKFnx1bCzt+Kl34mU3BXKoQkGwO8nnIG4VeJtsGVSl0v7rd4HYVdu5QEEJVha7Y
      YOCxHf5Rtm3T39+PZVm4XC4GBwcJBALMz8/T19fHT37yE44ePUo+nycajfLee+/x8suFYeFy
      BBBPlE6n8fl8aJ9Mumua5oN/r4tlFX40bd1TOS4uLuJyuUin04yPj9Pc/LN5i+7du0ckEiEY
      DJLP50kmk0SjUe7evcvIyIgEQCwvl8vx1ltvcfjwYeLxODdu3MCyLGpqarh06RIHDhzA6/Uy
      NTVFe3s7g4ODhMNhFhcX8fv9TExM0NHRQTQaLfdHWZYEQCzLMAzOnz/P0NAQNTU1mKZJbW0t
      LpeLxcVFLMtifn6e3t5egsEguq7T1dWF2+0mn8+Tz+fRdZ3nnnuu3B/lIYlEgkQiwfHjx+Ua
      QCxP0zSqqqo4ceIEU1NTnD59mhdeKMwzNDVVuPHk9XppamoiHo9z7949WltbUVUV27Z56623
      eO2118r5EZY0PDzM7Ows8/PzcgQQzpNKpbhw4QLPP/+8BECs3uTkJN3d3XR1dTE4OIiu64TD
      YQ4eLO207KUgo0HFqum6TmtrK7FYDMMwCIfDJBKJcpe1LNu2+d73vse1a9ewbZvvfOc7jI2N
      0dPTI9cAYvWmpqaYnZ3F4/EQj8fxer0cOvTkmSbKyTRNmpubyWQy9PT0kEgk8Pl8uN1uOQUS
      znDu3Dm2bNmC3+8nk8lgmiaXL1+WAIiVsW2b06dPc+jQIT7++GNeffVVhoaGuHHjBqFQiGg0
      Sm9vL4cPH6azc3M8VQbIKZBYGUVRaGxs5M6dO1iWxcTEBJFIhHw+z9jYGLlcjnA4TF9fH/l8
      nh07NvZFGmslARArYlkWd+/eZdu2bczMzKAoClNTU8TjcaLRKIZhUFtby8zMDKHQs/045afJ
      KZBwNOkGFY4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYB
      EI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCO
      JgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI72/wGlbD3z8+4C1wAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='SIA' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SIA Positve Cities' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SIA Type of visit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SIA countries' width='192'>
      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
      RQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SIA type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Stat' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='visit buy month' width='192'>
      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
      ygAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
