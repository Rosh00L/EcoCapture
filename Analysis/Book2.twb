<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1211.0901                               -->
<workbook original-version='18.1' source-build='2024.3.2 (20243.24.1211.0901)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
        <calculation class='tableau' formula='2020.' />
      </column>
    </datasource>
    <datasource caption='v_countrydate+ (ecocapture)' inline='true' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.040164612je0re1ch3d4c10oumvj'>
            <connection class='mysql' dbname='ecocapture' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_twocatstats' table='[v_twocatstats]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photovisit_rating' table='[v_photovisit_rating]' type='table' />
        </relation>
        <cols>
          <map key='[City]' value='[v_photovisit_rating].[City]' />
          <map key='[InputID (v_photovisit_rating)]' value='[v_photovisit_rating].[InputID]' />
          <map key='[InputID]' value='[v_photographyvsnonall].[InputID]' />
          <map key='[MAX_]' value='[v_twocatstats].[MAX_]' />
          <map key='[MIN_]' value='[v_twocatstats].[MIN_]' />
          <map key='[Mean]' value='[v_twocatstats].[Mean]' />
          <map key='[Photography (v_twocatstats)]' value='[v_twocatstats].[Photography]' />
          <map key='[Photography]' value='[v_photographyvsnonall].[Photography]' />
          <map key='[STDDEV]' value='[v_twocatstats].[STDDEV]' />
          <map key='[Travel_Date]' value='[v_countrydate].[Travel_Date]' />
          <map key='[Travel_Month]' value='[v_countrydate].[Travel_Month]' />
          <map key='[Travel_Year (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Travel_Year]' />
          <map key='[Travel_Year (v_photovisit_rating)]' value='[v_photovisit_rating].[Travel_Year]' />
          <map key='[Travel_Year (v_twocatstats)]' value='[v_twocatstats].[Travel_Year]' />
          <map key='[Travel_Year]' value='[v_countrydate].[Travel_Year]' />
          <map key='[Travel_month (v_photovisit_rating)]' value='[v_photovisit_rating].[Travel_month]' />
          <map key='[Travel_month]' value='[v_photographyvsnonall].[Travel_month]' />
          <map key='[Traveller_Country (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Traveller_Country]' />
          <map key='[Traveller_Country (v_photovisit_rating)]' value='[v_photovisit_rating].[Traveller_Country]' />
          <map key='[Traveller_Country]' value='[v_countrydate].[Traveller_Country]' />
          <map key='[Traveller_ID (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Traveller_ID]' />
          <map key='[Traveller_ID (v_photovisit_rating)]' value='[v_photovisit_rating].[Traveller_ID]' />
          <map key='[Traveller_ID]' value='[v_countrydate].[Traveller_ID]' />
          <map key='[activity]' value='[v_photovisit_rating].[activity]' />
          <map key='[inputID]' value='[v_countrydate].[inputID]' />
          <map key='[location_Type (v_photographyvsnonall)]' value='[v_photographyvsnonall].[location_Type]' />
          <map key='[location_Type]' value='[v_photovisit_rating].[location_Type]' />
          <map key='[month (v_photographyvsnonall)]' value='[v_photographyvsnonall].[month]' />
          <map key='[month (v_photovisit_rating)]' value='[v_photovisit_rating].[month]' />
          <map key='[month]' value='[v_countrydate].[month]' />
          <map key='[rating (v_photographyvsnonall)]' value='[v_photographyvsnonall].[rating]' />
          <map key='[rating]' value='[v_photovisit_rating].[rating]' />
          <map key='[sentiment_comments (v_photographyvsnonall)]' value='[v_photographyvsnonall].[sentiment_comments]' />
          <map key='[sentiment_comments]' value='[v_photovisit_rating].[sentiment_comments]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>inputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[inputID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>inputID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Travel_Date]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Month</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photography]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Photography</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location_Type (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>location_Type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_comments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sentiment_comments (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>sentiment_comments</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photography (v_twocatstats)]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>Photography</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_FFCF6196061145E6A0037FC77105E131]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_twocatstats)]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_FFCF6196061145E6A0037FC77105E131]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Mean]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>Mean</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>9</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_FFCF6196061145E6A0037FC77105E131]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MAX_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[MAX_]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>MAX_</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_FFCF6196061145E6A0037FC77105E131]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MIN_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[MIN_]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>MIN_</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_FFCF6196061145E6A0037FC77105E131]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STDDEV</remote-name>
            <remote-type>5</remote-type>
            <local-name>[STDDEV]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>STDDEV</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_FFCF6196061145E6A0037FC77105E131]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[activity]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>activity</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>18</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location_Type]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>location_Type</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photovisit_rating)]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_comments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sentiment_comments]</local-name>
            <parent-name>[v_photovisit_rating]</parent-name>
            <remote-alias>sentiment_comments</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Z-scor' datatype='real' name='[Calculation_3191363324673548296]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([rating (v_photographyvsnonall)])-WINDOW_AVG(SUM([rating (v_photographyvsnonall)])))/WINDOW_STDEV(SUM([rating (v_photographyvsnonall)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='InputID (v photovisit rating)' datatype='integer' name='[InputID (v_photovisit_rating)]' role='dimension' type='ordinal' />
      <column caption='Input ID1' datatype='integer' name='[InputID]' role='dimension' type='ordinal' />
      <column caption='Max' datatype='integer' name='[MAX_]' role='measure' type='quantitative' />
      <column caption='Min' datatype='integer' name='[MIN_]' role='measure' type='quantitative' />
      <column caption='Photography (v twocatstats)' datatype='string' name='[Photography (v_twocatstats)]' role='dimension' type='nominal' />
      <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
          <alias key='&quot;photography&quot;' value='Photography Holiday' />
        </aliases>
      </column>
      <column caption='Stddev' datatype='real' name='[STDDEV]' role='measure' type='quantitative' />
      <column caption='Travel Date' datatype='string' name='[Travel_Date]' role='dimension' type='nominal' />
      <column caption='Travel Month' datatype='integer' name='[Travel_Month]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photovisit rating)' datatype='integer' name='[Travel_Year (v_photovisit_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v twocatstats)' datatype='integer' name='[Travel_Year (v_twocatstats)]' role='dimension' type='quantitative' />
      <column caption='Travel Year' datatype='integer' name='[Travel_Year]' role='dimension' type='quantitative' />
      <column caption='Travel month (v photovisit rating)' datatype='integer' name='[Travel_month (v_photovisit_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel month' datatype='integer' name='[Travel_month]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Traveller_Country (v_photographyvsnonall)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Traveller Country (v photovisit rating)' datatype='string' name='[Traveller_Country (v_photovisit_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller Country' datatype='string' name='[Traveller_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Afghanistan&quot;' value='&quot;Afghanistan&quot;' />
          <semantic-value key='&quot;Australia&quot;' value='&quot;Australia&quot;' />
          <semantic-value key='&quot;Austria&quot;' value='&quot;Austria&quot;' />
          <semantic-value key='&quot;Bahrain&quot;' value='&quot;Bahrain&quot;' />
          <semantic-value key='&quot;Bangladesh&quot;' value='&quot;Bangladesh&quot;' />
          <semantic-value key='&quot;Belarus&quot;' value='&quot;Belarus&quot;' />
          <semantic-value key='&quot;Belgium&quot;' value='&quot;Belgium&quot;' />
          <semantic-value key='&quot;Brazil&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Bulgaria&quot;' value='&quot;Bulgaria&quot;' />
          <semantic-value key='&quot;Cambodia&quot;' value='&quot;Cambodia&quot;' />
          <semantic-value key='&quot;Canada&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;China&quot;' value='&quot;China&quot;' />
          <semantic-value key='&quot;Croatia&quot;' value='&quot;Croatia&quot;' />
          <semantic-value key='&quot;Cyprus&quot;' value='&quot;Cyprus&quot;' />
          <semantic-value key='&quot;Czech Republic&quot;' value='&quot;Czechia&quot;' />
          <semantic-value key='&quot;Denmark&quot;' value='&quot;Denmark&quot;' />
          <semantic-value key='&quot;Egypt&quot;' value='&quot;Egypt&quot;' />
          <semantic-value key='&quot;Ethiopia&quot;' value='&quot;Ethiopia&quot;' />
          <semantic-value key='&quot;Finland&quot;' value='&quot;Finland&quot;' />
          <semantic-value key='&quot;France&quot;' value='&quot;France&quot;' />
          <semantic-value key='&quot;Germany&quot;' value='&quot;Germany&quot;' />
          <semantic-value key='&quot;Greece&quot;' value='&quot;Greece&quot;' />
          <semantic-value key='&quot;Hong Kong&quot;' value='&quot;Hong Kong&quot;' />
          <semantic-value key='&quot;Hungary&quot;' value='&quot;Hungary&quot;' />
          <semantic-value key='&quot;India&quot;' value='&quot;India&quot;' />
          <semantic-value key='&quot;Indonesia&quot;' value='&quot;Indonesia&quot;' />
          <semantic-value key='&quot;Ireland&quot;' value='&quot;Ireland&quot;' />
          <semantic-value key='&quot;Jordan&quot;' value='&quot;Jordan&quot;' />
          <semantic-value key='&quot;Kuwait&quot;' value='&quot;Kuwait&quot;' />
          <semantic-value key='&quot;Lebanon&quot;' value='&quot;Lebanon&quot;' />
          <semantic-value key='&quot;Malaysia&quot;' value='&quot;Malaysia&quot;' />
          <semantic-value key='&quot;Malta&quot;' value='&quot;Malta&quot;' />
          <semantic-value key='&quot;Qatar&quot;' value='&quot;Qatar&quot;' />
          <semantic-value key='&quot;Romania&quot;' value='&quot;Romania&quot;' />
          <semantic-value key='&quot;United States&quot;' value='&quot;USA&quot;' />
        </semantic-values>
      </column>
      <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID (v photovisit rating)' datatype='integer' name='[Traveller_ID (v_photovisit_rating)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID' datatype='integer' name='[Traveller_ID]' role='dimension' type='ordinal' />
      <column caption='v_countrydate' datatype='table' name='[__tableau_internal_object_id__].[v_countrydate_98771871190540D39E6CEF22D122B18C]' role='measure' type='quantitative' />
      <column caption='v_photographyvsnonall' datatype='table' name='[__tableau_internal_object_id__].[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]' role='measure' type='quantitative' />
      <column caption='v_photovisit_rating' datatype='table' name='[__tableau_internal_object_id__].[v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342]' role='measure' type='quantitative' />
      <column caption='v_twocatstats' datatype='table' name='[__tableau_internal_object_id__].[v_twocatstats_FFCF6196061145E6A0037FC77105E131]' role='measure' type='quantitative' />
      <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
      <column caption='Input ID' datatype='integer' name='[inputID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[location_Type (v_photographyvsnonall)]' role='dimension' type='nominal' />
      <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
      <column caption='Month (V Photographyvsnonall)' datatype='string' name='[month (v_photographyvsnonall)]' role='dimension' type='nominal' />
      <column caption='Month (V Photovisit Rating)' datatype='string' name='[month (v_photovisit_rating)]' role='dimension' type='nominal' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Rating (V Photographyvsnonall)' datatype='integer' name='[rating (v_photographyvsnonall)]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Rating' datatype='integer' name='[rating]' role='dimension' type='ordinal' />
      <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
      <column-instance column='[Photography]' derivation='Count' name='[cnt:Photography:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cum:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Sum' name='[cum:sum:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country (v_photographyvsnonall)]' derivation='None' name='[none:Traveller_Country (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country]' derivation='None' name='[none:Traveller_Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
      <column-instance column='[location_Type (v_photographyvsnonall)]' derivation='None' name='[none:location_Type (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
      <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Photography]' derivation='Count' name='[pcto:cnt:Photography:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[rating]' derivation='Sum' name='[sum:rating:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='Traveller ID photo Cat'>
          <field>[Photography]</field>
          <field>[Traveller_ID (v_photographyvsnonall)]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cum:cnt:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cum:sum:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcdf:cnt:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Photography:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pays-Bas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Schweiz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Skye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cayman Island&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldvies&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mariana Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niederlande&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Near Prague&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reunion Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stewart Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini (Swaziland)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Beruwala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Polonnaruwa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katukitula&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nuwara Eliya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nilaveli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sigiriya&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Colombo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Galle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tissamaharama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ampara&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Deniyaya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kalutara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ahangama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Koslanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ella&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Weligatta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arugam Bay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peradeniya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalametiya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trincomalee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haputale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Unawatuna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kalkudah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Habarana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saliyapura&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Anuradhapura&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bentota&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pinnawala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kandy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mirissa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hikkaduwa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jaffna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Embilipitiya&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Pussellawa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ambalangoda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Negombo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:rating:ok]' type='palette'>
            <map to='#499894'>
              <bucket>12</bucket>
            </map>
            <map to='#499894'>
              <bucket>51</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>30</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>207</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6249</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>41</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1977</bucket>
            </map>
            <map to='#79706e'>
              <bucket>16</bucket>
            </map>
            <map to='#79706e'>
              <bucket>72</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>13</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>52</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>9</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>44</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>24</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>164</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>3</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>34</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>477</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>21</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>114</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>45</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>18</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>77</bucket>
            </map>
            <map to='#d37295'>
              <bucket>19</bucket>
            </map>
            <map to='#d37295'>
              <bucket>79</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>22</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>126</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>27</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>194</bucket>
            </map>
            <map to='#e15759'>
              <bucket>14</bucket>
            </map>
            <map to='#e15759'>
              <bucket>60</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>48</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>4</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>35</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>683</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>20</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>93</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>15</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>61</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>5</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>38</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>691</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location_Type (v_photographyvsnonall):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Religious Sites&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beaches&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Historic Sites&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waterfalls&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Museums&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bodies of Water&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;National Parks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zoological Gardens&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nature &amp; Wildlife Areas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Farms&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gardens&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:activity:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Beach_Water_Sports&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Relaxing&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Historical_Sites&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;wildlife_nature&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romantic_holiday&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hiking_climbing&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Religious&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Biking_cycling&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Sightseeing&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:sentiment_comments:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Negative&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Positive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neutral&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Photography:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;No photography&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;photography&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country (v_photographyvsnonall):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stewart Island&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Skye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldvies&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cayman Island&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mariana Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Schweiz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Near Prague&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini (Swaziland)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='v_countrydate' id='v_countrydate_98771871190540D39E6CEF22D122B18C'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
            </properties>
          </object>
          <object caption='v_photographyvsnonall' id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
            </properties>
          </object>
          <object caption='v_photovisit_rating' id='v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photovisit_rating' table='[v_photovisit_rating]' type='table' />
            </properties>
          </object>
          <object caption='v_twocatstats' id='v_twocatstats_FFCF6196061145E6A0037FC77105E131'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_twocatstats' table='[v_twocatstats]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID (v_photovisit_rating)]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photovisit_rating_06A19DDDDE3946EA8CCB885B354A1342' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Photography]' />
              <expression op='[Photography (v_twocatstats)]' />
            </expression>
            <first-end-point object-id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696' />
            <second-end-point object-id='v_twocatstats_FFCF6196061145E6A0037FC77105E131' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='5* Cities'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Rating' datatype='integer' name='[rating]' role='dimension' type='ordinal' />
            <column-instance column='[rating]' derivation='Sum' name='[sum:rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]'>
            <groupfilter function='member' level='[none:rating:ok]' member='5' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{8AE6B6A8-396E-4D3F-B028-7BC3FEFD306B}' />
    </worksheet>
    <worksheet name='Line Chart Forcasting'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
              <calculation class='tableau' formula='2020.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' forecast-column-base='[cnt:Traveller_ID (v_photographyvsnonall):qk]' forecast-column-type='forecast-value' name='[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_photographyvsnonall)]' derivation='None' name='[none:Travel_Year (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='color' id='refline0' value='#ff0000' />
            <format attr='stroke-color' id='refline0' value='#ff00004b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Covid 19' label-type='custom' probability='95' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{87A7AAF9-8AA3-4318-BFA5-BB2477C400F5}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column datatype='string' name='[Traveller_Country (v_photographyvsnonall)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_Country (v_photographyvsnonall)]' derivation='None' name='[none:Traveller_Country (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Traveller_Country (v_photographyvsnonall)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='in-range'>
            <min>100</min>
            <max>3114</max>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([activity])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Photography:nk]' member='&quot;No photography&quot;' />
                  <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]' field-type='quantitative' max='38375329.669726059' min='-15767863.08890428' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]' field-type='quantitative' max='17194168.415342927' min='-12626635.250756275' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' />
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DB828CB9-B2E3-4F74-A932-614B90B54ACE}' />
    </worksheet>
    <worksheet name='Non vs Poto'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</cols>
      </table>
      <simple-id uuid='{6A50E07A-6C64-4E2D-A8D6-C7B847FDFC3F}' />
    </worksheet>
    <worksheet name='Photo Activity'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photovisit rating)' datatype='integer' name='[Traveller_ID (v_photovisit_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photovisit_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photovisit_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photovisit_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photovisit_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photovisit_rating):qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='65' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='-90' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' id='legend-color' value='center' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photovisit_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photovisit_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photovisit_rating):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</cols>
      </table>
      <simple-id uuid='{8ACD1209-7334-4E56-857C-B5BB9F8D0C52}' />
    </worksheet>
    <worksheet name='Rating'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[rating]' derivation='Count' name='[cnt:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[rating]' derivation='Count' name='[pcto:cnt:rating:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Rating' datatype='integer' name='[rating]' role='dimension' type='ordinal' />
            <column-instance column='[rating]' derivation='Sum' name='[sum:rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <wedge-size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:rating:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:rating:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7AB4EE68-1BAC-4E59-B2E4-2B1F6D160702}' />
    </worksheet>
    <worksheet name='SIA'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column-instance column='[sentiment_comments]' derivation='Count' name='[cnt:sentiment_comments:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
              <wedge-size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2E56FC8B-EDFB-414D-AB93-5A9226D14142}' />
    </worksheet>
    <worksheet name='SIA Positve Cities'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[sentiment_comments]' derivation='Count' name='[cnt:sentiment_comments:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]'>
            <groupfilter function='member' level='[none:sentiment_comments:nk]' member='&quot;Positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{AA5E5BF6-9CC4-48A1-A971-6D7CB28B6C6D}' />
    </worksheet>
    <worksheet name='SIA Type of visit'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column-instance column='[sentiment_comments]' derivation='Count' name='[cnt:sentiment_comments:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location_Type (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
            <column-instance column='[location_Type (v_photographyvsnonall)]' derivation='None' name='[none:location_Type (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[location_Type]' derivation='None' name='[none:location_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:sentiment_comments (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[sentiment_comments (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Beaches&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Bodies of Water&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Farms&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Gardens&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Historic Sites&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Museums&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;National Parks&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Nature &amp; Wildlife Areas&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Religious Sites&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Waterfalls&quot;' />
              <groupfilter function='member' level='[none:location_Type (v_photographyvsnonall):nk]' member='&quot;Zoological Gardens&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]'>
            <groupfilter function='member' level='[none:sentiment_comments:nk]' member='&quot;Positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:sentiment_comments (v_photographyvsnonall):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</cols>
      </table>
      <simple-id uuid='{EF528593-29D6-41CC-B9C9-46FD7FABCCC7}' />
    </worksheet>
    <worksheet name='SIA countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column datatype='string' name='[Traveller_Country (v_photographyvsnonall)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Photography]' derivation='Count' name='[cnt:Photography:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='Count' name='[cnt:sentiment_comments (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_Country (v_photographyvsnonall)]' derivation='None' name='[none:Traveller_Country (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='None' name='[none:sentiment_comments (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column caption='Rating (V Photographyvsnonall)' datatype='integer' name='[rating (v_photographyvsnonall)]' role='measure' type='quantitative' />
            <column datatype='string' name='[sentiment_comments (v_photographyvsnonall)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='member' level='[none:Photography:nk]' member='&quot;No photography&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]'>
            <groupfilter count='35' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([rating (v_photographyvsnonall)])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='%null%' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Curaçao&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;England&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photographyvsnonall):nk]' member='&quot;Vietnam&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]'>
            <groupfilter function='member' level='[none:sentiment_comments (v_photographyvsnonall):nk]' member='&quot;Positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]' />
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</cols>
      </table>
      <simple-id uuid='{4DE53B2F-6305-4D8B-BC96-67ABFB2EFBDE}' />
    </worksheet>
    <worksheet name='SIA type'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='Count' name='[cnt:sentiment_comments (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location_Type (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[location_Type (v_photographyvsnonall)]' derivation='None' name='[none:location_Type (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment_comments (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:sentiment_comments (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[sentiment_comments (v_photographyvsnonall)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]' />
              <wedge-size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:sentiment_comments (v_photographyvsnonall):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{38D1FCF9-5FD7-4A6E-83D8-A3BD7B8DFDAA}' />
    </worksheet>
    <worksheet name='Stat'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Avg' name='[avg:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_photographyvsnonall)]' derivation='None' name='[none:Travel_Year (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]' value='88' />
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]' field-type='quantitative' max='6780.9361097560977' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='wrap' data-class='subtotal' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]' value='off' />
            <format attr='vertical-align' data-class='subtotal' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]' value='top' />
            <format attr='text-align' data-class='subtotal' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]' value='left' />
            <format attr='text-orientation' data-class='subtotal' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]' value='90' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</cols>
      </table>
      <simple-id uuid='{B4F9E845-590C-4317-AE30-26D0E4BFAC9D}' />
    </worksheet>
    <worksheet name='visit buy month'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column caption='Month (V Photographyvsnonall)' datatype='string' name='[month (v_photographyvsnonall)]' role='dimension' type='nominal' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[month (v_photographyvsnonall)]' derivation='None' name='[none:month (v_photographyvsnonall):nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#f9a655' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photographyvsnonall):nk]</cols>
      </table>
      <simple-id uuid='{926ADA61-A842-4E77-9E74-95CFABBF94A5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='827' maxwidth='1369' minheight='827' minwidth='1369' preset-index='16' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
          <calculation class='tableau' formula='2020.' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98066' id='7' param='horz' type-v2='layout-flow' w='98832' x='584' y='967'>
            <zone h='98066' id='5' type-v2='layout-basic' w='86414' x='584' y='967'>
              <zone h='49031' id='48' name='Map' w='51790' x='584' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49035' id='56' name='Photo Activity' w='51809' x='584' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49035' id='58' name='Rating' w='34605' x='52393' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49031' id='60' name='Line Chart Forcasting' w='34624' x='52374' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='170' h='98066' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='12418' x='86998' y='967'>
              <zone h='6287' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='12418' x='86998' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='12817' id='49' name='Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' type-v2='size' w='12418' x='86998' y='7254'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='41838' id='50' name='Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' type-v2='color' w='12418' x='86998' y='20071'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24909' id='57' name='Photo Activity' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='12418' x='86998' y='61909'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5562' id='59' name='Rating' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' type-v2='size' w='12418' x='86998' y='86818'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='76' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98066' id='75' param='vert' type-v2='layout-flow' w='98832' x='584' y='967'>
                <zone fixed-size='280' h='49031' id='48' is-fixed='true' name='Map' w='51790' x='584' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12817' id='49' name='Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' type-v2='size' w='12418' x='86998' y='7254'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='41838' id='50' name='Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' type-v2='color' w='12418' x='86998' y='20071'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49031' id='60' is-fixed='true' name='Line Chart Forcasting' w='34624' x='52374' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6287' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='12418' x='86998' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49035' id='56' is-fixed='true' name='Photo Activity' w='51809' x='584' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='24909' id='57' name='Photo Activity' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='12418' x='86998' y='61909'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49035' id='58' is-fixed='true' name='Rating' w='34605' x='52393' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5562' id='59' name='Rating' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' type-v2='size' w='12418' x='86998' y='86818'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8CCA8090-640E-4B2E-82F7-02AE726BECC5}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='827' maxwidth='1369' minheight='827' minwidth='1369' preset-index='16' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98066' id='7' param='horz' type-v2='layout-flow' w='98832' x='584' y='967'>
            <zone h='98066' id='5' type-v2='layout-basic' w='87948' x='584' y='967'>
              <zone h='59315' id='16' name='SIA Type of visit' w='54696' x='584' y='39718'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38751' id='55' name='SIA Positve Cities' w='60499' x='28033' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38751' id='56' name='SIA' w='27449' x='584' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='59315' id='59' is-scaled='1' param='C:/Github_proj/EcoCapture-Analytics/Analysis/Screenshot 2025-01-18 231438.jpg' type-v2='bitmap' w='33252' x='55280' y='39718'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='149' h='98066' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10884' x='88532' y='967'>
              <zone h='2660' id='17' name='SIA Type of visit' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10884' x='88532' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='2660' id='18' name='SIA Type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10884' x='88532' y='3627'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10399' id='57' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='10884' x='88532' y='6287'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5562' id='58' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' type-v2='size' w='10884' x='88532' y='16686'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='75' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98066' id='74' param='vert' type-v2='layout-flow' w='98832' x='584' y='967'>
                <zone fixed-size='280' h='38751' id='56' is-fixed='true' name='SIA' w='27449' x='584' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10399' id='57' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='10884' x='88532' y='6287'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5562' id='58' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' type-v2='size' w='10884' x='88532' y='16686'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38751' id='55' is-fixed='true' name='SIA Positve Cities' w='60499' x='28033' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59315' id='16' is-fixed='true' name='SIA Type of visit' w='54696' x='584' y='39718'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2660' id='17' name='SIA Type of visit' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10884' x='88532' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2660' id='18' name='SIA Type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10884' x='88532' y='3627'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59315' id='59' is-fixed='true' is-scaled='1' param='C:/Github_proj/EcoCapture-Analytics/Analysis/Screenshot 2025-01-18 231438.jpg' type-v2='bitmap' w='33252' x='55280' y='39718'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{148B74DC-060A-48C0-8A9E-8CA4F401E31E}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
          <calculation class='tableau' formula='2020.' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='9' param='horz' type-v2='layout-flow' w='98858' x='571' y='1000'>
            <zone h='98000' id='7' type-v2='layout-basic' w='87429' x='571' y='1000'>
              <zone h='47341' id='3' name='visit buy month' w='43714' x='571' y='51659'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50659' id='5' name='Non vs Poto' w='24657' x='571' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50659' id='6' name='Stat' w='62772' x='25228' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47341' id='13' name='SIA countries' w='43715' x='44285' y='51659'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='11429' x='88000' y='1000'>
              <zone h='8250' id='10' name='Stat' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type-v2='color' w='11429' x='88000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='12' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11429' x='88000' y='9250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='28' param='vert' type-v2='layout-flow' w='98858' x='571' y='1000'>
                <zone fixed-size='280' h='50659' id='5' is-fixed='true' name='Non vs Poto' w='24657' x='571' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50659' id='6' is-fixed='true' name='Stat' w='62772' x='25228' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='10' name='Stat' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type-v2='color' w='11429' x='88000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='12' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11429' x='88000' y='9250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47341' id='3' is-fixed='true' name='visit buy month' w='43714' x='571' y='51659'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47341' id='13' is-fixed='true' name='SIA countries' w='43715' x='44285' y='51659'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1A80F195-FFE0-4D70-9B23-D0F132D84CF2}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Line Chart Forcasting'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Photo Activity'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Rating'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='56' />
      <simple-id uuid='{46844394-C8DC-47C5-8AB6-F61F276BEB8A}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='SIA'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SIA Positve Cities'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SIA Type of visit'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{79E10B69-7BD1-4F8B-8BCB-3874D47C0A61}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Non vs Poto'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SIA countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Stat'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[avg:Traveller_ID (v_photographyvsnonall):qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='visit buy month'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{91E32204-93F8-4CFF-AAD0-18D32233E187}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{352790A8-0E1E-4075-9D85-3F7C13DD202D}' />
    </window>
    <window class='worksheet' name='Line Chart Forcasting'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E4C7457-FEF1-485D-A6DB-FB8B09F1C85B}' />
    </window>
    <window class='worksheet' name='Photo Activity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{614D0002-C6CC-45DD-B3C3-55C172326677}' />
    </window>
    <window class='worksheet' name='Non vs Poto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B892FE8-53E8-4FB3-909E-CFD8384703C4}' />
    </window>
    <window class='worksheet' name='SIA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDDD4D80-DDFD-40AB-ABC9-B13F899C78B8}' />
    </window>
    <window class='worksheet' name='SIA Positve Cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B208DBA9-1D01-42F0-91B9-4290B0E2FB9D}' />
    </window>
    <window class='worksheet' name='Rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:InputID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F11A9256-BDCD-4620-9D17-A973F9712E45}' />
    </window>
    <window class='worksheet' name='visit buy month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_month:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photography_rating):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photovisit_rating):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5ED166A1-4843-4683-888B-4722DFCC388E}' />
    </window>
    <window class='worksheet' name='SIA Type of visit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{396FB502-1C76-4CC7-B7CB-7EF9A5E14013}' />
    </window>
    <window class='worksheet' name='Stat'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Calculation_3191363324667273216:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[usr:Calculation_3191363324668567554:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95C1AC77-0FF8-46EF-A265-09594A86B84D}' />
    </window>
    <window class='worksheet' name='5* Cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photovisit_rating):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photovisit_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90413D93-B792-4F33-BBC1-794A4C561A46}' />
    </window>
    <window class='worksheet' name='SIA countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Photography:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C880C5F-A5AF-4AAF-85F2-6516170E3278}' />
    </window>
    <window class='worksheet' name='SIA type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:sentiment_comments (v_photographyvsnonall):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type (v_photographyvsnonall):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments (v_photographyvsnonall):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C46270CD-548A-4EC4-8D4F-A646CCA311AA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='5* Cities' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAW0ElEQVR4nO2d25Mc133fP32b6bnP7Mzu7AVYLG4EQFKkRDIyHUUuW0ns2IlzeUhVUpWH
      vCR5cuk9/0DeXIlT5Sh5d6UqeYn0YCmWrZCyJYsWKZmkSFAEINx2sffZuXdPX/OwJIDlznQ3
      gJ0FsP37PGK+++vTjfM9lz7n10cJwzBEEFKK+rQLIAhPEzGAkGrEAMKJpb+3xU9/9gE7rT06
      3S4Avmvz3s/fv6/Rn1bhBGHa/O2Hn/Dm17/OJx+8zwe/+Jjf+Nor9GyTkd2/r5EeQDixnD01
      x3s//xBf0Tm/ssytdZdsscD25hY7nQEAirwFEtJCt9umVKqiKA/+7b4B/vBHv3isoPNFk3/9
      ynmUh6MKwnPC/TnAY3cD0n8IzzEyBxBSTcK3QCG3fvxDqufO0lvfxazlcayAxctXpls6QZgy
      iQxg7awycnwGnQHleoVhqGAWQgZ7O+x1fPyXV6ZcTEGYDokMkGuc5vybDVRDo7vVYraSx7ID
      CjNVagUTTdNkEiw8lyReCNPNHADVhXkASvnpFEgQjpMjWwm+ent74m/1cp65WuGoLiUIR8aR
      GeA//o8fEExYU/uXv/ki/+a3XzmqSwnCkSGvQYVUIwYQUo0YQEg1YgAh1YgBhFQjBhBSjRhA
      SDViACHViAGEVCMGEFKNGEBINWIAIdWIAYRUk2g3aOAM2b59m/Jsk85ui/JMGdvyqS0uTLt8
      gjBVEhlAMXIo3oBuqwMh2EMbhZDB7g577fiUyCAM8DzvKMorCEdKIgP4dp9QzWBkstjtbcKs
      hjPyqS42qBX3UyKjUBUVXZevMArPHolqpZ4r0bz0WULLqcVplkcQjhWZBAupRgwgpBoxgJBq
      xABCqhEDCKlGDCCkGjGAkGrEAEKqEQMIqUYMIKQaMYCQao59h9p/+pO/IgjGf0T37758mt/6
      ysrxFkhINcdugJ9eXcOfYIDlufIxl0ZIOzIEElKNGEBINWIAIdUkywkeDdm+dZ1MeZZhu02p
      VsCyfOZWzk67fIIwVRIZQM3mUUMXq28xUy3SdkNyGY1BK9kxqUlzgoMwvK/7w//1Dl4QjNW9
      eWWJ33h1OUnRBSGSRAbwrB6BZlKqFmm3O5SrBSzbpzJztDnBqqLc171zdQ3PH2+ApUZZcoyF
      IyF5TvDFlwAozc4BIGc+CicBmQQLqUYMIKQaMYCQasQAQqoRAwipRgwgpBoxgJBqxABCqhED
      CKlGDCCkGjGAkGrEAEKqEQMIqUYMIKQaMYCQapIZIAzp72zjuyM6m5t4joXdH0y5aIIwfZLl
      BLs27rBFd3MHrVjA27iH7wXAPAOnTxBE5waHYYjv+7HXOWqdIMSRyACha9Hv+9Tm67Ru3iSs
      18EP0AwDPaujKEp0AIV4DYCiJNIpSeMJQgzJkuLNEo1TGkYuR/PFEkbGwPdDjGyGbN6MrYwK
      CqoaP9pSIJGOh+KtbXcZ/505KOUyVIpmgnhCWkl2UrxmkCtX9v/AyACgPiM56d/8r9/D9cYn
      z/+Lr1/m3/7ul4+5RMLzxKHm1lz9lGZBWk0hHRwywMad25TXb3CuVkSVcbZwwjlkgHKlQr+9
      B9fel55AOPEcGsnnXnmTtqLQBuy+9RSKJAjHxyEDjPyA/uZd2ls7VJbOUpqpPo1yCcKxMPad
      42jQxx3aDDut4y6PIBwrYw2gajqZYpmGfP1ZOOGMNYCiJF2QEoTnmzG13MWxPLzR6PhLIwjH
      zBgDKOyt3sJzRhO3GAjCSWGMAXSaL5zFdwNkGUw46Ywd6GtmCTVwpQcQTjyH1gHsnVV219YI
      dPNE9QA/+NlN/AknzpyZr/LC6foxl0h4FjhkgDBUUDUNVT1Z7f+3vv0uI3d8Es0//3uXxAAp
      5ZABVM3ALDcon62nMmH4//3sJt6Ek+zPNCtilBPGIQNkKjWU1g4b1/ZY/vKXUYDAGbJ14xOU
      bA2n3yVfLTCyfRYuXnoKRZ4u3/rOe9jO+BMt/9nXpKc4aRwygKIZKITgOgTsz5IVVSVTbkLo
      kZ+p0A/AzOkM9qZ3TGoUYcJ4YcJ4Sa+b9D6E54exeV0zZy6Qn7X5/PBT3xnhDLtUmosMOl1m
      PjsmtTDToFaYzjGpUSgJ4ykJ4yW9btL7EJ4fxv5vbl/7CNuGU1/5Chqg5yvMX9xPifw8NTJb
      PrYyCsLUGDvPDcMQw5RkGOHkM7YHyFerbN3eOO6yPFf8wX/+U6wJk+V/8MY5/tU3Xj7mEgmP
      w1gD6GYRTVNlJTiC7c4QazTeAP2hc8ylER6XQwZwWht4QUigGqlcBxDSxaE6rmgaO3fXqS/M
      SQ8gnHgO9QBGZZZzr80+jbIIwrEjoxwh1YgBhFQjy5pTZqczJAzHz6ZyWYNiLnPMJRIeRgww
      Zf7gv3yXoe2O/e2f/PoL/Lvff+2YSyQ8jBjgGUF6iqeDGOAZ4Zt/9D361vgFtH/86xf597//
      +jGXKB3IJFhINWIAIdXIEOg5Y7drTZwrmBld5gqPSDIDhCGuM0LXNazegGwxj++FZMzslIsn
      fJFv/tF36U3YbPd7b17gP/zTN465RM83yU6J9Ea01tbIZ1UGroLR2cF1A+qnTmOHzsQW6f7f
      hyFBMP6TJAd1JNJBwniJdcmumzQejxVv8jM8+ucnfE6yOYCqQeChZvM42xu44X4aYeD7BEea
      I5ts+12M3x41XHJdYmQb4fNC4iFQvlLFKJSoX7yMmTdxvZBsPke+kOCYVCXhMalPTZfsa9hJ
      j3sl8bGwD+smP8Ojvg/hAcmOSdUzlGabAGRyeQA0mWsJJwBpLoRUIwYQUo0YQEg1YgAh1YgB
      hFQjBhBSjewFOqH89UeruN748xAW6yUunJoB4CcfreJM0C3Ui1w8dbK/hi0GOKH88f/5Kd3B
      +JM+/9GvXbhvgD/+9k/p9Mfrfuer58UAggDwzseTe4r5mQc9xTsfr+FM2B7zsO5vrq4xcsfr
      mrXi/XMYkuoeFzGAkIj/9u132evZY3/77b9z7n7F/tZ33qXVtcbq/uEbD+m+/S67E3R///Wz
      9yv2f//Oe+x0hmN133jt7BMbQCbBQqoRAwipRgwgpBoxgJBqZBIsnAj+5PsfTEwVfeF0nW+8
      dnbsb8lSIl2b3Y1tytUCu+s7lGpFLMujcXr58UssCEfIWz+/zVZ7MPY32/GezACKYWIYOsPe
      gGopR9v2yGkwaMkxqU9y3YP3MTmNMggeiheRbZlUFwZBQt2DeFFpqOGB60bcR+Ln8ujPL4zJ
      qfY8j4Hl8j9/8NGB3xIZIHCGdLfuUZ6dZ6/To1gtYNs+lcUGtaIck/q41z14H5NTIlX1oXgR
      2adJdYqqJtQ9iBeV9aocuG7EfSR+Lo/+/JSYlFJd13H8Ed995/qB3xIZQM3kOf3K/qf5Kgv7
      /yanpAonAXkLJKQaMYCQasQAQqoRAwipRgwgpBoxgJBqxABCqhEDCKlGDCCkGjGAkGrEAEKq
      EQMIqUYMIKQaMYCQasQAQqoRAwip5pGS4q3te7Q7Q3I5DcvymD9/cVrlEoRj4dG+CqHrBFYf
      JzuDmVMlJ/gJrys5wRPiTSkn2PcPf9v0kQygZTLo+RKloollBxTqDWoFyQl+3OtKTvCEeFPK
      CR5XTx/JAJlCleb5KgC5R/lDQXhGkUmwkGrEAEKqEQMIqUYMIKQaMYCQasQAQqoRAwipRgwg
      pBoxgJBqxABCqhEDCKlGDCCkGjGAkGoeywDDnXV27q5G7hEXhOeBxzomdeR46KrUfuH557F6
      AE0JGI0OZ9cIwvPG/R5gpVpM/lfVlwBYX1+n090i+NJZXjk/RzhhTNSs5e+no71yfo4gmKQr
      PNCdm8WfoJufeSjeuTk8P5igexDvS+dmcb0EurOzON54cy/UD+pG7njdYr14QGc749P7Fh+K
      9/JKA2ui7kG8l1ZmsUZuAl2DoT1et/Sw7kyDwSRd44HuxTMN+tb4g6iXGqWHdPWJB1Z/MV53
      OBqrOz17MF5nML5uPqy7cqbOQr0QqdNUhVfPzx34TQkn1dqE+L6PqqooUTlzT6gLw/DQ3x31
      dYMgQFEU0T2BDkBVowcVz5ruid8CaZp26OGsXvuA7739DsFD3hqru/4h33v7nQMt/Thdt9Pi
      5s1bB1rS8fF+wf99+yd4MfHWbny0r/Mf6MaZZGdznRs3bx0o3zjd2q8+5s/e/much3qi8bqr
      /NnbP8bxonX3bl7l+2//mFGs7hO+/9aPEun+/K0fYbsxulu/5M/f+iusGN36rU/H6r5YudZv
      f8pfvPWXDB0/RneNv3jrLxkk0v0wVrdx5zo/eOuH9EfRuo/ff/fxJsFx5GtzLPv9qHzrfV11
      ljN+PzLhOgxDfM8nVywx6HUx6zMTtcWZOc74Zux1c5UGZ7xs5HUBRqMRo9Eo9m1XtlDldNNA
      jQmYr9Q548XrcuU6y/N6pC4MQ/KVOsuLGmrM88tX6pxe1IhpJMmVaiwvqmgxzyVXqrG8pMTq
      zGKV00sKWlQBgXypxvIS6DE6s1hleQm0mOdnmEVOLc7HxitXKtNZB9A1Hcce0O72Y3UjK1rn
      OTbXf3WL1bu3qVRrkfH29jpUqpXICgGg6zq2NaDT7UXqPN8nDKM+uLFP4Lv0LStGBbtbWxhm
      Lrp8gce1GzfxPGfiXAnAcyz6Axszl4s0imsPaLV7GJlMfMXRDSxrSDfmubR2tlENM7ZiG4aB
      NRzS7XYjdZ1Oh0KpElthDUNnmCCegk+nN4htCO+t3pmCAcIA1wu4cOkyZiaigwlDXD/gwguX
      yEXojGyOlaUm2VwxtgXTQpdPrv2KiHoDYYjnBZx/4RK5rDFR5lgDer0ee+0ukR/PYf/zHHFj
      ZIDZZhOr340un6JRrc0wUy1HxjKyeZzeFu+9//GBIdAXCVEwTRMzm534kuJzRvYA3SxiRjwX
      gMZcE2fYn/iSYv/CIZ7nc/b8RQq57ESZNejSHQwZOU50+cIQ3/dZOXeRYn5yPCDRnGXQ61Cq
      zh69AUbDHuubW3x67QamaU4Whj7d/pD1e/fIZiN0wO5eh0q5FOto17GwbDfGAAHtTpfhYBBZ
      vkyuQMbQOXNmObalUwkJY0u3j+/7B+ZG48oXuharm3voMWOMamORl69cxDQm/ze2drbo9np0
      e90DY/FxdPZ2ube2imJEVzAICQIv2gAEDAd9bt66hRERT1VgYI0wM0ZMpQ1pd/u0dzYI1Uxk
      6VTNoFqtRDaYhVKFUjF39HOAzmBEY3YW2G83I0axbK7dwSjNRn6cCaDZqHFjY49Ti/OR0mpz
      hd+5XIuusIpKPqvR7vaZrc9EzgM8z7//9iCKkeviOZ8NWSKu3el09z/kFHUTqoauBLT2urh+
      GHkvrutgWRZ+EKJOMMtscwGt3QVFpZiN/u+eXVhGyZRRwgCY/LGzTreLpuvRFVbRGPT7VCq1
      yGccBAGu60U3CgBhyF6rRaFUwdBjGiRVpb+3w3BxmUrEN9ts2z76HiD0XXZ3d9nd60SPHFSD
      2ZLOnc1W7CTTHtk4CSajw/Ymb/3ob2K65oCR49La3qA3tCPjzTWbeK4TeV3HHuArGU4tLcRP
      4kwTVYFebxCpK5TrLM1V2W3tReuK5dhxvZ4xmZubY262gRo9WwZCcqUyw370GDuXNVEVhW4v
      eo5XzGfYabUY+ZMfYK5Y5fxSnU8+vRY5lENRWGg26PatyDmP747Y2G5RmamTjelBjWz+6A3Q
      XFjixSuXuXzxfOxbltrCeb5yeSVyUmgPeyjZMovN6NYawBlZjEZe9BBI1XBdn0Ixz+rq3ch4
      tm3jOHHGi/oo30F6rXt8dP0OhcL4BRsAwpAgCDCyJiN7GBnPD3xcx2bCOuCjEQY4ro8zsqnV
      Jr9pA+jubXL12i1y+cn3EYYhZq6IqqhktMnVLAxDsoUKpxaasT13p9NDDwasbbUnyjQjS7lg
      7n8LNKbF7PcH03kLdP3Dn/C///Tt2BZ7e2eHbCZmPKdqtLY20LK52IpWqs1z8dwSEc8bAo/q
      TJ1qtc6VS5O/bu3YA1B1isVy5FgyY+YZte/x0Y07OBEtHUB1dokLZ5Yix/Zh6JPN5SkUSpw5
      fSoynmVZFIql2DlKIlSN1vYWmh49AQao1Od54fxZ8pnJD8b3HK7fWkUPR1gTVsxhv8W2HY/Q
      dw+syxwi8GnMNak3T7M0W4ksX+g53L23GVv/SsUp9AAAhfoyv/nVl2Nb7EzGwI35CnDGzPPS
      K6+yvDAXOeYcWQPubW5jWxZRw/Z+t4OiKlh2dMueMQuEnkuv14ltYWcWVpjJG5FjU8ce8On1
      W1RrtciH7jkOlmVHfu34c3zHQcuYsa99kzJTK7O9sxvdgwKZbBYzY3BvY2uiRjeyXLm4Qt8O
      yUVM0vWMyeLiIhcuRE/mPc9haEUPWT9Hy+aZb1SjP2kN9AfWlNYBlIDhhP0qD2OEDldv3D2S
      bdXZXIHZksH6bi9ykul7Hqsb2xRMPfI/OvA9zFwOQ8/EVrBer42mGvgRLZiiqDRmZ/GdUeR1
      DTOP09ng6o07OF70g1FDl1Z7f7J8FHRb26yubxxYqf4iYeDjeAGGabI4PzdRB7C1ucFw0GMU
      cx8AupGJ7Ml0PUM+Z8Y2C55j0drZYm27SzbCUAC1Wm06K8GdnVXeu22zcmpxYi8QBD6ZYpX5
      mhb7FigJYRiSqzQ45WYiw1UaTV5tNGPjbd+7i16dR+128IPotzGKlmFktSLjGdkcBTNDzxp9
      9sZjfDzHHhBmitTKAVkjeiXYLJTQ+p3Y16VJ8EZDyDe4fK5KLmJo43325ilM0HYWynW+dvYK
      ZkS8xKgaVr/HwLJxZpvoE97u6JkcC4tLGPl+3PLNdN4CAVTnlnn9pehJsOc6WEOLgZ2sW4vD
      HVncWV2jWC4fyZCgeWoFr9+i2lggo0c/Ji30MAql2C0OeEPubOxGS0YWtq8xO1OJ7Bl3N+5y
      /fY6jj2MbLGTsre7RaCoOFafQcRWdyObw+nt8N7ffhi7rpDRQj755TXcI5ikeyOLge2g69Fb
      STzHot3t4XhB7BDc873p9ACO42LZ47e6fk4mm8O12rTan43Fn7TSKgqmmTuaCeFn8ZoLS4mk
      hVKVcOsWfhiiRx3UkMlzuhm9xyeTK2KwwdaOxamlRSY9mFyxTKPhg6JhHME9zy6usL96Ez3x
      9hybWnOZM5ZCLhN9MEq7tc29zT0uvHCJTMwhKnHo2RxZXUUx80S1R5qeoVgsoUzYuv05YRiQ
      0fXpGKBUKrPbmzxBArAHXQqNM7yYGx5Ji53J5rh8+cqTB3pEHKvPdqvDl159jWxMT+E7Lplc
      PvJ+Vd3g4uWXYpfyC6UqZ0vVxynyE9Fr7/DLm+s06hUsJ6Bkjq/Yw26LEVlef+2NiZpHxfc8
      Mlr0ApzvuWxvroFZj4wV+D6un2Qg9xj4vr+/izJCo2o6uxv3MHL5aRTh2Nje3kLH5aNrt2NX
      M0uVCu3drQPbtb+Iqh7evv0sUZs7xa999Q3On7tAMaJiu66LaZrs7u7GbJlIxsgakCsW6bb3
      JiYiwf4+oEzGxNA1ooYVnh+Qy06hB9jfPRlSKkbv3cmYeV5+9ctHffljZ2n5HAArCbQhUCiU
      oldknwMURYk+NAyo1JtUohvhR2LQ2WV1fQtUjZEXMGk/nGZkOXvhUmy869c+IZcvHb0BHHvI
      9tY2O70R8cVIF5sbm5TqTfkWzWMwM7/MzPzykcVbOr1CdRr5ACOrzyjUuXD2zFGHfu5ZWJjn
      3tpa/MYvYepUK/uryU+cEywko9/e5sOrNzAKJV7/0ovP9Dg/TYgBjpEwDNjc3GJurvnczwNO
      CmIAIdXIfExINf8fa+HT2CtjZwYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      utZvpfx/4q9ju3AZ99kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29aXBkWXaY973Ml/u+AZnYUagCat+ru3qfnp4hm7NoGOSMaFoSFVrosPXL
      DodlOeygpXA4QnaEw/xhyQqZDskxIZISKQ6HGm7D4Uz3dFVXd+1ALSigsCORyH3f8y3+gWpU
      VVdmIVGFxFJ43x8g37v3vfMy73n33HPPPVdQVVVFQ2OfottpATQ0dhJNATT2NZoCaOxrNAXQ
      2NdoCqCxr3lKAWbuXCOcLCEVE0Qy1Re64MN7E1y/fp2p2aWnjudzuReXco9TL2W5evUqt+9O
      IVUKlOrKU+eVeolCRdoh6fY34pMfksUq2RuX8Z/qY7VioBybIZWvcubcKW5d+QxZZ+T8xdfR
      VVOsFg3Y5Sx1g5n5uUX6B0fo7fYSjiZ4/4MP+PhnH+G3CcwurTIwMsbHf/4DRk+9zkiPhwez
      S4QGRugP+nbqubeVu7fHGT51EZ/VwNRnf8pkyc8HF44wPTODzenDXJzjs4jIN99/A5fNuNPi
      7it0X/54YjjA+MwqUCYar3H+1BDXb9xF1pk54JZYyYNodTP/YILJ+TByLk1NkhDFNV1qVApc
      v34du7eLyZl5XnvtNWYmJxgcOcSZE0e4PTnDa6+9xsLM5PY/7Q5x5o23CE/e4qPLnxMK9XD4
      xBlsJh2KojJxe5yenhBjx05pjX8HeGYM0Dt6htjsHcBErRzj2rVxuntD6IQni+qxGGQEox2r
      y4XNJHL//n0ADBYH58+f59ypo1hEgatXr2K0ejDr4cadSdwWkatXr6IzWrfpEXeeZCyCJIjU
      a1VMdjczE9d4eH+KsqrDIOoRLU6WJm+RK9d3WtR9h6DNBGvsZzQvkMa+RlMAjX2NuHERjZcl
      XqxQk5WNC26SgNWE2bC5n1BVVQRB0Oo8qrNnFECqFJiYWmBweACfy7WpuvlcDud6HZVoNEYw
      GNx6IVvws/ko4Xxpy6/7q0cGGPI6N1VHluV1j51WZw8pQDE6DXoD//b3/4y3zo0RdFsoVmVu
      Xh/nzbcvUK6DvlGgnCrhGBmgHl9FtPrIFHPUCllcvhA+jx1Rp3L33hwf/tL2KYDG7mXPKADA
      UlLiwskhZKnGykqKfN1AwOsgvBKmXAW1niN5a5pvXzzG93/v+9j8h/EHRURLEGu5QDSzgLP/
      BInYColMgYDHsdOPpLHDvFJu0JnJOxgcXQz2dQOQWArjGOjD/Oj85OQkh48cYXMW48vz7+/M
      P2UCFZaXcPQPvPR1X8QEkp6YtOxUHUlW+Hc/nuCdU4Mc6PHsKtm+XOe5NZOpJH6ff8MLyrKM
      Xq/flBCd4OCRE099Dgz0PfX5yJEj2ynOMzRKRbJTU5QScQx2B2ZP+41jr6CqKv/3D6/T5bLw
      Rz+fRFZU/rMPjjHY7d5p0ZrSUgGSqSRXrlzh29/69nbK80oj6PTUSiUCp8+8ko0f4AefPMBl
      M/Gr7x1BFEUWoll+7yd3MYg6fu2rx+kLbK7H6jRNFWBqeorp6entluWVRxBF+t55F0WWd1qU
      jvDZ/TAPw2n+u19/c/0Zh4Ju/snfepvZlTT/31+MYzMb+LWvHiPk2x3jr6YK4PP5eOONN7Zb
      lh1DkSpMTC5y+sRhauU8xZqOcmYFi6+fcmIJa2AAv+vlY5f0BgNyvUopl8fuC6DTtT8aSczc
      w9rVhZSXEJ1ObE7bS8uzlcyupPmTy1P81t99D50g8OVZj5FeL//j33mH6eUUv/Ojm3gcFv7m
      +8fo8mzPc6gq1CWJUqVBMldiMOjGZBCbK4Df56eQTVOoyaiw7YPG7Wb2wSRL9+/g7D+IV1VI
      JVeZfXAP2TRLbiXDL/7Kyw9YAaRKjtXpWWweD9HpNMHDh9ueiq/ms+gsBpLTMQ69/w6xhw+o
      DXqRnJtTTEVRkKTNrT3YqE46X+Ff/fA6//jX30TUrQ0yW9U5EHLxP/ytt3iwlORf/vE1Am4r
      333vCD6npW3Z6g2ZVL5CKl8mlStTqjYoVRuUqw3KtQalqkS51kD60uSjSdRjNQqw8BFZyYTk
      GmmuAPHIEol8DZdFz70HeY4fHkFpVJlZihJwmliK5egNdVGvVenp6dlQ4N1O/+AQM3NLCI0i
      hXyMmxMPODM2RKoiIdYUph/O4D9/8qXvI1psiHqBSj6Ld/jIpuJQHIEQeouNwQs9VPIFug8d
      xmS1b7vX5MtU6xK//YdX+a9++QIBj73t+xw/EOT4gSATszH+xQ+u09/t4pffGsVsMpDKPWrc
      +Qqp3KO/+Qq1+ppyGA16fE4LPqcVt92Ez2VjoNuIzWLAZjZiNRuwmQ0YxKcdM3J6jtpP/hm6
      X/o6orsPJbvU3A1aSEb46eVrgIkPv/MhpkfHV1ejyHIDowrJSgGD6GBkqBdZljc9Hb0bSSaT
      +P0be73a5YsG8NgNKpOae0hqaYnQ6TdxuO3Pv8AG7LQbVFFV/vffvcz7Z4Z5/WjvC99HVVVu
      P4zyJ59OYRT1+JxWvK61Bu5zWvA9+t9sfPZ67dxHVVUa47+PNPNXmL/2T1HsPc93gxrMNoIB
      D3OLqfVjcq1MMpmgu6uLTLFCf2iARqOOoNOhU9Vd4QZ9EUrZBMvJCo3cKrLFS9Dn5KPLVxkZ
      HSOVzDAUdFE3urEZwWZ9WXtVj0kvIOskqmUJx+70DLbN9/9ygsMD/mca/2YRBIEzoyFOHAhs
      Wjk3QiklqP7kn6HvOorlV/41gk5EecLMano3s92FwQjZ1SRfdA96k5UTJ9b87F3dWyrjjjLz
      8CGLqQp/4xff4869aTBYOXv0AOP3H5JNLXN/vhuvWcbX3c+F00df+n5Glxe7p4zdZd648C7m
      J9fnKFRq/MYvvrxp2CkaMz+lfv3/xfzeP0YfOtW0TEsz1OcKcPTcMfbme7196o0G1WqFxekH
      DBw6TDaXYzGa5fXXTmI22fjqB28z0m3j+r3ZLbmf0qigCuKe9izcmYtz+c4S/+XfOL8rTV+1
      Xqb6V/8z8vzHWH/lX7ds/PCcibBiqYjJZGp1+pXhwpvvceHJAyYX7pNrb7Wvf+uXAQiefptD
      p7fmfoJOBKVKvSJh2YOrQiPJAt//8Ti/9XffQ9TvvuUk8uoE1Y//N4zn/z6Ggx9sWL6lAhhE
      A9nMYxNor1Ks1JlfzXb8Pjazoa24F73ZDAqIJkPHZdpqCuUav/2Hn/Fff/cidsvuWsCvKhL1
      q/8PcvQulm//NjpboK16LRXAarNiMFv2vAk0v5rlf/qdn3b8PseHu/hff/OrG5arZ5LIohmd
      bmdeLdPhND6nlYDHhm4T5oskK/wf//4Kv/GLp+jx745Z3C9QsktUf/JPEQ9+Dct3/q9NmWUt
      FSC6GsVmsaHAnleC3YTe5kCaX6JeH9kRE2gmnOYvV+dIZEqogM9loT/gpC/gpK/LRY/P/oz/
      HOBf/fA675wc4Phw1/YL3QRVVVGzi0gzP0WZ/xjTB7+F3jey6eu0VACP18tnN+5z7uK5lxJU
      42mUWgOj245UqoK7fQ1IzU9h8voQMaEIOqwvGArxjYsH112NqqqSylVYTuQJJ3JMzMaJpAo0
      JBmH1bSmFAEn4UQOp83EB+cOvNA9twK1XkaO3UGOjCNHx6GaR3APIoROYfnV30HQv5hJ2VIB
      arUaNqMJCdh71uruxeB0Ic1OI/Zuzoaul4sY3TYWbz3g0Ptvb1kohNtuxG33c2L46QnAYqVO
      OJ5nOZHHZhb5zluHNxVC8bIhF0p2CTU2gRq9g5KaAb0Ruo6hC57CcOxXEcyu9TqyKsALytZS
      AbxeL8H+PbZkbA/QKOWx9x3B5d3cLLDRakOqSQTHDlLOdT4Uwu0QcTusHB8JdnyhilorIsfu
      oUTGkWN3UCsZBPcA+tApxJPfQ+c7hKBrboh3bEFMMhZFEkxa3pQtxuhwkx7/mEalRN/h0bbr
      +YYPd1Cq7UOVGyjJaeToHeToHdTsEhht6LuPIQSOYTz5XXRW77bJ01IBAl0+rn90Ha/Hw9HR
      4fXjcr1CJJGjy+9FUWQsFsu2CPqq0CgWcPQO4uvv32lROo6qqqi55fXGriSmAND5R9EHT2B6
      7b9AcA+se20kSUK3xaEQG9Hybqogcnh0jIMHB586Ho9FicbzVEsZdEYHwwM9KIrCbl1arCjb
      s/hEVdVnbN5nu2aJ9MIcitkFu3AGtRXK8uc0KilUuQ5yHaTa4//lOqr06O/6+TpKrYCgNBBc
      /eiDJzAc/ha6d/7bFx6sdoqmClDJp/jZzz9jeGQMQfe0ESTJMkq9jtHRRaNY2vXBcLoWtuNW
      IwhCG7aoiHdgkEQ8Rq3cwGLdG/FAaq2AoEgIohnMTgS9cW1Qqjeu/S8aQW9aPy6IRmTBgGja
      /VPdTX8xi9PHm6+fZTGWf2YM0D90kP6hzgv2qqI3mxAEkUomgXuXTSi1Qn/wa5uP0tykB2in
      aDnGLRYKlJJRZsOx7ZTnlaeeL5BZmUO07vFY6FeElgpQr+eYnozS1/cKxT7vAkSzma6xMzj3
      yNv/VaelAvQOneCDb77B3rBS9w46s5VKMo4ivZqZIfYaLRUgHZknla+h/UxbSy0VRTCqTH3y
      2ebq5ZMUMimquQLlDiTa3a+0HNnI6CkmI0zcm+bcsfYnbDSej613gJlbP+LAV76xiVoqpXwG
      FJXITHxLQyH2e53nBMO5WYwV6NISyG4pldgKvkMj1EoStDsOViSkSg1F0G1bKMR+qdOyZmQl
      ilqt4O8JberiGs+nVlUw2e0YDJsIMtEZ6Dp0vHNC7WNa/gp+vw+b06WtBdhi9KKO9GIE2ybT
      mWh0hhYK0ODOxH1qqqpFg24xogg2n5NsrPPLNDU2poUCGAj1dCMV8tS2V55XHtHuRWmA3aMF
      Ee4GWppAXT47i/HMMz1AvZxnem6RQqFIOp3usHivGhLJhw8QxFc/28ZeoWUw3OXrk5w9+eyG
      EuFIBEXSE11dQjA4cbvdWjQo7UaDinj7B6nqdFSypT0TDPcqs+lgOL/Xx/JKHFcwhFKvaNGg
      j2gvGhREh4vaSgRRs4B2Ba0TYz0RDDf6RDyQ0xvgmLdZzhWVn//8EhcunEcvCBRLOTBYqZfK
      oNYxOXyU0lHc/iCJRJLhoa1JOb7nUFUUWcLq2bokvBovTksFCPYOcOjkOYxtZv8qxhep12os
      rUQpVBpIuVVcXV0IsgnkAvnleTz+QWY/uYze4aSrfwDb7uw0OoaqqqioqCro9MKm9l5Iz08h
      WEzoJNOu3CBjr9JSAUrZOH/58VV+7XvfbmsuQO/s5mtfH6JSqVCv11EaTuoYcTvsZFMxugeG
      uf35Fc68+RaJWAzzPlxsLFeLJMMr6HQCmaUFukZH21YAg8VMXa4Rn17edRtk7OU6zTfIWFkk
      mq1wcLCbyQezHD+8ccKh5aXlpsdz6eTaP8UKvYPDxKMRAGYfbs8eZIvLKYrp1Y7fJ22tP7Ov
      2ujo0zFUosVBYGiYRl3B4thMVgiFWqmC0e3ZdRtk7PU6TWt29Q7S1TOAoqrodO29qr/8Y+8W
      amIcu3ex4/fxdne18R3UWb49gd1nplIextvtavPqOvwjr0ZWiN1GUwUoJcP8/OYUqgK/8OEH
      2mzwFiIa9NSrMk7fPhsA7VKavt4LmQIGswG1VKG63RK90ujQG0XUR381dp6mv4Iz4Me4msAY
      8KHNWW4lIv7+QbB7MOr3TlqUV5mmCmB1BxgdlQkGg9stzyuPoFeY+dmf03v+Kzg3kRxXozO0
      HOFKxRQfX75OYzul2Qc0clkktU6tqBmXu4GWCpDKrLJwd7GpAmSzWWq1OpVKpYOivYpI5DIF
      HJ5u7B7t7b8baGoClbMJVqI5kpX0M6nRq8UsUzOL+J1G0FIjrtNeMNwaBrMWBLdbaOmKsLsC
      XDj77P6vmWyOejmHGDxEo6KlRvyCtlMj9oRIRCPUijUstvYVIb0wjWA2aqEQW0zLQfDYgRwr
      8cYzU/WhvkFCfYPNqmm0g9KgmMjgHdxcOKjRakNvM7D0+ZQWCrGFdVq+svKFNLeuzXP87LNr
      AjReHNHuRq7madTqYGt/l5hSJolVH2TwwhktFGIL67Ss6bT7sdgX9vw2qbsNuVbB7u/BsMlt
      UrvHWm/2rPHitE6Om88S7B/SskJsMXK1jqqTNDfoLqGlAuQqRaauj7M3klzvHVSljqyYMDu0
      OfbdQEsTyO8J8Wv/8KwWCrGlVJAEDyM7uN2oxtM07QHyiSQ6i4n5h7NactwtRSY+dZfVB3ep
      lDUTaDfQtAdILc0z25CxY9AGwVuKnYPvvQMoSHVlp4XRoIUCdI+M4jebcGgzlluOXC0SX5hB
      tHQRGOzZaXH2PU0VQK4X+cGP/pShgWHeePeNju0UvzDxc/RD79Jvq3L58udY7E6W5x4SGhml
      Umnw3psXOnTnnaOWjiHJEqn5JU0BdgFNxwCOrl4unj5KuVTqqAk01NtNuQHoTfh8bkbGjjI8
      epiQ08LCUueXMe4ERpcfnc7K0Xdf31S9xMMHyJTJhVcpaRtkbBktvUA2uw2ro/bMPEApl2Yp
      mqG3pxupUcfrffFdve/PxciKdR4mdcwtJXB29dLd3YtOLnLsyLEXvu5uRkVFrZco5Uo4PO0v
      jLc6XajIRKdntFCILazTUgFMNg+nxzzI8JQSWB1OLOkC8dUleMnUiKNn3lz/f3hk7IkzLjxd
      bPrBmrG7okElUouLlPN5vIbNTTGWc0kkPVooxBbXaVGzwacff4TVH+L9rzydwSwaXqZSV/D5
      gzSqL5oaUebSpc84f+oon1/9jLELX0fNLnJ3PspY0IDqGuH25zc5ffYwg/39m3q4L7O7okFB
      pxfR60WETe4UHxg98aKiaTyHFr+YgZ6eLiSdGYWne4DQwDAvv2eMnkC3H5PFjNvXh8cmUpPs
      9Pf2MdCrZyppwG5SeDg9RVUSGBvue+k77g5EusaO0bXTYmis0/KVZTXpuXTjPqcvnuuAF6hB
      eGaWSq5AsljElUhRS0RIlBWEUo1Ew82p8+coZOKIFi2LrEbnaKkAgVA/3f5026n7NoeBD37p
      S7skBn18MQr44q/fryWQ1egsLRWg0ajjCgRe+O1f/eifoySmXrB2+5je++/Rd2lZ0zRejJYK
      UCgUqBdLNOCFAuKUxBRy+NqLS9Ymaq3Q8XtovLo0VYDEw7s4hk8yIN3VYoF2CZE71zB6nEh5
      HY6+Hm1N8BbRdCbYPzzC3M1PyUqgRQPtBlTMLh+C3KCUTiKatCD1raJpDyCIFt5+553tlkWj
      JQJGixmTuw9XSIci13mO9aqxCTb9LSpSjdVkDr/HjaLIWDQ35Ya8PxykJr9s+PPwU59u3LiB
      WQ4iy5ub6VZVVavzRJ1NK8DKyiqqrDKfT2EwOhgZelUmqTpHl33rXxL9X30XRVHa3r/hCwRB
      0Oo8UWfTGxUZ9AKJbAGHw43aqGqD5B1ksz+8VufZOpvuAYJ9gwS1l/6uQGlUeTg7h8lsJ5fL
      4/e7yJfqmHUSOouLwd4gyDWmZuYwGszkCyUGBnuoVCUa5RyyaOXAwLPZ/1rVMaoFsA3gdzaf
      HVpemEHRGchnsgSCPZQqVfxOM0vRNCeOjm2ijonFaIaTm6hzYCDI+N1pTp9sHkXcrI7duAUj
      KUVRUJRn7VvTr/zOy166bZ5nAx4d9PFH/8v3dkyOTqaM1IkGbBYbVRUOhVxMFwR8FiOCDPFU
      ck0B9AbsVivlxlqZssWLUF1Fb7Cgo8W4pEUdv8/NaqF1n2+12tDJZfSDR2kUYljNIiaTCa/H
      s6k6VqsVqZHYVJ3pe3dJZyvPRC8/r44oqC+vADqdDkEQNh3duB/odMJgqVIgW67S0+VnPpll
      KOAgU2xgNRrp7Vlbp6HUiqTyFXq7fcyn8vToYqxmCnS5zChi87mEVnWEhp6iXANf85Vs6XQK
      hy9EZXUaX7CXlfAytWqN2nPGqM3qyLKCzdZ6nUOzOiOjJ+muFFrmsWpWx+/3I6hb/Cstzk6T
      yJRxu804vSGUSh6DASJZ6HYIOHxBEpElPIEepHqJXCZPV6iLVCqH0ihjsnlwO20IgkAmncZr
      rBEXuqFWQKpXcDkdSLUKuUoDvQrBniA6QcD0PN94cZVP56v0OnQYRQG3N0AsmWCgf4AHd26h
      GO1QzTM8dpxkIoFUzeP091Ap5AkFA4RjaUJ+B4VSlWpDxWESaAgmUquLBIIDuDw2ZEmHyail
      EdtrdGS3XofbhdFopVFNUSzLZFJxPB4P+WKV2ZufoRPhzswSRj0k4yvcmlxBrVao6Y1IjRrR
      8BypXIVaucDD+SUWl1eoFvPIQD6fp1iuITYKpKKLzCzFmF3aeBtUt9VArpChWBWYvnULkwiZ
      R5sfuF0unF4/D25fwyxUyah2zLUcglngys0ZFKlKOBJDkerMzs1SrNTJZ5JYHW6qpQy3b0yA
      qDX+vciW9wD1Wg2jyUStVgMBMok47q4Q6UQSUZCwOV18dukSJy5+hS6nifDyMgg6VL2RLp8b
      EAgvLzN8cASpVkPUqVQllXS2gN/jBNb2Hra63OSSKSx2G3VFRyjwnKWZco0aJqrFHOVCDre3
      C9EggN6E0qhhMpmo12qoqkw0niYUcJOvypTzOaxGlYnZGG+9dgpBrhNNl1BrBRy+EDazAeQ6
      y/EsB4debuGOxs6w5QqgobFbSESWuHRtnG9++9sYm9g6i3fuawqQTqVwGBrkDUF8FohGYzid
      DqxWK6lUCp/Pt9MiarwElz+7Qjmbxut28WdXJvjgtVMItSSXb84yNnhMU4DF2WmKmShlcy9C
      rYDH70FEpZBNYzSbeHh/kv4j57BZDYwMaBMge42l8DKoAmadxORSgtE+F6rBx9LsA3yebk0B
      ioUCFr1MvCiRzxfp9rsByCTjWGw28tkcNrebYllhbERTgFeNfa8AGvubjrhBNTT2CpoCaOxr
      NAXQ2NdoCqCxr9EUQGNf88IKIBUTRDKd2OZHIrwc6cB1NXYDUr3M7Vu3yZdr5DKZtYBsucbS
      SmxH5HlKATKZDADZbI7Z2Rka1RK3b49TbcjMzs5w86//gB99fINSXUEqJhifnGYpEkeqFCjV
      FTKZDOl0GvWJa+XyOeanJ4knk9ydfIgKxMILLK7EQKoQDoeZml0kEZnk+//2j0hkMsw8mFwv
      q/Fq8cmlKxw9cZxqscDd27epAzN3b3P93oP1Mkqjyvj4BDVJYWHmAbF0nkohR11Za1elXJ5w
      eJ5wNMnkp/+JP/qrK2QyGTLZLLFUhtnZOaR6mYk7kygqRMMLPJxfbirPUwpw584dqtllZlay
      JOIxbnz+KVaXF1mSSMRj9IR6OHbqHLZHgRVmm5vo9B1WV6ZZTNe5ffsmUmaZibkE4+MTa9e8
      dRVPzxAf//QjbNUIM4uLTMcbVKPTLK8sc302TTqyhLMnxKFDhwl4HBQqDezVCMv5Dv0KGjvG
      2IEBPr9yhXy1sX5sNV/nfMjEbLICwCeXLjF2ZIyFOzdoWLuYvnWd5en7pOtw++ZtFu+OUzG5
      mZ+aJBTq4fCJMwjZOX52c46A10M8scrly1c4NBzk02u3ufLZ5zjszdcXPKUAJ4b8/MFP7nP6
      6CAAo8fPYqPAtfE17dSLIpVyGUVZezdbbVYkWcUg6qlVq6RSGbpGTrFy80fYu0fW6pisuO0W
      vD4fFpOIoqxtEvEFgUAXRtGAip56o4KiKAQCAcwmkZdOpKCx6xBMNt584yILDyfXDjQKxONp
      EnWR+Xs3vyj1KCft45ai10O1WiWVyQAGAgEPomh43CZVlcNHj6J7tC4rl4oxfm8ah93KW2+/
      x5WPPqbeTCD1KRQ1EomoqqqquWxWrRZz6s3b42pNUtRcNquqiqxO3rmtluuyKtdK6t27d9TV
      xNrx+3fG1aVITFVVVf3Jj/9SlR5dMZvLqqqqqul0Wq0Vs2q5oarR5Xl1YSWmqo2ymi3W1Hw2
      p8qqqi7OPlCT2byay+bXy2q8WpRyKfXmrdtquSap2XRarZZzaqG61lrS6bSqqqoq1yvq+PiE
      WmvI6vzDSTWWyquK3FDvjI+rkVhSLWZzakNV1Ww2p6qqoj64N6Fmsxm1WJNVVV1rc41qUb11
      85ZarNbV8MKMOru40lSeLQ+FqBQyZKsQCrReB6qhsVvQYoE09jXaPIDGvkZTAI19zb5WgExk
      kemlKFevfXkfA4V8rkB4ac13LFUyXLl8jbLcYGkpwvS9Ca7fvrd+fq3M2lzIRiyFm/ujn0dk
      OczC8hIPHkxuuq7G89nXKYazqxEWZBOLd+9h1isUJANSMYnOaGBpJY/PrBBJZDDKFY4d7eHS
      n/2Ywde+wsr92xRkHcnFCisrixRLVSgnkUMnMeUjGPQieQmcJgmvx8/l8VmOD3uRRBfx8DSL
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Line Chart Forcasting' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Non vs Poto' width='183'>
      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
      GvevOF87Fs9MfAA2lgD6O2Bs4HOwPnkK7fJWKpD2lQNC5G6wNMFKmemYadz2cPz9GA79WAPd
      RkMDZRVBcqMSla3GKXEyNQMOc/zxEJfd55jpiVM2mBAaitIPYrHsozo0Wt6FgcNH4Z4aCa7f
      HJK7BZG5gM2EKGw0ULZKpTI4c11dJ98Nl/Uabb93Zho3AOloyP9nI+QtF5xG8roKON/8cPxC
      JEaMQE7CWuwpGIMgt9aBG/pDYJVKBTs7u25cNOtObb93Zrotaa8p/ycUDXHB/a0ulcLr+UDU
      pydDoezgikxYZht3w+ULqFA277ivfofElHJMenx0+weN0rEIm++EjB054L77FrPdllg3/oxd
      qzegtK4RVnZDMTF8KfycDY+1HDQNYQ9vREKmC5ZPG8TPmvQR/KI8evhFeW7hv8RhrBfjuJmw
      OG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvj
      ZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4m
      LI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLi
      uJmwOG4mLI6bCYvjZsLiuJmwOG4mLI6bCYvjZsLiuJmwzDfuplqcTl+P5UsiERm5BDGbM1Gs
      vHlQgaQkhd5gNU4nr8HufI0JFspMRWLqBfxR17O34UC/AMS8NwoO/dSozNmOTSnHsSZqAmza
      jFUqUrHfSo43Rvc3yVqZaZjtPXd5aSPG+YyCQ38AljZ4YOIz8O5Xjd/aDlQqkPaVA0LkbrA0
      wTqZ6Zht3KM9hyL3ix9RowHQpEbldxkoG+YO51ajlDiZmgGHOf54iMvuc8x2W2LpFoTlmmSs
      XfwRfoMNnCa/gNfm6qWduwWRuYDNhChsNFC2SqUyOG9dXV13LZl1s7bfO7ONW6lIRlLJBLye
      EKbbc+el4cNdwJJ5j+r23OMXIjFiBHIS1mJPwRgEubUO3NbWtt2cKpUKdnZ2PfMJsC7X9ntn
      ptuSX/F9RhN8n9Pbc497EmPO56Kg1TgpvJ4PRH16MhRKwzMxcZlp3I4YMrQCR74pgVIDABrU
      nD2GU033wbHtUOlYhM13QsaOHHDffYuZbkss4Safj+od2xGz7wLqm6xgN3Q8ApcEYYih0YOm
      IezhjUjIdMHyaYP4WZM+woKIyNSL6C1UKpXBvXhf5L8yzdRL6LSD6+a2+thMtyWM3RnHzYTF
      cTNhcdxMWBw3ExbHzYTFcTNhcdxMWBw3ExbHzYTFcTNhcdxMWBw3ExbHzYTFcTNhcdxMWBw3
      ExbHzYTFcTNhcdxMWBw3E9b/A5JXVP0ZDoE5AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Photo Activity' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rating' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAV2UlEQVR4nO3d+W8c6X3n8XdV9VF9sA8e3bwpkqIO65ZGtiTPaC7HHjljeda7SZzD2GwQ
      JAvsGotdYA9sjsX+A7tADiROggSYABM7mSQwNrZ2bM1Ys1Y4oxnZInVRJ8mmRPE+mt1NNrvr
      2B96JI8kUuLRzRa7vi+AGA1Z9dS3gfp0VT311FOKbds2QjiUWu4ChCgnCYBwNAmAcDQJgHA0
      CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmA
      cDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0
      CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNFe5CxBipT744AMGBwc5ceIE8/PzpFIpWltb
      SSQSTE1N0dXVRSwW4/bt2ySTSUzTxOVy4fP5mJ6epqOjg7m5ORobG8lms9TW1soRQGwelmXh
      8/k4ffo0PT09XLhwgTfffBNd11FVlbt37wLQ1tbG1atXGR0dBeDUqVPYtk1/fz/d3d18+OGH
      BAIBABR5UbbYLO7cucPIyAitra1MT0+zuLhIY2MjQ0ND7Nixg0wmw7Vr12hpacHr9aIoCpFI
      hMuXL9Pe3k4mk2FkZIRdu3aRTCbp7++XAAhnk1MgUbFs2+bMmTNks1m6u7sZGhri7bffxrKs
      B8vIRbCoWIqiUFdXh67rhMNhWltbmZiYQFV/9r0vARAVy7IsBgYGcLvd9Pf3U11dTVtb20PL
      yDWAcDQ5AoiKdPbsWYLBILt27eKdd95hx44dzM7O4nK50DSNeDxOLBaTi2BRmVKpFHNzc8zO
      zrJ//35SqRQ+nw+v10t/fz+9vb2AHAHEBjGNPLlsFiO/iJHLYeYXyZgubG8Vbk3F49bwuDWC
      Pg+auv7v5Wg0SiAQQNM0rly5wvbt27l48SIvvvgifr+fRCIByDWAKDLLNJmdGGFqOEFyYoTk
      +AhzU+OkpiewLBPbsgrdkLbNdXUr19WtqIqCqiqoioLXoxGPBmmJhWioCdJcF6KruYZYNFCS
      euUIINbFtm2SE6OM3O5j5PY1xgZvspCaZTXfq5ZtY5mF5XOGSWp+mlvD0w/+7tJUYtEAezpi
      7G6Psb+rnpDfW5T65Qgg1iSTnCFx5af095xjfOg2tmWuuo37R4DV0j0u9m+t54W9rRzY1kBA
      d6+6jfskAGLFbNvm3q2rXPnxD7h36yqmkV9Xe2sNwKeFA16O7W7hK5/fRlNtaNXrSwDEU5mG
      wd3rF7n0/inGEregSLtMMQJwn0tTObKrmdePdrGzrW7F60kAxLJs2+ZOXw/nT73NzNhw0dsv
      ZgDuUxQ4tLWO//Z6K+66rqcuLxfBYknJyTE++qe/Yaivt2jf+BvBtiF05/+S+tZHKK2/Sfhf
      fg01sHwPkgRAPMQ08vT+6Htcev8URm6x3OWsmoccb/jOstBXj3n5FPMffEjkG79K4NixJZeX
      AIgH5ibHOPPtP2Ni6Ha5S1mzE/5z+KfcLMz7ADBnZpj6gz9i4UIP1b/xb1B9voeWlwCIwuOC
      vefo/se/JreQKXc5axZW0nzZ/THZu22P/W3+x2fJ9Q9Q+x++iae19cHvZSyQw5lGnrNv/xVn
      /uZbm3rnB/iK/59RRsLYxtL3BYzhYcZ+9/dJv/ejB7+TADhYfnGBd9/8I258/P821YXuUurV
      SV7iCotjNU9czs7lmP7zv2D2797Gtiw5BXKqhfQc7775h4wN3ix3KUXxi4EzGIk6sFfwnW7b
      zP39P2DNzUkAnCg9O8UP/vJ/MzN6t9ylFEWHa5h92WHmZ7esar30D0/LKZDTZNMpfvCX/6ti
      dn6w+br/PbJD9YCy6rUlAA6SX8xy+s0/YGa0+Hd1y+Wg5wYdM2msBd/TF16CBMAhLNPgR2/9
      ScWc8wNomHzNc5bscGzNbUgAHOLcP32bO3295S6jqF7Qe4mNsWy350pIABxg4NJ5rna/W+4y
      ispDnjeUj1gcf3K359NIACpcamaSs2//1abv53/Ua75z6MOBlXV7PoF0g26wbDZLLpcjk8mQ
      SCTYu3cv58+fp6qqipqaGt555x1OnjxJMBgkEAiwsLDA+Pg4VVVVGIbB9evXOXDgAJqmsbi4
      iGEY2LZNXd3jY+BNI8+Zt/5009/hfVRISfPF/GXysw3rbkueB9hg7777Lul0GrfbjcfjIRAI
      YBgGXq8Xy7LI5XL09fWxb98+jhw5woULF0gmk6iqyuDgIC0tLei6jmVZLCwsMD09ja7rnDx5
      8rFtXTzzfT7+/t+W4VOuzFqfB/iG/x2O3E5iLejrrkGOABusq6sLVVUJBoNks1lM02RycpLm
      5mYAXC4XNTU15HI5zpw5Q0NDAx0dHUxNTRGLxR6EJZvNsnv3btLpNLOzs49tJ5Oc5sLp7270
      xyu5uDrFsdQQxkK8KO1JADZY66dGIt7X1NT00P+Hw+HHllnqd/d//+j6AOf+z7c35Xj+p/kF
      748xB9d34ftpEoBnzNWrV1lYWCCfz+P1ekkmk7S0tNDZ2bniNoZvXGHg4kclrLI8OlzD7Jmc
      JmfUFq1NCcAzxjAMUqkUuVwOj8dDJBIhmUyueH3btjl/6u9KWGG52PwrpZvceHVRW5Vu0GfM
      /en8wuEwoVCIVCpFTc3KD/nDNy4zOTxYugLL5KDnJu2ji+vu9nyUHAGeMZ2dnas63fk027a5
      eOb7Ra6o/DRMTuZ+ipGsKnrbEoBnQDqdpru7m9raWlKpFMePH6e3t5eZmRkURXlwP6C9vZ2W
      lpZl25m8O8DI7WsbWPnG+LznEnWDKtYaRns+jZwCPQOCwSCGYZDP5xkYGMAwDLZt20Z9fT2R
      SOTBVN89PT1MTk4u286l908BlXVbx0uO19NXsLLr7/NfigTgGTAzM4PX6yUcDtPZ2Ukmk2Fy
      cpLt27czNzdHR0cHBw4coKam5qH3W31abmGeoas9G1x56X3BdQH/6NqGOq+E3AmuELd+2s37
      3/6zcpexKk+7ExxSMvzPue/imgiWrAY5AlSIWxc+KHcJRfc653FNlOa9APdJACrA/Nws925c
      LncZRRVXpzgyMcpaHnNcDQlABRgduL6qF1JsBm/kf4oyV7pz//skABWg0ro+O9R77Bl7fIBf
      KUgAKsBIfyUFwOaN9EXsbHFegfQ0EoBNbn5uluT4aLnLKJp9ygAdE/Mbtj0JwCY3PnSbSrn5
      pWHy+kwftrlxAxQkAJtccnyk3CUUzTHrOvXTxoZuUwKwyc1NjZW7hKLwkOe1iduUutvzUTIY
      bpNLTlZGAF7J9hHKbMypnKUoLOheZkNVEoDNbq4CAlBlL/Dq5GDR27WBnNtNOuBnsjrCZHWU
      6UiY6UiYBd2L6XJJADYz27bJpufKXca6fSl1DT23vjZMVSXj05mOhpmORJiMRpiJhJgLBsl5
      PcuuJwHYxIx8btPfAY6ZSY5Nr3ymahtY0L2kggEmq6NMRiNMR8PMhkJkdS/WMqNllyMB2MQq
      YdaHn5+5jttaOsR5l0baXzh9mYmEmYpGmI6ESQf8GK7i7LoSgE0sv5gtdwnr0pqbYf/cKKai
      sODTSVZVMVld2MknaqKkggGyXm/h7dclIgHYxIz8Ok+cy6wrlua7nfWMR+rJBmvA5UdRXKiK
      G0XRNqQGCcAm5nKtfVrwcusMNfLZLVE6W97jw+QNbs+r3EqqWIobRXGjKl401ffJjx9V1VFV
      HeWT+wSKoqHe/9sn6yiKC2WVRwsJwCbm1ks/XLgUGv01HG/YjZJRiOaq+XLtNLZtMryocHbW
      5KNkjpw1j2HOrLBF9ZMQeNA0H6qio6l+NM2HpvgKQdEKYVIeBKyw60sANjGP7i93CasWdOm8
      1LgXVSn01rgmdmIG/hlFgWbd5uv1Bl+sgXNJjbOzGkljJd/oFpa9CPYippV64pIKWiEAqqdw
      VCnCZxJlorlcKOrGnCsXg6aovNy0H5/rZ0OdfaktGIsPD32udsOJWpPfa8/xK/V5mrxW0Wqw
      MbHsLIY5Ry4/LgHY7PyhSLlLWLHPxrYT8z1cr0dxYU9sW3J5XYNjEYv/vCXPbzXl2Oa3UIs8
      8lUCsMlFYut/ScRG2BZuZmfk8ZmxAbwz27Cs5U91XArsrbL5Zkue/9iW57mQiVspThAkAJtc
      uLY48+SXUrW3iiPxHcv20IQIsDCx/Ix39ykKtPtsfr3R4Hfac7xabVClrS8IEoBNLlRbX+4S
      nsiruXmlaT9udfn+FlVRcE3uWFW7tR74FzGT3+vI8bWYQdyztusE6QXa5CKxxnKXsCwFON6w
      h7Dn6XP7RPL1TCSjBMMr7fos8GvwSrXJ8ahJb0rlzLTGYFbBXuFzBRKATS7W1omiqthW8XpK
      imVfTSetwZW9xNrnUjBHt0P4wzVty6XAoZDFwSqL2wsK705rXMuo5O0nB0FOgTY5t1entrm9
      3GU8pjlQx4Ha1U3zHkhvIZ9bfujySigKbPXb/HazwX9vz/FCxMCnLn+dIAGoAA2dqzt/LrWg
      28eLDXse3OxaqVqPh+RwR9HqqPPAL9Wb/I/OHCfrDKKux4MgAagADR3PTgA0ReWVxn3ortV/
      k9+/GC72Iw5BDb5YU7hg/tcNeRq9Fvdn0pBrgAoQ39KFy+N9Jp4POFa/izrf2m/OxV0hRsYa
      qa6/V8SqCjwqHA5bHAxZ3JpXOD2tyRGgEri9Oq2fOVDuMugKN7Et/PgrW1cj4FbIjewsUkVL
      0xTYHrD5dy2GBKBSdD33fFm3X6eHORr/TFHaCi82kJkLFaWtp5EAVIjGrTvRgxuz0zxK1zy8
      3LQfd5EG5jUEVKaGlh4fVGwSgAqhqhqdB45s+HYVFI437KHKXbxnE1RFQU92rrtLdEXbKvkW
      xIbZ9fwXUbWNHR59oHYrLcG6orfb5PMwfmdL0dt9lASgglRFa+k8cHTDttcSrGNfTWluwlV5
      VBZHthe9S/RREoAKs/elL5d0FoX7qtx+jq/hZtdqxLUwM2OlHe4tAagwkVgjbbsOlnQbLkXj
      C00H0LXSnqM3BFQmEttLug0JQAU6fOIX0Eo4Y8TR+E6q9aqStX+fS1UILjQynyrdtiQAFShc
      V8/u418qSds7I61sizSXpO2ltFZpjCaWf5fwekkAKtS+l18nGKkpapsxX4TPxTd23FHYq5Ib
      24pplKZ3SwJQodxenc995ZeL1p5P8/BS4z60El70LqfZ52X8Tml6myQAFWzLnufYdviFdbej
      ovBi496i3uxajcagynhiW0m6RCUAFe7oV39t3Y9NHqzroilQW6SKVs+lKkTtKLOTxZ8AQAJQ
      4VweLy/9yr9Fc6+ty7ItGGNPdfmfONtSpTIy0FX0diUADlDT2MrRk7+66vUinuAnN7s29sV1
      S9aiq5jTzSxkgkVtVwLgENs/9yIHf+6NFS/vUjRebtyHR3t2ZqBuqXIxOri654yfRgLgIPu/
      8FV2HHl5Rcs+37BrQ252rUZLUGV8qLhdohIAB1EUhaNf/TXadh964nK7om10hp69+YbcmkK9
      V2f8blvR2pQAOIyqabz0y79N5/6lnx2I+6IcjpV2/M16tFWpjAwUq0tUlQA4kcvt4fjXf4ud
      R1956Pc+l5eXy3Sza6WqfSrKQpTk5Mom3FqW4iLQ8Z8kAE6lqipH3/gGh770NVAUVBReathL
      wK2Xu7Sn2hLSuDew9kcmFc1PsOv38da+KtOiOJmiKOx/9SRV1TGyZ7tpDBR37FCptFap9A01
      kZ33o/vnV7WuqjcR7PwvuAKFACn2Zn/TsiiO2Tl4/wOYWt3ktOXykzEDpfEiW3ZeWvE6nurj
      +Lf8e1TXz3q35BRIFERC8POvwvbi9rOXSmuVyujgVixzBbuwquPf8k0Cnf/1oZ0fJADi01wu
      +Pxh+NJLhUA8w+r8Kh5bZ2J46bfOFCi4I58lvPuP0WNfRlni4l5OgcTSTBOu3ICLVyGXL3c1
      S7o5YzJkjbH/+A8fewxa1VvwN/86nupjT2xDAiCeLJ2BnivQnwDDLHc1D8kaNj9M5Nnzwg8I
      VU8BoLij6PGT6PGTKNrTXyMrARArM78AfTeh7xbkcuWu5oGPRvMY0QE+8/kh9PhX8dS8gup6
      +htp7pMAiNVZyMLtBNzsL/QclXP30TRmorXMt7fRuKsZRV39kG8JgFgb24bpWRgYgsE7kMps
      TBhUFaoj0N4K7S0QDGCaJul0mlAotOybKJcjARDrZ9uQnIPRCRgdL/x3IVucQKgqVAWhIVb4
      idVC4OFz+5s3bzI8PEwsFiOTyRCPxxkdHaWmpoZkMklDQwOJRIL5+XkaGxvRdZ3p6WkOHjwo
      d4JFESgKRMKFnx1bCzt+Kl34mU3BXKoQkGwO8nnIG4VeJtsGVSl0v7rd4HYVdu5QEEJVha7Y
      YOCxHf5Rtm3T39+PZVm4XC4GBwcJBALMz8/T19fHT37yE44ePUo+nycajfLee+/x8suFYeFy
      BBBPlE6n8fl8aJ9Mumua5oN/r4tlFX40bd1TOS4uLuJyuUin04yPj9Pc/LN5i+7du0ckEiEY
      DJLP50kmk0SjUe7evcvIyIgEQCwvl8vx1ltvcfjwYeLxODdu3MCyLGpqarh06RIHDhzA6/Uy
      NTVFe3s7g4ODhMNhFhcX8fv9TExM0NHRQTQaLfdHWZYEQCzLMAzOnz/P0NAQNTU1mKZJbW0t
      LpeLxcVFLMtifn6e3t5egsEguq7T1dWF2+0mn8+Tz+fRdZ3nnnuu3B/lIYlEgkQiwfHjx+Ua
      QCxP0zSqqqo4ceIEU1NTnD59mhdeKMwzNDVVuPHk9XppamoiHo9z7949WltbUVUV27Z56623
      eO2118r5EZY0PDzM7Ows8/PzcgQQzpNKpbhw4QLPP/+8BECs3uTkJN3d3XR1dTE4OIiu64TD
      YQ4eLO207KUgo0HFqum6TmtrK7FYDMMwCIfDJBKJcpe1LNu2+d73vse1a9ewbZvvfOc7jI2N
      0dPTI9cAYvWmpqaYnZ3F4/EQj8fxer0cOvTkmSbKyTRNmpubyWQy9PT0kEgk8Pl8uN1uOQUS
      znDu3Dm2bNmC3+8nk8lgmiaXL1+WAIiVsW2b06dPc+jQIT7++GNeffVVhoaGuHHjBqFQiGg0
      Sm9vL4cPH6azc3M8VQbIKZBYGUVRaGxs5M6dO1iWxcTEBJFIhHw+z9jYGLlcjnA4TF9fH/l8
      nh07NvZFGmslARArYlkWd+/eZdu2bczMzKAoClNTU8TjcaLRKIZhUFtby8zMDKHQs/045afJ
      KZBwNOkGFY4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYB
      EI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCO
      JgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI72/wGlbD3z8+4C1wAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='SIA' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SIA Positve Cities' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SIA Type of visit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SIA countries' width='192'>
      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
      RQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SIA type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Stat' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='visit buy month' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAZ50lEQVR4nO3d2XNb993f8fc5WA42Yge4b5AoUbK1WbbHfpLYE8fTdJKLXiWdpjNtZjrt
      tE+v2ple9M53veo/0Mvmrn06mXTcJ5n4iZ3EluXHz2MrtnZRlLhvIEHs61l6QYoSTUgCSIqg
      cL6vGY9F8nxxfgD5Ac4Bft/zUyzLshDCptROD0CITpIACFtzdnoA3WZj5SGZmp9yepYzr72B
      e/spxtTrFGsG2c11RoaGqRU3uX73IadPn2IzX6GWWyJfd5KIBRkZGgagUS3TUFz4NNcz9qiz
      MJdmaKS/rXFmVuZYL6vo9SJnJidR9nl/X3YSgEOW2cgwk54jM7dI2TRBUWnkNzD1Bqt6D34z
      w3J6k7BSpS+Z5IurV0m98gbzC/NUai4W5ssszM/TqFao5PM4Y8O4jTxej5eNfJ2AZhKPRbn6
      l/ucGUtgOJ1k5pZ5cD+KPxQkX7VIhl3MTs8wPNzHYrpAOBxGt0woZ3H5ozy49Rf6R0YoWT2c
      GdRYzNYYCmudfug6Qg6BDpnX34PmcJA6fQoVsCyI9Q4SS/TSFwkwkjqFz63idrtwhXqplyuM
      9IVIDozwk5/+E1LjE/g0B2CRHByhx+PEsiwsvUE2l6UnkgRdJ5mIkclsoqpOUpOTxOK9zMzM
      c2bQT77mJOB1kM6WGB7sRTcssCwiiX6cep5QtBeny0s0HKShm2guR6cfto5R5F2gzjD1KquZ
      Ev3JWEvb1ytF5tN5UiMDO4cruWyOUDgEQKNaJFPU6Y2H2xiFxcLCIoNDQ7Y9BDpwAAzDQFVV
      FMWuD6F4mckhkLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwtUMLgGVZ/PGPf8Q0TT78
      8EN0XWd5eZlbt25x9epVbty4wW9+8xump6cxTfOwdivEgRxaABRFobe3l6mpKW7evEk2m6W/
      vx/LsnA6neRyOVwuF7dv32ZqauqwdivEgRzaVAjLsvj973/PmTNnAAgEAhQKBe7evUtvby8O
      h4NkMsnm5iY+n4+RkZGd27Asi9/97ne8//77/OpXv+IXv/gFN27cYHl5GZ/Ph67rzM3N8eab
      b3Lu3DlUVY7cxOE4NnOB7t69uxOin/3sZywuLmKaJrquo6oqpmmytrbG4OAgb7zxxoH2JcQj
      LQXAbFS5dX+ORI+buaUM4XgPlYrBubOTmOZWAMyVbyn/r1+2vOPAX19FcXm2bt80uXLlCqOj
      o0QiEQzDACCdTuP3+1EUhUAgQLFYRNM0otHo/u6tEN/RUkOM6vIQC/eA1cCpWui4CPqdmJaJ
      aZpYloWp62A2Wt6xYeig6FtfNCq8OeYD0pBN72wz4gGM/NYXWYgC6KD3BECRwyBxcC0FwKiX
      yefzJHt7CSdU+uNBcpWtZ34sa+sQyNFeU4XD4UBxbu3eWJ+l/jf/uuXawF9fRdF62tqfEM20
      FACH28fp06cBiIS3Gi48/hc3KCGOihxHCFuTAAhbkwAIW5MACFuTAAhbkwAIW5Mrw4muZZom
      v/3tb/n+97/Pxx9/zLvvvsv169epVCqYpomiKPIKILqXqqqMjY2hKAoTExNEIhFSqRTLy8uo
      qorL5ZJXANG9DMMgnU5jWRbr6+ssLS2hKArvvfcejUYDTdMkAKJ7qXqFH0zGt76Ix4HNrX87
      AQ2gKgEQ3ctYvU7l//zbZ24j5wDC1iQAwtYkAMLWWgqAqdeZX1rBqJW5Nz1DPpNmdmEFWVhA
      vOxaOglWHE5Uy2JxaQGjobBRrOJSLEzziY6w7TbGVhmGsdMRZpr7qNX1tmqE/ZjG8y+/01IA
      zEaV5eVF+vv7MQvr6JqTSsNkUFFBPYSOMHX/tUI8je54/gFOyx1hr7/+OgCDg4MHG5UQx4ic
      BAtbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAIW3vpZ5RZlsWVK1e4
      ePEi169f5+233+b+/fvMzc3R29vL5uYm+XyeyclJRkdHcbQ5aU90t5f+FUBRFJLJJG63m2Aw
      CEChUCCZTBIIBEgmk6iqys2bN7l//36HRyuOm5f+FcA0TR4+fEij0eDBgwcEAgHC4TBLS0vk
      cjn8fj+XLl0ik8ngcrk6PVxxzLz0AVBVlR//+McAvPLKKzvfHx8f37Vdb2/vkY5LvBxaboi5
      Pb3A2VOjfPH3XzPYHydX1nn1zOkXPb7nMtanKP/vX7a8feCX/w/FG35xAxIvlZYXyYuG/CzN
      PqRSq1DWVYJ+bfcieR1qiTT1OlRzLdfqho4i7ZS2cGgtkUa9TC6bZWAkxVu9g2A0DneRvAO0
      RLZb65R2Sts41JbIye0V4LevKYdPFmkUXeClfxtUiIOQAAhbkwAIW5MACFvbcxK8vrLA9Owi
      qqLgC8c5eyqF0omRCXEE9gTAo7mp1WqAi3MnRjswJCGOzp5DIFV5/C1VVeXZX3S1PQHwheNE
      A3DrL1MYcvln0eWangRHYoOEom5UefoXXa5pABbn5xk7OSFvEYmu1/RvfGCgl/TGphz/i67X
      NAC5XBFNsWjIOYDock0D4Ha78AeDOOUlQHS55of5ioJpPn8utRAvu6YBKFdqTN+6SX37EMgy
      GiytrFGvFJm6/5B8doP5pTVZJE+89Jr2A0R6fIxMvoL26BBIUTF0HdWloamQzpdwczwWyWu3
      VjcM6QiziX13hLk8PtyO4s4zvKnXWFlapFEpUqwZBAMa+arJ0DFYJE86wsTT7LsjzKGqFItZ
      1jdy9MfDONw+3njzjUMfoBCd1jQihVwGb08c1ZJDBdHd9gSgXily98E8mlMhGo91YkxCHJm9
      s0EdLoYG+khn5JNg0f32BMDp1jB1HUpZpuZXOjEmIY7MU2aD9mCoAU4M9x31eDpiZWVluwkI
      8vk8pmmSy+XY2NigVquhy9umXavpu0AGGm5Fb++DLk8Ix4kftb59m29fvii6rvPpp5+SSqU4
      d+4cv/71r3n//ff505/+hM/nQ9M0Ll26RF+fPZ4M7KZpAMqbaQLJvramQ999ME8qfgpFafXM
      4XicYRiGgaIoVCoVpqamqFQqXLt2jUKhwPe+9z1u377NV199xU9/+tNOD1W8AE0DoPl6qK4v
      c+feDOdOjzfbZJdKpcL86iaOxtaHZwsbJXyac+sTYhNUFRyqgmFaLKyX+MnlYdyHfU/2SdM0
      3n33XQKBAE6nk4mJCVwuF41GA1VV6e/vp1qtdnqY4gVpGgC35sawHHjcrb0GlMtlLpw5SePu
      fQrVBgNRH163A5/mJJ2roioKM+kiiaCHiYEQ6jFpNbOqeRr3/44QwCo7h3yN7f8/+iDdA9QB
      1+mfoLg8RzxK8SI1DUA+VwDDYGh0pKUbqVQqmOU89bUpHi1BoQN5Hl1JFBJGjWDNjaooLE3P
      ow3Nozi2tjbSK1Q2G01uuTn/wiKK2w+AubFMud1aT3GrdnOG8t/819Zr/+UJFF+05e1FZxlL
      a8/9u2oagECPH4+vhqPFJ+p4PI7RWKK8+uenbhMCKD6xj9h/Q3FuPZsaxirlQOsnxYFYDEUL
      bNVaG3jbrd1eH8BUcpTaqo2i+OMtby86S6+EqDzn99skAA2ufXUdf7yv5dNUj8eD6dGwXK2f
      Nns9HhSXFwDD42mv1utB0Q5Q631ca7ZR6/F6ULdrxfGnezR4zu+3yU9dTJxOYdSq6DLhX3S5
      5h+Ehfzkq7q0RIqutycAjWqZG3ceMDrU34nxCHGk9pwDKIrCqVMTrGWrO+kwG1XuPFykL+xl
      dnGDSMRPsaLzyuSpIx6uEIdrTwCcmpeN1VXWVjKsnEwxGAmiujxEenxU6g2G4iHWdIug33E8
      Fsk7QEuktY/9mjIv6KWx75bIsxcuMpgq4d9uczTqZTY3N+nv72czV2QsGiDbBYvk7We/qrRT
      vjT23RJZzGb49sY0P/ynW5PbHG4fZ8+eBSASiQDgDx3WMIXonD0RWVuaZTVXYaA/ytS9B3Lp
      E9HV9rwCJAdGcGvrlGoGfX29x2TOphAvxp4A1AobfPn1tygON339vZ0Yk+hClUqFzz77jFQq
      hdfr5ebNm/zgBz/gyy+/xDAMRkZGGB0dxXnE51h7DoHW5xcxXU5Kq2sU5fhHHBKv10t/fz+D
      g4Osrq4yOjrKH/7wBzKZDKZpcuPGDe7du3fk49oTt8jAIL71HL7BAbxy/COeUC6X+eSTT3j3
      3XeZmZlhenqacDhMpVKhVCoxPj7O+fPnmz6LW5ZFIBDANE3C4TD379/n0qVLzMzMcPLkSdbX
      17Gso3/G3TNSXzjO22+9jdPtkuN/sUuxWKRQKLCwsIBhGOi6Tr1ep9FoMDAwwNzcHIZh8MYb
      ey+ipigKY2NjAIyPjzM+vtVoNTAwAEAymTyy+/Gkpgdcd/7yBZm6l7/63mVcLbc4im4Xj8dJ
      pVKEw2FM06RcLpNMJimXywwNDTE6Otr0AgL63BdU/+6DlvahODX8/+o3hzzyp3vKtUFVMg82
      aFjgkr9/AViNKlSzvH7mUZOUSt+rj9pl/UCNUI8KuDGLq6iBJ95AaVSwcgut7cd5tB13ewJg
      mgbBcAJ3qP746tDC9vSZT6l++J9a29gdoOc/fvFiB3RI9gSgkF7kk0//AfDQAI7HxUuEeDH2
      BMAfTnD5wiSrm5b88Yuut/fSiJoXQy9x66tb0hEmul7Tk+B4bIjX34nglnMA0eWazhet12vM
      PZxBZr6Lbtf0FWA9s8Lyw2UMi11XMCxk15lf2iAW66FQ1jkx1tp1g4Q4CMMw+POf/8xrr71G
      tVrlm2++IZVKsby8jGEYDA8PMzIygsvlev6NfUfTAAyOnOWf/fwknu8cAlUrFaqVCoWaD69L
      kY6wDqnVanz22We89dZbrK2tsbKywoULF/j222+pVquMj48zPDy81bB0SNpdNvfJD8SMA9QC
      ZLNZVldXyWQyZDKZnUlzgUCAjY0NvvnmG8rlMmfOnNk95v10hFUKBTbTi6zkTPqGh3YdI7nc
      Gh7NjcepUK4aqC/5Inkva0dYpVLZmYJgGAYLCwuUSiUajQZut5ubN29iGAanTh1ez7bVZph2
      zQc6SC1bTVjJZJJ6vU40GuXevXsEg0FUVeXChQuk02kMw9hTt6+OsNWpu8xXG/jVvS8n4ViS
      cKwzczbEY6qq4vP5KBQK+P1+BgcHGRsbY25ujpMnT5JOp7tqoXOHw8F777238/WjeUSPJBKJ
      fd/23oaY1AQDoSBumQN0bPn9fn70o8drMQwPDwMwMrJ1TvastQzK5TIfffQRP/zhD8lms1y5
      coWLFy+iKAq3bt0ilUrx6quvHvm8/KfRF/6x9XlEqqPteURNGmIyfHT17zk5MsLps6dxShCO
      FX36E6qf/veWtlW9EXz//Fe7vmdZFg6Hg0wmw/DwMJOTk4yPjzM/P09vby8zMzMYhsHly5df
      xPDb16hgbc60tKmlth/avf0AQ2NMbKR5uLDM5NnTbd+geLGserHlPwizVtzzPafTSTgcxufz
      USqVOHnyJLOzs6yvr3P27FlKpVJH5uV3yt7IKAqNholDr1O3kKaYLmLpNVx6gb+6NLn9nToA
      E0MxJoZigEHIvTUb0yxvoPq6f5ncpq8ZJybPMnbCkKnQXUaf/pjq3/6XlrZVPGEC/+GzFzyi
      zmvyPlGD3/3fD/mHa9fpnvcRhGiu6eXRL10+j9/nk5ZI0fWaflKg660vOSTEy6xpAKLRGNn1
      tEyHFl2v+StAo0Ydh5wEi67XNABLSyu4TJ26vAKILrfnbdByZo3BU2epmvflFUB0vb1XhWhU
      uX5nDr1ckStDi663JwCB3hF+lBgCRUGVeUDPpev6rvk1fr+fer2O0+lE0zQURcHR5lRxcXSa
      fhL81EYKy6JcqaBpbnTDQnO334HTTSzL4sqVK0QiERKJBF999RXnz5/n6tWrOw0bly9fJh6X
      xbWPq7Y6FdLLc8wsrrIwN8v0g4eY25OmLMtqewKVZVmY5uOOso7UtnmQ92StaZpUKhUWFhZY
      XV3F4XBQrVZZX19H0zTOnz+Prut8/vnnu2oO+l+793e/tdZ3ajnIftt8nHfXtmf3/X3+9m3N
      H9UNg2omjR6J43U6wGLnQd3PHyIdqDUtC+UQ9gugaRo///nPqdVqmKbJxYsXiUajRCKRnUuB
      FwqFQ51d2e5N7dr3AWrbvQe7ag+y3/38jtqobSsAfUOjOL0hwj0+ynUTVVWwLGXrkKnNtrdd
      bZRHWOt4slZpf7/qdq1VL6HPXgFA2/75KMDGA3oA5qdwAFHAzINz7B0U18Gve2mq7Z2XPXn+
      0U6t8t3aNs8Hn6y1OlXbwv1tKwCK4iAR35oiG9Kes3GXs0ppqh/+55a39/+bj1Bcsvj4cXN4
      lw0Q4iUkARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtnY8LgBpQ5Zlce3aNUZHRwkG
      g1y7do1UKsXCwgKBQIBYLIamafh8vk4PtatJADpIURRmZ2d55ZVX8Hg8XLt2jUKhgMvlwjRN
      Tp06teea9+JwySFQh5imSaFQoFgsMjc3x82bN3E6nRiGwVtvvUU0GuXBgwedHmbXk1eADnE4
      HLzzzjs7X09MTOz6+UGueS9aJwHoAKuSpfbl/2h5e+3Nf4fiDb/AEdlXmwGwmJ6eJhIMsFnW
      SY0MvZhRdTmrXqTx9f9seXv3hX8hAXhB2gpAbn2FTK6Ew63hcWDrRfKsdu+veTi17Sx9ZLF7
      wbmjqoXDWyTvILX7WiTvWRwuDx6ngsOyKNZNWy+SZ7Z7f9XDqW1nsTqF3QvOHVUtHOIieQeo
      3dciec8SCEU4dz7S1oCEOM7kbVBhaxIAYWsSAGFrEgBhaxIAYWsSAGFrEgBhaxIAYWsSAGFr
      EgBhaxIAYWsSAGFrEgBhaxIAYWttBcCyrK1VEU0To4VmAyGOu7b6AaqlPHfuPMAfCVCrGbx6
      5vTOz9pdCA2eXMOpzXWgtor3V2vtv3b3mmjtlW7V7K/WeqL2IOt87Xuf+6k/pPXFDrLfVnbc
      VgAMwyA5NEijWsbpcWBurw5pGEbbLXOGYaKoWzXt1pqGiWLus9Y8rNp22xpN1H3WmqYJj2qt
      9toan7yP+7m/h1FrdWi/rdS2FQDV4aBWztHXl6BSM3GoKoa13RLZdnvhkwvdvRy1quPxInlt
      t4Cqh1NrttnWuHuRvKOphe8uVteh2sNuifQFQqQCoa1/yxX7RBeQd4GErUkAhK1JAIStSQCE
      rUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAISt7SsAK4uz3L43va858UIcJ/taJK9h
      OQj61H20wAhxvOzrFaDH66ZhOVCUwx6OEEdrX68A4ViScGyr4+ZR143lS+B889+3fBsmKpau
      oygKljfWXq3ihO2F5ixvpL1a1f241hNqr9bh2VngznL3tFfr8j2udfnbrA08XlgverL1WrcP
      wzCwLAtFUSCSar3W6dldGx5rvdbh3lVrhUZar1Wdu2uDQ63XKuru2sDAc2sV6yANmGy3CSrK
      1oMktc/06KHeT+1BmKaJ2mZnlV1qD/wukKqqO7/QYqHQ1nnBo9oHU3fI5IoAFAqFtvcLMD8/
      Rym7xtpmac+2373N79YC5NdXyVXqu75XLpfJZrPPrc2sLlOsNZiZmXnmmJsFx2zUKFVrz6x7
      lkf3rVbOU64374F98o+hXs6ytvHsx7hWezweVVVYmn/I0trGU7fZYRkUiuU9+zUaVe7cvk2u
      WN1T+7Tft6qqLMzPU8pmqTfdYmenFArFPbXLC7M8mF145t+jVSsc7krxxWKR+Qe3MXwxKBVw
      uH0koyEKtQKzS3kGIx6cvhA+j5tEIrFzDlEsFnG501y98jmpE8MoihunVUPVggQ8TjbSCzTc
      AZSaQjwZxulQSSQSu/a9vraKUfNSV4J8/eXnTJ46CQrUdNArebzBOKnRwaeOPVuuQFlntZjB
      6fZQtVTCPQEatQrh8LMXqdb1BpsLs6xtFqkXv6JoaPQnY3h7IoQDnmfWmo06yysrBHvCbOby
      6IZFPbuMGhrkwmTqOY+4xebaMtVKlVIhTd0RJuRzkUwmeNprTHo9TwNY0UtYhkE+twlON5Fw
      lOzaGjWHm0pugwuvvY7m2uqvrdXquB11Pv7935IYGEdVTCr1Gr2RENdvT3Hi5Emq5RKBYJBi
      Lku8b5jBvvjOPjdW1hg7fZrFqdssmG6qpSzRWIxSqYrTpaCoGpvLD+mJxLF8cV49sfV7MupF
      7t9bx98foV5uEAsHMap5rt2YIjVxinqlhDcQpF7MEgiFuHPzNkOpCWKxGDjc+PU6N258TaHq
      IOp1oKoW8+tlRpMBSlWdmE/B8cEHH3zwnEe5JdVSnrVMEYcKbs1NIjGAVS+wvJZB9WhoThfx
      ZIKIF1bzBvFIz06t063h9zhR3T78HheGqRKNxVCNGqsbedyaC7fbSTIxSKO0hiOQwO9x7dq/
      w6xTtZxgWrhdLgKhKImwn0KpSjyRwKs58T2tkdkyWJxfoI5Ko1rE4/GTGBjCqFVxOZ0EAoFn
      3vd6Q6dSKROOxjANHbc3QGFznYGhQdRnHu5YzM3MoHk9LC+vEYwmiPb4sEyTSDxBwOd95n7T
      ywsYuEivruD2+Qn3BEhvFknGnhZYi7WVJYqVBpZRo1xtYOg1dFMlt5khGI5SKpWJhnwEw1Gc
      203lpUKeum6ieTx4nA50IBqNoFjg7QkRCUeIhEN43E6qlSqa14dDMTEVJ06HitNpcf/+Q3qC
      QWp1g0gogGUpNBo6Hq+GhYrHoxENBYj2jeDZflo2LJV6uYDL60FvWHiUBi5vEIfmJRIOE42E
      8Xk06tUKLrcblxYgFAkx1J8kk14hVzcJejWC4Qh6rYJT8xGJRAiHIwSDQVwY/H8xuttu1sOt
      ygAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
