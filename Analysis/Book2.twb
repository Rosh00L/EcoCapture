<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1211.0901                               -->
<workbook original-version='18.1' source-build='2024.3.2 (20243.24.1211.0901)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
        <calculation class='tableau' formula='2020.' />
      </column>
    </datasource>
    <datasource caption='v_countrydate+ (ecocapture)' inline='true' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.040164612je0re1ch3d4c10oumvj'>
            <connection class='mysql' dbname='ecocapture' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photography_rating' table='[v_photography_rating]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_twocatstats' table='[v_twocatstats]' type='table' />
        </relation>
        <cols>
          <map key='[City]' value='[v_photography_rating].[City]' />
          <map key='[InputID (v_photography_rating)]' value='[v_photography_rating].[InputID]' />
          <map key='[InputID]' value='[v_photographyvsnonall].[InputID]' />
          <map key='[MAX_]' value='[v_twocatstats].[MAX_]' />
          <map key='[MIN_]' value='[v_twocatstats].[MIN_]' />
          <map key='[Mean]' value='[v_twocatstats].[Mean]' />
          <map key='[Photography (v_twocatstats)]' value='[v_twocatstats].[Photography]' />
          <map key='[Photography]' value='[v_photographyvsnonall].[Photography]' />
          <map key='[STDDEV]' value='[v_twocatstats].[STDDEV]' />
          <map key='[Travel_Date]' value='[v_countrydate].[Travel_Date]' />
          <map key='[Travel_Month]' value='[v_countrydate].[Travel_Month]' />
          <map key='[Travel_Year (v_photography_rating)]' value='[v_photography_rating].[Travel_Year]' />
          <map key='[Travel_Year (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Travel_Year]' />
          <map key='[Travel_Year (v_twocatstats)]' value='[v_twocatstats].[Travel_Year]' />
          <map key='[Travel_Year]' value='[v_countrydate].[Travel_Year]' />
          <map key='[Travel_month (v_photography_rating)]' value='[v_photography_rating].[Travel_month]' />
          <map key='[Travel_month]' value='[v_photographyvsnonall].[Travel_month]' />
          <map key='[Traveller_Country (v_photography_rating)]' value='[v_photography_rating].[Traveller_Country]' />
          <map key='[Traveller_Country]' value='[v_countrydate].[Traveller_Country]' />
          <map key='[Traveller_ID (v_photography_rating)]' value='[v_photography_rating].[Traveller_ID]' />
          <map key='[Traveller_ID (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Traveller_ID]' />
          <map key='[Traveller_ID]' value='[v_countrydate].[Traveller_ID]' />
          <map key='[activity]' value='[v_photography_rating].[activity]' />
          <map key='[inputID]' value='[v_countrydate].[inputID]' />
          <map key='[location_Type]' value='[v_photography_rating].[location_Type]' />
          <map key='[month (v_photography_rating)]' value='[v_photography_rating].[month]' />
          <map key='[month (v_photographyvsnonall)]' value='[v_photographyvsnonall].[month]' />
          <map key='[month]' value='[v_countrydate].[month]' />
          <map key='[rating (v_photographyvsnonall)]' value='[v_photographyvsnonall].[rating]' />
          <map key='[rating]' value='[v_photography_rating].[rating]' />
          <map key='[sentiment_comments]' value='[v_photography_rating].[sentiment_comments]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>inputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[inputID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>inputID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Travel_Date]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Month</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[activity]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>activity</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>18</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location_Type]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>location_Type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_comments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sentiment_comments]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>sentiment_comments</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photography]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Photography</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photography (v_twocatstats)]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>Photography</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_BC61D1326E294C0BA87E508E475D6E36]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_twocatstats)]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_BC61D1326E294C0BA87E508E475D6E36]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Mean]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>Mean</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>7</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_BC61D1326E294C0BA87E508E475D6E36]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MAX_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[MAX_]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>MAX_</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_BC61D1326E294C0BA87E508E475D6E36]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MIN_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[MIN_]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>MIN_</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_BC61D1326E294C0BA87E508E475D6E36]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STDDEV</remote-name>
            <remote-type>5</remote-type>
            <local-name>[STDDEV]</local-name>
            <parent-name>[v_twocatstats]</parent-name>
            <remote-alias>STDDEV</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[v_twocatstats_BC61D1326E294C0BA87E508E475D6E36]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Z-scor' datatype='real' name='[Calculation_3191363324673548296]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([rating (v_photographyvsnonall)])-WINDOW_AVG(SUM([rating (v_photographyvsnonall)])))/WINDOW_STDEV(SUM([rating (v_photographyvsnonall)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='InputID (v photography rating)' datatype='integer' name='[InputID (v_photography_rating)]' role='dimension' type='ordinal' />
      <column caption='Input ID1' datatype='integer' name='[InputID]' role='dimension' type='ordinal' />
      <column caption='Max' datatype='integer' name='[MAX_]' role='measure' type='quantitative' />
      <column caption='Min' datatype='integer' name='[MIN_]' role='measure' type='quantitative' />
      <column caption='Photography (v twocatstats)' datatype='string' name='[Photography (v_twocatstats)]' role='dimension' type='nominal' />
      <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
          <alias key='&quot;photography&quot;' value='Photography Holiday' />
        </aliases>
      </column>
      <column caption='Stddev' datatype='real' name='[STDDEV]' role='measure' type='quantitative' />
      <column caption='Travel Date' datatype='string' name='[Travel_Date]' role='dimension' type='nominal' />
      <column caption='Travel Month' datatype='integer' name='[Travel_Month]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photography rating)' datatype='integer' name='[Travel_Year (v_photography_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v twocatstats)' datatype='integer' name='[Travel_Year (v_twocatstats)]' role='dimension' type='quantitative' />
      <column caption='Travel Year' datatype='integer' name='[Travel_Year]' role='dimension' type='quantitative' />
      <column caption='Travel month (v photography rating)' datatype='integer' name='[Travel_month (v_photography_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel month' datatype='integer' name='[Travel_month]' role='dimension' type='quantitative' />
      <column caption='Traveller Country (v photography rating)' datatype='string' name='[Traveller_Country (v_photography_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller Country' datatype='string' name='[Traveller_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID' datatype='integer' name='[Traveller_ID]' role='dimension' type='ordinal' />
      <column caption='v_countrydate' datatype='table' name='[__tableau_internal_object_id__].[v_countrydate_98771871190540D39E6CEF22D122B18C]' role='measure' type='quantitative' />
      <column caption='v_photography_rating' datatype='table' name='[__tableau_internal_object_id__].[v_photography_rating_CE4A7D81431946439618575566B06C74]' role='measure' type='quantitative' />
      <column caption='v_photographyvsnonall' datatype='table' name='[__tableau_internal_object_id__].[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]' role='measure' type='quantitative' />
      <column caption='v_twocatstats' datatype='table' name='[__tableau_internal_object_id__].[v_twocatstats_BC61D1326E294C0BA87E508E475D6E36]' role='measure' type='quantitative' />
      <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
      <column caption='Input ID' datatype='integer' name='[inputID]' role='dimension' type='ordinal' />
      <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
      <column caption='Month (V Photography Rating)' datatype='string' name='[month (v_photography_rating)]' role='dimension' type='nominal' />
      <column caption='Month (V Photographyvsnonall)' datatype='string' name='[month (v_photographyvsnonall)]' role='dimension' type='nominal' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Rating (V Photographyvsnonall)' datatype='integer' name='[rating (v_photographyvsnonall)]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
      <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
      <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='Max' name='[max:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='None' name='[none:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country]' derivation='None' name='[none:Traveller_Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[max:Traveller_Country (v_photography_rating):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:sentiment_comments:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;negative&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;positive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;neutral&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pays-Bas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Schweiz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Skye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldvies&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mariana Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niederlande&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Near Prague&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reunion Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stewart Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini (Swaziland)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country (v_photography_rating):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Deniyaya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Polonnaruwa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ahangama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katukitula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arugam Bay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nilaveli&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Habarana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tissamaharama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ella&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pussellawa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bentota&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nuwara Eliya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kalutara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ambalangoda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Koslanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kalametiya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beruwala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peradeniya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haputale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trincomalee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hikkaduwa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Unawatuna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kalkudah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kandy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Embilipitiya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saliyapura&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colombo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pinnawala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ampara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mirissa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jaffna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Weligatta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Galle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sigiriya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anuradhapura&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Negombo&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='v_countrydate' id='v_countrydate_98771871190540D39E6CEF22D122B18C'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
            </properties>
          </object>
          <object caption='v_photography_rating' id='v_photography_rating_CE4A7D81431946439618575566B06C74'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photography_rating' table='[v_photography_rating]' type='table' />
            </properties>
          </object>
          <object caption='v_photographyvsnonall' id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
            </properties>
          </object>
          <object caption='v_twocatstats' id='v_twocatstats_BC61D1326E294C0BA87E508E475D6E36'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_twocatstats' table='[v_twocatstats]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID (v_photography_rating)]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photography_rating_CE4A7D81431946439618575566B06C74' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Photography]' />
              <expression op='[Photography (v_twocatstats)]' />
            </expression>
            <first-end-point object-id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696' />
            <second-end-point object-id='v_twocatstats_BC61D1326E294C0BA87E508E475D6E36' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Frq country visitors'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Travel Year (v photography rating)' datatype='integer' name='[Travel_Year (v_photography_rating)]' role='dimension' type='quantitative' />
            <column caption='Traveller Country (v photography rating)' datatype='string' name='[Traveller_Country (v_photography_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_Country (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Travel_Year (v_photography_rating)]' derivation='None' name='[none:Travel_Year (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='None' name='[none:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Traveller_Country (v_photography_rating)])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Asia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;England&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Vietnam&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photography_rating):qk]</cols>
      </table>
      <simple-id uuid='{E24F6573-B02C-4064-851B-4781DD2B59F3}' />
    </worksheet>
    <worksheet name='Line chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
              <calculation class='tableau' formula='2020.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_photographyvsnonall)]' derivation='None' name='[none:Travel_Year (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='color' id='refline0' value='#ff0000' />
            <format attr='stroke-color' id='refline0' value='#ff00004b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</cols>
      </table>
      <simple-id uuid='{0C548562-A996-4A45-9C46-A330E4EE51BC}' />
    </worksheet>
    <worksheet name='Line chart (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
              <calculation class='tableau' formula='2020.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' forecast-column-base='[cnt:Traveller_ID (v_photographyvsnonall):qk]' forecast-column-type='forecast-value' name='[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_photographyvsnonall)]' derivation='None' name='[none:Travel_Year (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='color' id='refline0' value='#ff0000' />
            <format attr='stroke-color' id='refline0' value='#ff00004b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Covid 19' label-type='custom' probability='95' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{87A7AAF9-8AA3-4318-BFA5-BB2477C400F5}' />
    </worksheet>
    <worksheet name='Non vs Poto'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</cols>
      </table>
      <simple-id uuid='{6A50E07A-6C64-4E2D-A8D6-C7B847FDFC3F}' />
    </worksheet>
    <worksheet name='Photo Activity'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='65' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='-90' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' id='legend-color' value='center' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</cols>
      </table>
      <simple-id uuid='{8ACD1209-7334-4E56-857C-B5BB9F8D0C52}' />
    </worksheet>
    <worksheet name='Photo Holiday World Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Traveller Country' datatype='string' name='[Traveller_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Traveller ID' datatype='integer' name='[Traveller_ID]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID]' derivation='Count' name='[cnt:Traveller_ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_Country]' derivation='None' name='[none:Traveller_Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID]' derivation='Count' name='[pcto:cnt:Traveller_ID:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Traveller_Country]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Photography:nk]' member='&quot;No photography&quot;' />
              <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]'>
            <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([activity])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Asia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bermuda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bolivia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Brunei Darussalam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cape Verde&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Channel Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Curaçao&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;England&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Eswatini (Swaziland)&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Isle of Skye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Liechtenstein&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Malawi&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Maldvies&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mariana Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Monaco&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Near Prague&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Niederlande&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Palestinian Territories&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Pays-Bas&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Republic of Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Reunion Island&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Samoa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Schweiz&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Seychelles&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Somalia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;South America&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Stewart Island&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Taiwan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Venezuela&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Vietnam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Wales&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Yemen&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]' field-type='quantitative' max='32056882.40199738' min='-3724079.2519264948' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]' field-type='quantitative' max='10766591.196134271' min='-6098587.5064701596' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3102B1BC-FA5F-46C0-9636-EDC5326D6981}' />
    </worksheet>
    <worksheet name='Rating'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7AB4EE68-1BAC-4E59-B2E4-2B1F6D160702}' />
    </worksheet>
    <worksheet name='SIA'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
              <wedge-size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2E56FC8B-EDFB-414D-AB93-5A9226D14142}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column datatype='real' name='[Mean]' role='measure' type='quantitative' />
            <column caption='Photography (v twocatstats)' datatype='string' name='[Photography (v_twocatstats)]' role='dimension' type='nominal' />
            <column caption='Travel Year (v twocatstats)' datatype='integer' name='[Travel_Year (v_twocatstats)]' role='dimension' type='quantitative' />
            <column-instance column='[Photography (v_twocatstats)]' derivation='None' name='[none:Photography (v_twocatstats):nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_twocatstats)]' derivation='None' name='[none:Travel_Year (v_twocatstats):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mean]' derivation='Sum' name='[sum:Mean:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:Mean:qk]</rows>
        <cols>([federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk] * [federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_twocatstats):qk])</cols>
      </table>
      <simple-id uuid='{3B6B47F6-527E-4653-B786-4AA091B4BD4C}' />
    </worksheet>
    <worksheet name='Stat'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column caption='Rating (V Photographyvsnonall)' datatype='integer' name='[rating (v_photographyvsnonall)]' role='measure' type='quantitative' />
            <column-instance column='[rating (v_photographyvsnonall)]' derivation='Sum' name='[sum:rating (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating (v_photographyvsnonall):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</cols>
      </table>
      <simple-id uuid='{B4F9E845-590C-4317-AE30-26D0E4BFAC9D}' />
    </worksheet>
    <worksheet name='type of visit'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='Count' name='[cnt:City:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
            <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[location_Type]' derivation='None' name='[none:location_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([activity])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' direction='DESC' using='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]' value='52' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]</rows>
        <cols>([federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk] / [federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk])</cols>
      </table>
      <simple-id uuid='{EF528593-29D6-41CC-B9C9-46FD7FABCCC7}' />
    </worksheet>
    <worksheet name='visit buy month'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
            <column caption='Month (V Photography Rating)' datatype='string' name='[month (v_photography_rating)]' role='dimension' type='nominal' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[month (v_photography_rating)]' derivation='None' name='[none:month (v_photography_rating):nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' value='12' />
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]' value='12' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photography_rating):nk]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk] + [federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk])</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photography_rating):nk]</cols>
      </table>
      <simple-id uuid='{926ADA61-A842-4E77-9E74-95CFABBF94A5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='927' maxwidth='1469' minheight='927' minwidth='1469' preset-index='16' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
          <calculation class='tableau' formula='2020.' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98274' id='7' param='horz' type-v2='layout-flow' w='98910' x='545' y='863'>
            <zone h='98274' id='5' type-v2='layout-basic' w='96051' x='545' y='863'>
              <zone h='49139' id='10' name='Photo Activity' w='48136' x='545' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49139' id='12' name='SIA' w='14857' x='81739' y='49998'>
                <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49139' id='15' name='Rating' w='33058' x='48681' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49135' id='31' name='Photo Holiday World Map' w='52552' x='545' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49135' id='33' name='Line chart' w='43499' x='53097' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='42' h='98274' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='2859' x='96596' y='863'>
              <zone h='5609' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='2859' x='96596' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22222' id='11' name='Photo Activity' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='2859' x='96596' y='6472'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9277' id='13' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='2859' x='96596' y='28694'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4962' id='14' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type-v2='size' w='2859' x='96596' y='37971'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49084' id='32' name='Photo Holiday World Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' type-v2='color' w='2859' x='96596' y='42933'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7120' id='34' name='Line chart' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type-v2='color' w='2859' x='96596' y='92017'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='42' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98274' id='41' param='vert' type-v2='layout-flow' w='98910' x='545' y='863'>
                <zone fixed-size='280' h='49135' id='31' is-fixed='true' name='Photo Holiday World Map' w='52552' x='545' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49084' id='32' name='Photo Holiday World Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' type-v2='color' w='2859' x='96596' y='42933'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49135' id='33' is-fixed='true' name='Line chart' w='43499' x='53097' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7120' id='34' name='Line chart' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type-v2='color' w='2859' x='96596' y='92017'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5609' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='2859' x='96596' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49139' id='10' is-fixed='true' name='Photo Activity' w='48136' x='545' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22222' id='11' name='Photo Activity' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='2859' x='96596' y='6472'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49139' id='15' is-fixed='true' name='Rating' w='33058' x='48681' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49139' id='12' is-fixed='true' name='SIA' w='14857' x='81739' y='49998'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9277' id='13' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='2859' x='96596' y='28694'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4962' id='14' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type-v2='size' w='2859' x='96596' y='37971'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8CCA8090-640E-4B2E-82F7-02AE726BECC5}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='927' maxwidth='1469' minheight='927' minwidth='1469' preset-index='16' sizing-mode='fixed' />
      <datasources>
        <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
      </datasources>
      <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
        <column caption='Traveller Country (v photography rating)' datatype='string' name='[Traveller_Country (v_photography_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='None' name='[none:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98274' id='7' param='horz' type-v2='layout-flow' w='98910' x='545' y='863'>
            <zone h='98274' id='5' type-v2='layout-basic' w='88018' x='545' y='863'>
              <zone h='49137' id='10' name='visit buy month' w='65486' x='23077' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='13' name='Frq country visitors' w='45677' x='545' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='16' name='type of visit' w='42341' x='46222' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='33' name='Non vs Poto' w='22532' x='545' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98274' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10892' x='88563' y='863'>
              <zone h='4962' id='11' name='visit buy month' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' type-v2='color' w='10892' x='88563' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22222' id='12' name='visit buy month' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10892' x='88563' y='5825'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23031' id='14' name='Frq country visitors' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type-v2='filter' w='10892' x='88563' y='28047'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11435' id='15' name='Frq country visitors' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' type-v2='size' w='10892' x='88563' y='51078'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23031' id='17' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' type-v2='color' w='10892' x='88563' y='62513'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13593' id='18' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10892' x='88563' y='85544'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='41' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98274' id='40' param='vert' type-v2='layout-flow' w='98910' x='545' y='863'>
                <zone fixed-size='280' h='49137' id='33' is-fixed='true' name='Non vs Poto' w='22532' x='545' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='10' is-fixed='true' name='visit buy month' w='65486' x='23077' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4962' id='11' name='visit buy month' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' type-v2='color' w='10892' x='88563' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22222' id='12' name='visit buy month' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10892' x='88563' y='5825'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23031' id='14' mode='checkdropdown' name='Frq country visitors' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type-v2='filter' w='10892' x='88563' y='28047'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='13' is-fixed='true' name='Frq country visitors' w='45677' x='545' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11435' id='15' name='Frq country visitors' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' type-v2='size' w='10892' x='88563' y='51078'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='16' is-fixed='true' name='type of visit' w='42341' x='46222' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23031' id='17' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' type-v2='color' w='10892' x='88563' y='62513'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13593' id='18' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10892' x='88563' y='85544'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{148B74DC-060A-48C0-8A9E-8CA4F401E31E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Line chart'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Photo Activity'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Photo Holiday World Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Rating' />
        <viewpoint name='SIA'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{46844394-C8DC-47C5-8AB6-F61F276BEB8A}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Frq country visitors'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Non vs Poto'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='type of visit'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='visit buy month'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='33' />
      <simple-id uuid='{79E10B69-7BD1-4F8B-8BCB-3874D47C0A61}' />
    </window>
    <window class='worksheet' maximized='true' name='Line chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EFB47061-EB8B-45F3-81A8-EA64D508D0E7}' />
    </window>
    <window class='worksheet' name='Line chart (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E4C7457-FEF1-485D-A6DB-FB8B09F1C85B}' />
    </window>
    <window class='worksheet' name='Photo Activity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{614D0002-C6CC-45DD-B3C3-55C172326677}' />
    </window>
    <window class='worksheet' name='Photo Holiday World Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D185D9C-B9E4-4F49-A905-1F029C7C6D15}' />
    </window>
    <window class='worksheet' name='SIA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDDD4D80-DDFD-40AB-ABC9-B13F899C78B8}' />
    </window>
    <window class='worksheet' name='Rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F11A9256-BDCD-4620-9D17-A973F9712E45}' />
    </window>
    <window class='worksheet' name='visit buy month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photography_rating):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5ED166A1-4843-4683-888B-4722DFCC388E}' />
    </window>
    <window class='worksheet' name='Frq country visitors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photography_rating):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2FEE0D30-8A7E-4B4D-B0D5-AD51894A3476}' />
    </window>
    <window class='worksheet' name='type of visit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{396FB502-1C76-4CC7-B7CB-7EF9A5E14013}' />
    </window>
    <window class='worksheet' name='Non vs Poto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B892FE8-53E8-4FB3-909E-CFD8384703C4}' />
    </window>
    <window class='worksheet' name='Stat'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Calculation_3191363324667273216:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[usr:Calculation_3191363324668567554:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95C1AC77-0FF8-46EF-A265-09594A86B84D}' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography (v_twocatstats):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_twocatstats):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E12BDB9-C2F5-44FE-BFA7-F81A8983A07E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Frq country visitors' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Line chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Line chart (2)' width='192'>
      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
      /ub/A3FaC4BDHNVPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Non vs Poto' width='183'>
      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
    </thumbnail>
    <thumbnail height='192' name='Photo Activity' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Photo Holiday World Map' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Rating' width='192'>
      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
      /q+DmoXKdSEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SIA' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
      ySJA9rBgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Stat' width='183'>
      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
      gsdls7yDst1udyfnrOmiq/EN267nfPQyxhhfL+K7aKyr5PCOtbziSmFxWkz7QY+LE6WFvPD2
      cH7ySBKXtt5QxlC8ajFHb15Keuy3v3W73W5CQ0M7HU9ZWHihl9Htti6d6usl+Ixfb0vacgT3
      ZcSkmxn66VG+PHswMIzvj7mdBPenlLUbCCNh9jRqN+ZT6uq2pYqf8OO4T7LjpZfZe8KFB8Bz
      moObiyi7Jpb+wPuvPs+2g5XUNQKNdXzx1mbeuGwEMWdPEzaKWXMHULS2GPXds/jxnnsg4++I
      pTBvEeuO1dDgCGFwwnQeTB8CwMjk2zjx8nM8vrKc2sYg+v3wP5k7axzBHczkiJ7IrKuWs2rb
      UBZMjNanJj3Ev82euztoz20XP96WiFwYxS3WUtxiLcUt1lLcYi3FLdZS3GItxS3WUtxiLcUt
      1lLcYi3FLdZS3GItxS3WUtxiLcUt1lLcYi3FLdZS3GItxS3WUtxiLcUt1lLcYi3FLdZS3GIt
      xS3WUtxiLcUt1lLcYi3FLdZS3GItxS3WUtxiLcUt1lLcYi3FLdZS3GItxS3WUtxiLcUt1lLc
      Yi3FLdZS3GItxS3WUtxirQBfL+CfKyUvazUlbR4ZlPoUORMHAo1UFOezYkMJFY0hDB5/H4+m
      jSSs5bg8yMwc1XxUHe/nP827Yxdyz8jA7r4I8RH/jvvLcioS5pM767pzx05u54WdEcxc8huG
      h1Ty1ovPUvCPp8geF3zOU12l69kclMaTCrtH8e9tSWUFjgH9Oxw6umcvQ1JTGN7HAYFR3DA1
      mZq971B39hNdpRS+FsGMtFgcXb5g8Sd+HXfd6SoiLh/Y4diZ05FcdWWbXCNHcE1AJVXtnuVi
      //oiIqakMExl9zh+vS2pqammJD+rac8dFM4V19/FzNmJRDvqqa8PIaTdDuQSHOWnKAeiAUpW
      k1UCweOyWd5B2W63u5Nz1lz06/Al267nfPh13P2TF5Kb3PTzxrpKDu9Yy5pX+7M4LYbevWup
      rQNaA/+axqgBRLV8OXYeuZkxFK9azO8/upb02PaBh4aGnnM+t9tNeHh4F12Nb9h2PefDr7cl
      bTmC+zJi0s0M/fQoXwKXRlTx6ZHGb55QdZAPvH2JbHdUGAmzp1G7MZ9SV/euV3zPj+M+yY6X
      XmbvCRceAM9pDm4uouyaWPoDwxLHULZlK4erG8FTzluF2wkfM5pzPisJG8WsuQMoWluM+u5Z
      /HhbMpDxd8RSmLeIdcdqaHCEMDhhOg+mD2keTua+CfmseCKbisYQYm6dz7wOPgYEcERPZNZV
      y1m1bSgLJkbrU5Meopcxxvh6Ef7C7XZ3uBdvkbKwsBtXc3FsXTrV10vwGT/elohcmP8HDlLq
      2bCN3qcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='type of visit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='visit buy month' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
