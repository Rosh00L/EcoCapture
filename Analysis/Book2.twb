<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1211.0901                               -->
<workbook original-version='18.1' source-build='2024.3.2 (20243.24.1211.0901)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
        <calculation class='tableau' formula='2020.' />
      </column>
    </datasource>
    <datasource caption='v_countrydate+ (ecocapture)' inline='true' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.040164612je0re1ch3d4c10oumvj'>
            <connection class='mysql' dbname='ecocapture' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photography_rating' table='[v_photography_rating]' type='table' />
          <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
        </relation>
        <cols>
          <map key='[City]' value='[v_photography_rating].[City]' />
          <map key='[InputID (v_photography_rating)]' value='[v_photography_rating].[InputID]' />
          <map key='[InputID]' value='[v_photographyvsnonall].[InputID]' />
          <map key='[Photography]' value='[v_photographyvsnonall].[Photography]' />
          <map key='[Travel_Date]' value='[v_countrydate].[Travel_Date]' />
          <map key='[Travel_Month]' value='[v_countrydate].[Travel_Month]' />
          <map key='[Travel_Year (v_photography_rating)]' value='[v_photography_rating].[Travel_Year]' />
          <map key='[Travel_Year (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Travel_Year]' />
          <map key='[Travel_Year]' value='[v_countrydate].[Travel_Year]' />
          <map key='[Travel_month (v_photography_rating)]' value='[v_photography_rating].[Travel_month]' />
          <map key='[Travel_month]' value='[v_photographyvsnonall].[Travel_month]' />
          <map key='[Traveller_Country (v_photography_rating)]' value='[v_photography_rating].[Traveller_Country]' />
          <map key='[Traveller_Country]' value='[v_countrydate].[Traveller_Country]' />
          <map key='[Traveller_ID (v_photography_rating)]' value='[v_photography_rating].[Traveller_ID]' />
          <map key='[Traveller_ID (v_photographyvsnonall)]' value='[v_photographyvsnonall].[Traveller_ID]' />
          <map key='[Traveller_ID]' value='[v_countrydate].[Traveller_ID]' />
          <map key='[activity]' value='[v_photography_rating].[activity]' />
          <map key='[inputID]' value='[v_countrydate].[inputID]' />
          <map key='[location_Type]' value='[v_photography_rating].[location_Type]' />
          <map key='[month (v_photography_rating)]' value='[v_photography_rating].[month]' />
          <map key='[month (v_photographyvsnonall)]' value='[v_photographyvsnonall].[month]' />
          <map key='[month]' value='[v_countrydate].[month]' />
          <map key='[rating (v_photographyvsnonall)]' value='[v_photographyvsnonall].[rating]' />
          <map key='[rating]' value='[v_photography_rating].[rating]' />
          <map key='[sentiment_comments]' value='[v_photography_rating].[sentiment_comments]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>inputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[inputID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>inputID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Travel_Date]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>Travel_Month</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[v_countrydate]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_countrydate_98771871190540D39E6CEF22D122B18C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[activity]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>activity</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>18</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Traveller_Country (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Traveller_Country</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>200</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location_Type]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>location_Type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photography_rating)]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_comments</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sentiment_comments]</local-name>
            <parent-name>[v_photography_rating]</parent-name>
            <remote-alias>sentiment_comments</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photography_rating_CE4A7D81431946439618575566B06C74]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InputID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[InputID]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>InputID</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traveller_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Traveller_ID (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Traveller_ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photography]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Photography</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_Year (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_Year</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Travel_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Travel_month]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>Travel_month</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>262140</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rating (v_photographyvsnonall)]</local-name>
            <parent-name>[v_photographyvsnonall]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Z-scor' datatype='real' name='[Calculation_3191363324673548296]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([rating (v_photographyvsnonall)])-WINDOW_AVG(SUM([rating (v_photographyvsnonall)])))/WINDOW_STDEV(SUM([rating (v_photographyvsnonall)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='InputID (v photography rating)' datatype='integer' name='[InputID (v_photography_rating)]' role='dimension' type='ordinal' />
      <column caption='Input ID1' datatype='integer' name='[InputID]' role='dimension' type='ordinal' />
      <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
          <alias key='&quot;photography&quot;' value='Photography Holiday' />
        </aliases>
      </column>
      <column caption='Travel Date' datatype='string' name='[Travel_Date]' role='dimension' type='nominal' />
      <column caption='Travel Month' datatype='integer' name='[Travel_Month]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photography rating)' datatype='integer' name='[Travel_Year (v_photography_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
      <column caption='Travel Year' datatype='integer' name='[Travel_Year]' role='dimension' type='quantitative' />
      <column caption='Travel month (v photography rating)' datatype='integer' name='[Travel_month (v_photography_rating)]' role='dimension' type='quantitative' />
      <column caption='Travel month' datatype='integer' name='[Travel_month]' role='dimension' type='quantitative' />
      <column caption='Traveller Country (v photography rating)' datatype='string' name='[Traveller_Country (v_photography_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller Country' datatype='string' name='[Traveller_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
      <column caption='Traveller ID' datatype='integer' name='[Traveller_ID]' role='dimension' type='ordinal' />
      <column caption='v_countrydate' datatype='table' name='[__tableau_internal_object_id__].[v_countrydate_98771871190540D39E6CEF22D122B18C]' role='measure' type='quantitative' />
      <column caption='v_photography_rating' datatype='table' name='[__tableau_internal_object_id__].[v_photography_rating_CE4A7D81431946439618575566B06C74]' role='measure' type='quantitative' />
      <column caption='v_photographyvsnonall' datatype='table' name='[__tableau_internal_object_id__].[v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696]' role='measure' type='quantitative' />
      <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
      <column caption='Input ID' datatype='integer' name='[inputID]' role='dimension' type='ordinal' />
      <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
      <column caption='Month (V Photography Rating)' datatype='string' name='[month (v_photography_rating)]' role='dimension' type='nominal' />
      <column caption='Month (V Photographyvsnonall)' datatype='string' name='[month (v_photographyvsnonall)]' role='dimension' type='nominal' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Rating (V Photographyvsnonall)' datatype='integer' name='[rating (v_photographyvsnonall)]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
      <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
      <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='Max' name='[max:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='None' name='[none:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_Country]' derivation='None' name='[none:Traveller_Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
      <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[max:Traveller_Country (v_photography_rating):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pays-Bas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Schweiz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Skye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldvies&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mariana Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niederlande&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Near Prague&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reunion Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stewart Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini (Swaziland)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:sentiment_comments:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;negative&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;positive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;neutral&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Traveller_Country (v_photography_rating):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Deniyaya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Polonnaruwa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ahangama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katukitula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arugam Bay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nilaveli&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Habarana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tissamaharama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ella&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pussellawa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bentota&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nuwara Eliya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kalutara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ambalangoda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Koslanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kalametiya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beruwala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peradeniya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haputale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trincomalee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hikkaduwa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Unawatuna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kalkudah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kandy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Embilipitiya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saliyapura&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colombo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pinnawala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ampara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mirissa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jaffna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Weligatta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Galle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sigiriya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anuradhapura&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Negombo&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='v_countrydate' id='v_countrydate_98771871190540D39E6CEF22D122B18C'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_countrydate' table='[v_countrydate]' type='table' />
            </properties>
          </object>
          <object caption='v_photography_rating' id='v_photography_rating_CE4A7D81431946439618575566B06C74'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photography_rating' table='[v_photography_rating]' type='table' />
            </properties>
          </object>
          <object caption='v_photographyvsnonall' id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696'>
            <properties context=''>
              <relation connection='mysql.040164612je0re1ch3d4c10oumvj' name='v_photographyvsnonall' table='[v_photographyvsnonall]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID (v_photography_rating)]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photography_rating_CE4A7D81431946439618575566B06C74' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[inputID]' />
              <expression op='[InputID]' />
            </expression>
            <first-end-point object-id='v_countrydate_98771871190540D39E6CEF22D122B18C' />
            <second-end-point object-id='v_photographyvsnonall_8E5696C1B9BC49C781BBD47A9549C696' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Frq country visitors'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Travel Year (v photography rating)' datatype='integer' name='[Travel_Year (v_photography_rating)]' role='dimension' type='quantitative' />
            <column caption='Traveller Country (v photography rating)' datatype='string' name='[Traveller_Country (v_photography_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_Country (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Travel_Year (v_photography_rating)]' derivation='None' name='[none:Travel_Year (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='None' name='[none:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Traveller_Country (v_photography_rating)])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Asia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;England&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country (v_photography_rating):nk]' member='&quot;Vietnam&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photography_rating):qk]</cols>
      </table>
      <simple-id uuid='{E24F6573-B02C-4064-851B-4781DD2B59F3}' />
    </worksheet>
    <worksheet name='Line chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
              <calculation class='tableau' formula='2020.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_photographyvsnonall)]' derivation='None' name='[none:Travel_Year (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='color' id='refline0' value='#ff0000' />
            <format attr='stroke-color' id='refline0' value='#ff00004b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</cols>
      </table>
      <simple-id uuid='{0C548562-A996-4A45-9C46-A330E4EE51BC}' />
    </worksheet>
    <worksheet name='Line chart (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
              <calculation class='tableau' formula='2020.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Travel Year (v photographyvsnonall)' datatype='integer' name='[Travel_Year (v_photographyvsnonall)]' role='dimension' type='quantitative' />
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' forecast-column-base='[cnt:Traveller_ID (v_photographyvsnonall):qk]' forecast-column-type='forecast-value' name='[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel_Year (v_photographyvsnonall)]' derivation='None' name='[none:Travel_Year (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='color' id='refline0' value='#ff0000' />
            <format attr='stroke-color' id='refline0' value='#ff00004b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Covid 19' label-type='custom' probability='95' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[fVal:cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{87A7AAF9-8AA3-4318-BFA5-BB2477C400F5}' />
    </worksheet>
    <worksheet name='Non vs Poto'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Traveller ID (v photographyvsnonall)' datatype='integer' name='[Traveller_ID (v_photographyvsnonall)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photographyvsnonall)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photographyvsnonall):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</cols>
      </table>
      <simple-id uuid='{6A50E07A-6C64-4E2D-A8D6-C7B847FDFC3F}' />
    </worksheet>
    <worksheet name='Photo Activity'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='65' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' value='-90' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' id='legend-color' value='center' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</cols>
      </table>
      <simple-id uuid='{8ACD1209-7334-4E56-857C-B5BB9F8D0C52}' />
    </worksheet>
    <worksheet name='Photo Holiday World Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column caption='Traveller Country' datatype='string' name='[Traveller_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Traveller ID' datatype='integer' name='[Traveller_ID]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID]' derivation='Count' name='[cnt:Traveller_ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_Country]' derivation='None' name='[none:Traveller_Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID]' derivation='Count' name='[pcto:cnt:Traveller_ID:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Traveller_Country]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Photography:nk]' member='&quot;No photography&quot;' />
              <groupfilter function='member' level='[none:Photography:nk]' member='&quot;photography&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]'>
            <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([activity])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Asia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bermuda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bolivia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Brunei Darussalam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cape Verde&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Channel Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Curaçao&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;England&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Eswatini (Swaziland)&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Isle of Skye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Liechtenstein&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Malawi&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Maldvies&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mariana Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Monaco&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Near Prague&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Niederlande&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Palestinian Territories&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Pays-Bas&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Republic of Ireland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Reunion Island&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Samoa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Schweiz&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Seychelles&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Somalia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;South America&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Stewart Island&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Taiwan&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Venezuela&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Vietnam&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Wales&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Yemen&quot;' />
                  <groupfilter function='member' level='[none:Traveller_Country:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]</column>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]' field-type='quantitative' max='32056882.40199738' min='-3724079.2519264948' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]' field-type='quantitative' max='10766591.196134271' min='-6098587.5064701596' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Latitude (generated)]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3102B1BC-FA5F-46C0-9636-EDC5326D6981}' />
    </worksheet>
    <worksheet name='Rating'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7AB4EE68-1BAC-4E59-B2E4-2B1F6D160702}' />
    </worksheet>
    <worksheet name='SIA'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[sentiment_comments]' derivation='None' name='[none:sentiment_comments:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment Comments' datatype='string' name='[sentiment_comments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
              <wedge-size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2E56FC8B-EDFB-414D-AB93-5A9226D14142}' />
    </worksheet>
    <worksheet name='Stat'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Photography1' datatype='string' name='[Photography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;No photography&quot;' value=' Non Photography Holiday' />
                <alias key='&quot;photography&quot;' value='Photography Holiday' />
              </aliases>
            </column>
            <column-instance column='[Photography]' derivation='None' name='[none:Photography:nk]' pivot='key' type='nominal' />
            <column caption='Rating (V Photographyvsnonall)' datatype='integer' name='[rating (v_photographyvsnonall)]' role='measure' type='quantitative' />
            <column-instance column='[rating (v_photographyvsnonall)]' derivation='Sum' name='[sum:rating (v_photographyvsnonall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating (v_photographyvsnonall):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[sum:rating (v_photographyvsnonall):qk]</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</cols>
      </table>
      <simple-id uuid='{B4F9E845-590C-4317-AE30-26D0E4BFAC9D}' />
    </worksheet>
    <worksheet name='type of visit'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='Count' name='[cnt:City:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
            <column caption='location Type' datatype='string' name='[location_Type]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[location_Type]' derivation='None' name='[none:location_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([activity])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' direction='DESC' using='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]' value='52' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' />
              <size column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]</rows>
        <cols>([federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk] / [federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk])</cols>
      </table>
      <simple-id uuid='{EF528593-29D6-41CC-B9C9-46FD7FABCCC7}' />
    </worksheet>
    <worksheet name='visit buy month'>
      <table>
        <view>
          <datasources>
            <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
            <column caption='Traveller ID (v photography rating)' datatype='integer' name='[Traveller_ID (v_photography_rating)]' role='dimension' type='ordinal' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative' />
            <column-instance column='[activity]' derivation='Count' name='[cnt:activity:qk]' pivot='key' type='quantitative' />
            <column caption='Month (V Photography Rating)' datatype='string' name='[month (v_photography_rating)]' role='dimension' type='nominal' />
            <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
            <column-instance column='[month (v_photography_rating)]' derivation='None' name='[none:month (v_photography_rating):nk]' pivot='key' type='nominal' />
            <column-instance column='[Traveller_ID (v_photography_rating)]' derivation='Count' name='[pcto:cnt:Traveller_ID (v_photography_rating):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' />
              <text column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[pcto:cnt:Traveller_ID (v_photography_rating):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk] + [federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:activity:qk])</rows>
        <cols>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photography_rating):nk]</cols>
      </table>
      <simple-id uuid='{926ADA61-A842-4E77-9E74-95CFABBF94A5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='927' maxwidth='1469' minheight='927' minwidth='1469' preset-index='16' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Covid 19 Year' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='2020.'>
          <calculation class='tableau' formula='2020.' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98274' id='7' param='horz' type-v2='layout-flow' w='98910' x='545' y='863'>
            <zone h='98274' id='5' type-v2='layout-basic' w='96051' x='545' y='863'>
              <zone h='49139' id='10' name='Photo Activity' w='48136' x='545' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49139' id='12' name='SIA' w='14857' x='81739' y='49998'>
                <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49139' id='15' name='Rating' w='33058' x='48681' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49135' id='31' name='Photo Holiday World Map' w='52552' x='545' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49135' id='33' name='Line chart' w='43499' x='53097' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='42' h='98274' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='2859' x='96596' y='863'>
              <zone h='5609' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='2859' x='96596' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22222' id='11' name='Photo Activity' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='2859' x='96596' y='6472'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9277' id='13' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='2859' x='96596' y='28694'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4962' id='14' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type-v2='size' w='2859' x='96596' y='37971'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49084' id='32' name='Photo Holiday World Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' type-v2='color' w='2859' x='96596' y='42933'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7120' id='34' name='Line chart' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type-v2='color' w='2859' x='96596' y='92017'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='40' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98274' id='39' param='vert' type-v2='layout-flow' w='98910' x='545' y='863'>
                <zone fixed-size='280' h='49135' id='31' is-fixed='true' name='Photo Holiday World Map' w='52552' x='545' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49084' id='32' name='Photo Holiday World Map' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' type-v2='color' w='2859' x='96596' y='42933'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49135' id='33' is-fixed='true' name='Line chart' w='43499' x='53097' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7120' id='34' name='Line chart' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type-v2='color' w='2859' x='96596' y='92017'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5609' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='2859' x='96596' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49139' id='10' is-fixed='true' name='Photo Activity' w='48136' x='545' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22222' id='11' name='Photo Activity' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='2859' x='96596' y='6472'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49139' id='15' is-fixed='true' name='Rating' w='33058' x='48681' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49139' id='12' is-fixed='true' name='SIA' w='14857' x='81739' y='49998'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9277' id='13' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type-v2='color' w='2859' x='96596' y='28694'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4962' id='14' name='SIA' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type-v2='size' w='2859' x='96596' y='37971'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8CCA8090-640E-4B2E-82F7-02AE726BECC5}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='927' maxwidth='1469' minheight='927' minwidth='1469' preset-index='16' sizing-mode='fixed' />
      <datasources>
        <datasource caption='v_countrydate+ (ecocapture)' name='federated.0dw3bjc0btffts1gejoz00gd0l6h' />
      </datasources>
      <datasource-dependencies datasource='federated.0dw3bjc0btffts1gejoz00gd0l6h'>
        <column caption='Traveller Country (v photography rating)' datatype='string' name='[Traveller_Country (v_photography_rating)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Traveller_Country (v_photography_rating)]' derivation='None' name='[none:Traveller_Country (v_photography_rating):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98274' id='7' param='horz' type-v2='layout-flow' w='98910' x='545' y='863'>
            <zone h='98274' id='5' type-v2='layout-basic' w='88018' x='545' y='863'>
              <zone h='49137' id='10' name='visit buy month' w='65486' x='23077' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='13' name='Frq country visitors' w='45677' x='545' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='16' name='type of visit' w='42341' x='46222' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49137' id='33' name='Non vs Poto' w='22532' x='545' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98274' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10892' x='88563' y='863'>
              <zone h='4962' id='11' name='visit buy month' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' type-v2='color' w='10892' x='88563' y='863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22222' id='12' name='visit buy month' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10892' x='88563' y='5825'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23031' id='14' name='Frq country visitors' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type-v2='filter' w='10892' x='88563' y='28047'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11435' id='15' name='Frq country visitors' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' type-v2='size' w='10892' x='88563' y='51078'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23031' id='17' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' type-v2='color' w='10892' x='88563' y='62513'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13593' id='18' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10892' x='88563' y='85544'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='39' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98274' id='38' param='vert' type-v2='layout-flow' w='98910' x='545' y='863'>
                <zone fixed-size='280' h='49137' id='33' is-fixed='true' name='Non vs Poto' w='22532' x='545' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='10' is-fixed='true' name='visit buy month' w='65486' x='23077' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4962' id='11' name='visit buy month' pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' type-v2='color' w='10892' x='88563' y='863'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22222' id='12' name='visit buy month' pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type-v2='color' w='10892' x='88563' y='5825'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23031' id='14' mode='checkdropdown' name='Frq country visitors' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type-v2='filter' w='10892' x='88563' y='28047'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='13' is-fixed='true' name='Frq country visitors' w='45677' x='545' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11435' id='15' name='Frq country visitors' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' type-v2='size' w='10892' x='88563' y='51078'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49137' id='16' is-fixed='true' name='type of visit' w='42341' x='46222' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23031' id='17' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' type-v2='color' w='10892' x='88563' y='62513'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13593' id='18' name='type of visit' pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type-v2='size' w='10892' x='88563' y='85544'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{148B74DC-060A-48C0-8A9E-8CA4F401E31E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Line chart'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Photo Activity'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Photo Holiday World Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Rating' />
        <viewpoint name='SIA'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{46844394-C8DC-47C5-8AB6-F61F276BEB8A}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Frq country visitors'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Non vs Poto'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='type of visit'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='visit buy month'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='33' />
      <simple-id uuid='{79E10B69-7BD1-4F8B-8BCB-3874D47C0A61}' />
    </window>
    <window class='worksheet' name='Line chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EFB47061-EB8B-45F3-81A8-EA64D508D0E7}' />
    </window>
    <window class='worksheet' name='Line chart (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Forecast Indicator:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photographyvsnonall):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E4C7457-FEF1-485D-A6DB-FB8B09F1C85B}' />
    </window>
    <window class='worksheet' name='Photo Activity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{614D0002-C6CC-45DD-B3C3-55C172326677}' />
    </window>
    <window class='worksheet' name='Photo Holiday World Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D185D9C-B9E4-4F49-A905-1F029C7C6D15}' />
    </window>
    <window class='worksheet' name='SIA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_ID (v_photography_rating):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:sentiment_comments:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDDD4D80-DDFD-40AB-ABC9-B13F899C78B8}' />
    </window>
    <window class='worksheet' name='Rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:rating:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F11A9256-BDCD-4620-9D17-A973F9712E45}' />
    </window>
    <window class='worksheet' name='visit buy month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:activity:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:month (v_photography_rating):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5ED166A1-4843-4683-888B-4722DFCC388E}' />
    </window>
    <window class='worksheet' name='Frq country visitors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:Traveller_Country (v_photography_rating):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Travel_Year (v_photography_rating):qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_Country (v_photography_rating):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2FEE0D30-8A7E-4B4D-B0D5-AD51894A3476}' />
    </window>
    <window class='worksheet' name='type of visit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dw3bjc0btffts1gejoz00gd0l6h].[cnt:City:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:City:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photography_rating):ok]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:location_Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{396FB502-1C76-4CC7-B7CB-7EF9A5E14013}' />
    </window>
    <window class='worksheet' name='Non vs Poto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Photography:nk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Traveller_ID (v_photographyvsnonall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B892FE8-53E8-4FB3-909E-CFD8384703C4}' />
    </window>
    <window class='worksheet' name='Stat'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[none:Calculation_3191363324667273216:qk]</field>
            <field>[federated.0dw3bjc0btffts1gejoz00gd0l6h].[usr:Calculation_3191363324668567554:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95C1AC77-0FF8-46EF-A265-09594A86B84D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Frq country visitors' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Line chart' width='192'>
      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
      3vx/lQBPrFkPeEwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Line chart (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Non vs Poto' width='183'>
      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
    </thumbnail>
    <thumbnail height='192' name='Photo Activity' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Photo Holiday World Map' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Rating' width='192'>
      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
      /q+DmoXKdSEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SIA' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Stat' width='183'>
      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
      gsdls7yDst1udyfnrOmiq/EN267nfPQyxhhfL+K7aKyr5PCOtbziSmFxWkz7QY+LE6WFvPD2
      cH7ySBKXtt5QxlC8ajFHb15Keuy3v3W73W5CQ0M7HU9ZWHihl9Htti6d6usl+Ixfb0vacgT3
      ZcSkmxn66VG+PHswMIzvj7mdBPenlLUbCCNh9jRqN+ZT6uq2pYqf8OO4T7LjpZfZe8KFB8Bz
      moObiyi7Jpb+wPuvPs+2g5XUNQKNdXzx1mbeuGwEMWdPEzaKWXMHULS2GPXds/jxnnsg4++I
      pTBvEeuO1dDgCGFwwnQeTB8CwMjk2zjx8nM8vrKc2sYg+v3wP5k7axzBHczkiJ7IrKuWs2rb
      UBZMjNanJj3Ev82euztoz20XP96WiFwYxS3WUtxiLcUt1lLcYi3FLdZS3GItxS3WUtxiLcUt
      1lLcYi3FLdZS3GItxS3WUtxiLcUt1lLcYi3FLdZS3GItxS3WUtxiLcUt1lLcYi3FLdZS3GIt
      xS3WUtxiLcUt1lLcYi3FLdZS3GItxS3WUtxiLcUt1lLcYi3FLdZS3GItxS3WUtxiLcUt1lLc
      Yi3FLdZS3GItxS3WUtxirQBfL+CfKyUvazUlbR4ZlPoUORMHAo1UFOezYkMJFY0hDB5/H4+m
      jSSs5bg8yMwc1XxUHe/nP827Yxdyz8jA7r4I8RH/jvvLcioS5pM767pzx05u54WdEcxc8huG
      h1Ty1ovPUvCPp8geF3zOU12l69kclMaTCrtH8e9tSWUFjgH9Oxw6umcvQ1JTGN7HAYFR3DA1
      mZq971B39hNdpRS+FsGMtFgcXb5g8Sd+HXfd6SoiLh/Y4diZ05FcdWWbXCNHcE1AJVXtnuVi
      //oiIqakMExl9zh+vS2pqammJD+rac8dFM4V19/FzNmJRDvqqa8PIaTdDuQSHOWnKAeiAUpW
      k1UCweOyWd5B2W63u5Nz1lz06/Al267nfPh13P2TF5Kb3PTzxrpKDu9Yy5pX+7M4LYbevWup
      rQNaA/+axqgBRLV8OXYeuZkxFK9azO8/upb02PaBh4aGnnM+t9tNeHh4F12Nb9h2PefDr7cl
      bTmC+zJi0s0M/fQoXwKXRlTx6ZHGb55QdZAPvH2JbHdUGAmzp1G7MZ9SV/euV3zPj+M+yY6X
      XmbvCRceAM9pDm4uouyaWPoDwxLHULZlK4erG8FTzluF2wkfM5pzPisJG8WsuQMoWluM+u5Z
      /HhbMpDxd8RSmLeIdcdqaHCEMDhhOg+mD2keTua+CfmseCKbisYQYm6dz7wOPgYEcERPZNZV
      y1m1bSgLJkbrU5Meopcxxvh6Ef7C7XZ3uBdvkbKwsBtXc3FsXTrV10vwGT/elohcmP8HDlLq
      2bCN3qcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='type of visit' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='visit buy month' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
